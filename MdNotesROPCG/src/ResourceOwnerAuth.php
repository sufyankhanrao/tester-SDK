<?php

declare(strict_types=1);

/*
 * MdNotesROPCGLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MdNotesROPCGLib;

use MdNotesROPCGLib\Models\OAuthToken;

/**
 * Interface for defining the behavior of Authentication.
 */
interface ResourceOwnerAuth
{
    /**
     * String value for oAuthClientId.
     */
    public function getOAuthClientId(): string;

    /**
     * String value for oAuthClientSecret.
     */
    public function getOAuthClientSecret(): string;

    /**
     * String value for oAuthUsername.
     */
    public function getOAuthUsername(): string;

    /**
     * String value for oAuthPassword.
     */
    public function getOAuthPassword(): string;

    /**
     * OAuthToken value for oAuthToken.
     */
    public function getOAuthToken(): ?OAuthToken;

    /**
     * Checks if provided credentials match with existing ones.
     *
     * @param string $oAuthClientId OAuth 2 Client ID
     * @param string $oAuthClientSecret OAuth 2 Client Secret
     * @param string $oAuthUsername OAuth 2 Resource Owner Username
     * @param string $oAuthPassword OAuth 2 Resource Owner Password
     */
    public function equals(
        string $oAuthClientId,
        string $oAuthClientSecret,
        string $oAuthUsername,
        string $oAuthPassword
    ): bool;

    /**
     * Refresh the OAuth token.
     *
     * @param array|null $additionalParams Additional parameters to be sent.
     */
    public function refreshToken(?array $additionalParams = null): OAuthToken;

    /**
     * Fetch the OAuth token.
     *
     * @param array|null $additionalParams Additional parameters to be sent.
     */
    public function fetchToken(?array $additionalParams = null): OAuthToken;

    /**
     * Has the OAuth token expired?
     */
    public function isTokenExpired(): bool;
}
