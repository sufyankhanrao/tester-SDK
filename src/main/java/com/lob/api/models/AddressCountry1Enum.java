/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * AddressCountry1Enum to be used.
 */
public enum AddressCountry1Enum {
    AFGHANISTAN,

    ALBANIA,

    ALGERIA,

    ENUM_AMERICAN_SAMOA,

    ANDORRA,

    ANGOLA,

    ANGUILLA,

    ANTARCTICA,

    ENUM_ANTIGUA_AND_BARBUDA,

    ARGENTINA,

    ARUBA,

    AUSTRALIA,

    AUSTRIA,

    AZERBAIJAN,

    BAHRAIN,

    BANGLADESH,

    BARBADOS,

    BELARUS,

    BELGIUM,

    BELIZE,

    BENIN,

    BERMUDA,

    BHUTAN,

    ENUM_BOLIVIA_PLURINATIONAL_STATE_OF,

    ENUM_BONAIRE_SAINT_EUSTATIUS_AND_SABA,

    ENUM_BOSNIA_AND_HERZEGOVINA,

    BOTSWANA,

    BRAZIL,

    ENUM_BRITISH_INDIAN_OCEAN_TERRITORY,

    ENUM_BRITISH_VIRGIN_ISLANDS,

    ENUM_BRUNEI_DARUSSALAM,

    BULGARIA,

    ENUM_BURKINA_FASO,

    BURUNDI,

    ENUM_CABO_VERDE,

    CAMBODIA,

    CAMEROON,

    CANADA,

    ENUM_CAYMAN_ISLANDS,

    ENUM_CENTRAL_AFRICAN_REPUBLIC,

    CHAD,

    CHILE,

    CHINA,

    COLOMBIA,

    COMOROS,

    CONGO,

    ENUM_CONGO_DEMOCRATIC_REPUBLIC_OF_THE,

    ENUM_COOK_ISLANDS,

    ENUM_COSTA_RICA,

    ENUM_CTE_DIVOIRE,

    CROATIA,

    CUBA,

    CURAAO,

    CYPRUS,

    ENUM_CZECH_REPUBLIC,

    DENMARK,

    DJIBOUTI,

    DOMINICA,

    ENUM_DOMINICAN_REPUBLIC,

    ECUADOR,

    EGYPT,

    ENUM_EL_SALVADOR,

    ENUM_EQUATORIAL_GUINEA,

    ERITREA,

    ESTONIA,

    ESWATINI,

    ETHIOPIA,

    ENUM_FALKLAND_ISLANDS_MALVINAS,

    ENUM_FAROE_ISLANDS,

    FIJI,

    FINLAND,

    FRANCE,

    GABON,

    GAMBIA,

    GEORGIA,

    GERMANY,

    GHANA,

    GIBRALTAR,

    GREECE,

    GREENLAND,

    GRENADA,

    GUATEMALA,

    GUINEA,

    GUINEABISSAU,

    GUYANA,

    HAITI,

    ENUM_HOLY_SEE,

    HONDURAS,

    ENUM_HONG_KONG,

    HUNGARY,

    ICELAND,

    INDIA,

    INDONESIA,

    ENUM_IRAN_ISLAMIC_REPUBLIC_OF,

    IRAQ,

    IRELAND,

    ISRAEL,

    ITALY,

    JAMAICA,

    JAPAN,

    JORDAN,

    KAZAKHSTAN,

    KENYA,

    KIRIBATI,

    ENUM_KOREA_DEMOCRATIC_PEOPLES_REPUBLIC_OF,

    ENUM_KOREA_REPUBLIC_OF,

    KUWAIT,

    KYRGYZSTAN,

    ENUM_LAO_PEOPLES_DEMOCRATIC_REPUBLIC,

    LATVIA,

    LEBANON,

    LESOTHO,

    LIBERIA,

    LIBYA,

    LIECHTENSTEIN,

    LITHUANIA,

    LUXEMBOURG,

    MACAO,

    MACEDONIA,

    MADAGASCAR,

    MALAWI,

    MALAYSIA,

    MALDIVES,

    MALI,

    MALTA,

    MAURITANIA,

    MAURITIUS,

    MEXICO,

    ENUM_MOLDOVA_REPUBLIC_OF,

    MONACO,

    MONGOLIA,

    MONTENEGRO,

    MONTSERRAT,

    MOROCCO,

    MOZAMBIQUE,

    MYANMAR,

    NAMIBIA,

    NAURU,

    NEPAL,

    ENUM_NETHERLAND_ANTILLES,

    NETHERLANDS,

    ENUM_NEW_ZEALAND,

    NICARAGUA,

    NIGER,

    NIGERIA,

    NIUE,

    ENUM_NORFOLK_ISLAND,

    NORWAY,

    OMAN,

    PAKISTAN,

    PANAMA,

    ENUM_PAPUA_NEW_GUINEA,

    PARAGUAY,

    PERU,

    PHILIPPINES,

    PITCAIRN,

    POLAND,

    PORTUGAL,

    QATAR,

    ROMANIA,

    ENUM_RUSSIAN_FEDERATION,

    RWANDA,

    ENUM_SAINT_HELENA,

    ENUM_SAINT_KITTS_AND_NEVIS,

    ENUM_SAINT_LUCIA,

    ENUM_SAINT_VINCENT_AND_THE_GRENADINES,

    SAMOA,

    ENUM_SAN_MARINO,

    ENUM_SAO_TOME_AND_PRINCIPE,

    ENUM_SAUDI_ARABIA,

    SENEGAL,

    SERBIA,

    SEYCHELLES,

    ENUM_SIERRA_LEONE,

    SINGAPORE,

    ENUM_SINT_MAARTEN,

    SLOVAKIA,

    SLOVENIA,

    ENUM_SOLOMON_ISLANDS,

    SOMALIA,

    ENUM_SOUTH_AFRICA,

    ENUM_SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS,

    ENUM_SOUTH_SUDAN,

    SPAIN,

    ENUM_SRI_LANKA,

    SUDAN,

    SURINAME,

    SWEDEN,

    SWITZERLAND,

    ENUM_SYRIAN_ARAB_REPUBLIC,

    TAIWAN,

    TAJIKISTAN,

    TANZANIA,

    THAILAND,

    ENUM_THE_BAHAMAS,

    TIMORLESTE,

    TOGO,

    TOKELAU,

    TONGA,

    ENUM_TRINIDAD_AND_TOBAGO,

    TUNISIA,

    TURKEY,

    TURKMENISTAN,

    ENUM_TURKS_AND_CAICOS_ISLANDS,

    TUVALU,

    UGANDA,

    UKRAINE,

    ENUM_UNITED_ARAB_EMIRATES,

    ENUM_UNITED_KINGDOM,

    URUGUAY,

    UZBEKISTAN,

    VANUATU,

    VENEZUELA,

    ENUM_VIET_NAM,

    ENUM_WESTERN_SAHARA,

    YEMEN,

    ZAMBIA,

    ZIMBABWE;


    private static TreeMap<String, AddressCountry1Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        AFGHANISTAN.value = "AFGHANISTAN";
        ALBANIA.value = "ALBANIA";
        ALGERIA.value = "ALGERIA";
        ENUM_AMERICAN_SAMOA.value = "AMERICAN SAMOA";
        ANDORRA.value = "ANDORRA";
        ANGOLA.value = "ANGOLA";
        ANGUILLA.value = "ANGUILLA";
        ANTARCTICA.value = "ANTARCTICA";
        ENUM_ANTIGUA_AND_BARBUDA.value = "ANTIGUA AND BARBUDA";
        ARGENTINA.value = "ARGENTINA";
        ARUBA.value = "ARUBA";
        AUSTRALIA.value = "AUSTRALIA";
        AUSTRIA.value = "AUSTRIA";
        AZERBAIJAN.value = "AZERBAIJAN";
        BAHRAIN.value = "BAHRAIN";
        BANGLADESH.value = "BANGLADESH";
        BARBADOS.value = "BARBADOS";
        BELARUS.value = "BELARUS";
        BELGIUM.value = "BELGIUM";
        BELIZE.value = "BELIZE";
        BENIN.value = "BENIN";
        BERMUDA.value = "BERMUDA";
        BHUTAN.value = "BHUTAN";
        ENUM_BOLIVIA_PLURINATIONAL_STATE_OF.value = "BOLIVIA (PLURINATIONAL STATE OF)";
        ENUM_BONAIRE_SAINT_EUSTATIUS_AND_SABA.value = "BONAIRE, SAINT EUSTATIUS AND SABA";
        ENUM_BOSNIA_AND_HERZEGOVINA.value = "BOSNIA AND HERZEGOVINA";
        BOTSWANA.value = "BOTSWANA";
        BRAZIL.value = "BRAZIL";
        ENUM_BRITISH_INDIAN_OCEAN_TERRITORY.value = "BRITISH INDIAN OCEAN TERRITORY";
        ENUM_BRITISH_VIRGIN_ISLANDS.value = "BRITISH VIRGIN ISLANDS";
        ENUM_BRUNEI_DARUSSALAM.value = "BRUNEI DARUSSALAM";
        BULGARIA.value = "BULGARIA";
        ENUM_BURKINA_FASO.value = "BURKINA FASO";
        BURUNDI.value = "BURUNDI";
        ENUM_CABO_VERDE.value = "CABO VERDE";
        CAMBODIA.value = "CAMBODIA";
        CAMEROON.value = "CAMEROON";
        CANADA.value = "CANADA";
        ENUM_CAYMAN_ISLANDS.value = "CAYMAN ISLANDS";
        ENUM_CENTRAL_AFRICAN_REPUBLIC.value = "CENTRAL AFRICAN REPUBLIC";
        CHAD.value = "CHAD";
        CHILE.value = "CHILE";
        CHINA.value = "CHINA";
        COLOMBIA.value = "COLOMBIA";
        COMOROS.value = "COMOROS";
        CONGO.value = "CONGO";
        ENUM_CONGO_DEMOCRATIC_REPUBLIC_OF_THE.value = "CONGO, DEMOCRATIC REPUBLIC OF THE";
        ENUM_COOK_ISLANDS.value = "COOK ISLANDS";
        ENUM_COSTA_RICA.value = "COSTA RICA";
        ENUM_CTE_DIVOIRE.value = "CÔTE D'IVOIRE";
        CROATIA.value = "CROATIA";
        CUBA.value = "CUBA";
        CURAAO.value = "CURAÇAO";
        CYPRUS.value = "CYPRUS";
        ENUM_CZECH_REPUBLIC.value = "CZECH REPUBLIC";
        DENMARK.value = "DENMARK";
        DJIBOUTI.value = "DJIBOUTI";
        DOMINICA.value = "DOMINICA";
        ENUM_DOMINICAN_REPUBLIC.value = "DOMINICAN REPUBLIC";
        ECUADOR.value = "ECUADOR";
        EGYPT.value = "EGYPT";
        ENUM_EL_SALVADOR.value = "EL SALVADOR";
        ENUM_EQUATORIAL_GUINEA.value = "EQUATORIAL GUINEA";
        ERITREA.value = "ERITREA";
        ESTONIA.value = "ESTONIA";
        ESWATINI.value = "ESWATINI";
        ETHIOPIA.value = "ETHIOPIA";
        ENUM_FALKLAND_ISLANDS_MALVINAS.value = "FALKLAND ISLANDS (MALVINAS)";
        ENUM_FAROE_ISLANDS.value = "FAROE ISLANDS";
        FIJI.value = "FIJI";
        FINLAND.value = "FINLAND";
        FRANCE.value = "FRANCE";
        GABON.value = "GABON";
        GAMBIA.value = "GAMBIA";
        GEORGIA.value = "GEORGIA";
        GERMANY.value = "GERMANY";
        GHANA.value = "GHANA";
        GIBRALTAR.value = "GIBRALTAR";
        GREECE.value = "GREECE";
        GREENLAND.value = "GREENLAND";
        GRENADA.value = "GRENADA";
        GUATEMALA.value = "GUATEMALA";
        GUINEA.value = "GUINEA";
        GUINEABISSAU.value = "GUINEA-BISSAU";
        GUYANA.value = "GUYANA";
        HAITI.value = "HAITI";
        ENUM_HOLY_SEE.value = "HOLY SEE";
        HONDURAS.value = "HONDURAS";
        ENUM_HONG_KONG.value = "HONG KONG";
        HUNGARY.value = "HUNGARY";
        ICELAND.value = "ICELAND";
        INDIA.value = "INDIA";
        INDONESIA.value = "INDONESIA";
        ENUM_IRAN_ISLAMIC_REPUBLIC_OF.value = "IRAN (ISLAMIC REPUBLIC OF)";
        IRAQ.value = "IRAQ";
        IRELAND.value = "IRELAND";
        ISRAEL.value = "ISRAEL";
        ITALY.value = "ITALY";
        JAMAICA.value = "JAMAICA";
        JAPAN.value = "JAPAN";
        JORDAN.value = "JORDAN";
        KAZAKHSTAN.value = "KAZAKHSTAN";
        KENYA.value = "KENYA";
        KIRIBATI.value = "KIRIBATI";
        ENUM_KOREA_DEMOCRATIC_PEOPLES_REPUBLIC_OF.value = "KOREA (DEMOCRATIC PEOPLE’S REPUBLIC OF)";
        ENUM_KOREA_REPUBLIC_OF.value = "KOREA, REPUBLIC OF";
        KUWAIT.value = "KUWAIT";
        KYRGYZSTAN.value = "KYRGYZSTAN";
        ENUM_LAO_PEOPLES_DEMOCRATIC_REPUBLIC.value = "LAO PEOPLE’S DEMOCRATIC REPUBLIC";
        LATVIA.value = "LATVIA";
        LEBANON.value = "LEBANON";
        LESOTHO.value = "LESOTHO";
        LIBERIA.value = "LIBERIA";
        LIBYA.value = "LIBYA";
        LIECHTENSTEIN.value = "LIECHTENSTEIN";
        LITHUANIA.value = "LITHUANIA";
        LUXEMBOURG.value = "LUXEMBOURG";
        MACAO.value = "MACAO";
        MACEDONIA.value = "MACEDONIA";
        MADAGASCAR.value = "MADAGASCAR";
        MALAWI.value = "MALAWI";
        MALAYSIA.value = "MALAYSIA";
        MALDIVES.value = "MALDIVES";
        MALI.value = "MALI";
        MALTA.value = "MALTA";
        MAURITANIA.value = "MAURITANIA";
        MAURITIUS.value = "MAURITIUS";
        MEXICO.value = "MEXICO";
        ENUM_MOLDOVA_REPUBLIC_OF.value = "MOLDOVA, REPUBLIC OF";
        MONACO.value = "MONACO";
        MONGOLIA.value = "MONGOLIA";
        MONTENEGRO.value = "MONTENEGRO";
        MONTSERRAT.value = "MONTSERRAT";
        MOROCCO.value = "MOROCCO";
        MOZAMBIQUE.value = "MOZAMBIQUE";
        MYANMAR.value = "MYANMAR";
        NAMIBIA.value = "NAMIBIA";
        NAURU.value = "NAURU";
        NEPAL.value = "NEPAL";
        ENUM_NETHERLAND_ANTILLES.value = "NETHERLAND ANTILLES";
        NETHERLANDS.value = "NETHERLANDS";
        ENUM_NEW_ZEALAND.value = "NEW ZEALAND";
        NICARAGUA.value = "NICARAGUA";
        NIGER.value = "NIGER";
        NIGERIA.value = "NIGERIA";
        NIUE.value = "NIUE";
        ENUM_NORFOLK_ISLAND.value = "NORFOLK ISLAND";
        NORWAY.value = "NORWAY";
        OMAN.value = "OMAN";
        PAKISTAN.value = "PAKISTAN";
        PANAMA.value = "PANAMA";
        ENUM_PAPUA_NEW_GUINEA.value = "PAPUA NEW GUINEA";
        PARAGUAY.value = "PARAGUAY";
        PERU.value = "PERU";
        PHILIPPINES.value = "PHILIPPINES";
        PITCAIRN.value = "PITCAIRN";
        POLAND.value = "POLAND";
        PORTUGAL.value = "PORTUGAL";
        QATAR.value = "QATAR";
        ROMANIA.value = "ROMANIA";
        ENUM_RUSSIAN_FEDERATION.value = "RUSSIAN FEDERATION";
        RWANDA.value = "RWANDA";
        ENUM_SAINT_HELENA.value = "SAINT HELENA";
        ENUM_SAINT_KITTS_AND_NEVIS.value = "SAINT KITTS AND NEVIS";
        ENUM_SAINT_LUCIA.value = "SAINT LUCIA";
        ENUM_SAINT_VINCENT_AND_THE_GRENADINES.value = "SAINT VINCENT AND THE GRENADINES";
        SAMOA.value = "SAMOA";
        ENUM_SAN_MARINO.value = "SAN MARINO";
        ENUM_SAO_TOME_AND_PRINCIPE.value = "SAO TOME AND PRINCIPE";
        ENUM_SAUDI_ARABIA.value = "SAUDI ARABIA";
        SENEGAL.value = "SENEGAL";
        SERBIA.value = "SERBIA";
        SEYCHELLES.value = "SEYCHELLES";
        ENUM_SIERRA_LEONE.value = "SIERRA LEONE";
        SINGAPORE.value = "SINGAPORE";
        ENUM_SINT_MAARTEN.value = "SINT MAARTEN";
        SLOVAKIA.value = "SLOVAKIA";
        SLOVENIA.value = "SLOVENIA";
        ENUM_SOLOMON_ISLANDS.value = "SOLOMON ISLANDS";
        SOMALIA.value = "SOMALIA";
        ENUM_SOUTH_AFRICA.value = "SOUTH AFRICA";
        ENUM_SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS.value = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS";
        ENUM_SOUTH_SUDAN.value = "SOUTH SUDAN";
        SPAIN.value = "SPAIN";
        ENUM_SRI_LANKA.value = "SRI LANKA";
        SUDAN.value = "SUDAN";
        SURINAME.value = "SURINAME";
        SWEDEN.value = "SWEDEN";
        SWITZERLAND.value = "SWITZERLAND";
        ENUM_SYRIAN_ARAB_REPUBLIC.value = "SYRIAN ARAB REPUBLIC";
        TAIWAN.value = "TAIWAN";
        TAJIKISTAN.value = "TAJIKISTAN";
        TANZANIA.value = "TANZANIA";
        THAILAND.value = "THAILAND";
        ENUM_THE_BAHAMAS.value = "THE BAHAMAS";
        TIMORLESTE.value = "TIMOR-LESTE";
        TOGO.value = "TOGO";
        TOKELAU.value = "TOKELAU";
        TONGA.value = "TONGA";
        ENUM_TRINIDAD_AND_TOBAGO.value = "TRINIDAD AND TOBAGO";
        TUNISIA.value = "TUNISIA";
        TURKEY.value = "TURKEY";
        TURKMENISTAN.value = "TURKMENISTAN";
        ENUM_TURKS_AND_CAICOS_ISLANDS.value = "TURKS AND CAICOS ISLANDS";
        TUVALU.value = "TUVALU";
        UGANDA.value = "UGANDA";
        UKRAINE.value = "UKRAINE";
        ENUM_UNITED_ARAB_EMIRATES.value = "UNITED ARAB EMIRATES";
        ENUM_UNITED_KINGDOM.value = "UNITED KINGDOM";
        URUGUAY.value = "URUGUAY";
        UZBEKISTAN.value = "UZBEKISTAN";
        VANUATU.value = "VANUATU";
        VENEZUELA.value = "VENEZUELA";
        ENUM_VIET_NAM.value = "VIET NAM";
        ENUM_WESTERN_SAHARA.value = "WESTERN SAHARA";
        YEMEN.value = "YEMEN";
        ZAMBIA.value = "ZAMBIA";
        ZIMBABWE.value = "ZIMBABWE";

        valueMap.put("AFGHANISTAN", AFGHANISTAN);
        valueMap.put("ALBANIA", ALBANIA);
        valueMap.put("ALGERIA", ALGERIA);
        valueMap.put("AMERICAN SAMOA", ENUM_AMERICAN_SAMOA);
        valueMap.put("ANDORRA", ANDORRA);
        valueMap.put("ANGOLA", ANGOLA);
        valueMap.put("ANGUILLA", ANGUILLA);
        valueMap.put("ANTARCTICA", ANTARCTICA);
        valueMap.put("ANTIGUA AND BARBUDA", ENUM_ANTIGUA_AND_BARBUDA);
        valueMap.put("ARGENTINA", ARGENTINA);
        valueMap.put("ARUBA", ARUBA);
        valueMap.put("AUSTRALIA", AUSTRALIA);
        valueMap.put("AUSTRIA", AUSTRIA);
        valueMap.put("AZERBAIJAN", AZERBAIJAN);
        valueMap.put("BAHRAIN", BAHRAIN);
        valueMap.put("BANGLADESH", BANGLADESH);
        valueMap.put("BARBADOS", BARBADOS);
        valueMap.put("BELARUS", BELARUS);
        valueMap.put("BELGIUM", BELGIUM);
        valueMap.put("BELIZE", BELIZE);
        valueMap.put("BENIN", BENIN);
        valueMap.put("BERMUDA", BERMUDA);
        valueMap.put("BHUTAN", BHUTAN);
        valueMap.put("BOLIVIA (PLURINATIONAL STATE OF)", ENUM_BOLIVIA_PLURINATIONAL_STATE_OF);
        valueMap.put("BONAIRE, SAINT EUSTATIUS AND SABA", ENUM_BONAIRE_SAINT_EUSTATIUS_AND_SABA);
        valueMap.put("BOSNIA AND HERZEGOVINA", ENUM_BOSNIA_AND_HERZEGOVINA);
        valueMap.put("BOTSWANA", BOTSWANA);
        valueMap.put("BRAZIL", BRAZIL);
        valueMap.put("BRITISH INDIAN OCEAN TERRITORY", ENUM_BRITISH_INDIAN_OCEAN_TERRITORY);
        valueMap.put("BRITISH VIRGIN ISLANDS", ENUM_BRITISH_VIRGIN_ISLANDS);
        valueMap.put("BRUNEI DARUSSALAM", ENUM_BRUNEI_DARUSSALAM);
        valueMap.put("BULGARIA", BULGARIA);
        valueMap.put("BURKINA FASO", ENUM_BURKINA_FASO);
        valueMap.put("BURUNDI", BURUNDI);
        valueMap.put("CABO VERDE", ENUM_CABO_VERDE);
        valueMap.put("CAMBODIA", CAMBODIA);
        valueMap.put("CAMEROON", CAMEROON);
        valueMap.put("CANADA", CANADA);
        valueMap.put("CAYMAN ISLANDS", ENUM_CAYMAN_ISLANDS);
        valueMap.put("CENTRAL AFRICAN REPUBLIC", ENUM_CENTRAL_AFRICAN_REPUBLIC);
        valueMap.put("CHAD", CHAD);
        valueMap.put("CHILE", CHILE);
        valueMap.put("CHINA", CHINA);
        valueMap.put("COLOMBIA", COLOMBIA);
        valueMap.put("COMOROS", COMOROS);
        valueMap.put("CONGO", CONGO);
        valueMap.put("CONGO, DEMOCRATIC REPUBLIC OF THE", ENUM_CONGO_DEMOCRATIC_REPUBLIC_OF_THE);
        valueMap.put("COOK ISLANDS", ENUM_COOK_ISLANDS);
        valueMap.put("COSTA RICA", ENUM_COSTA_RICA);
        valueMap.put("CÔTE D'IVOIRE", ENUM_CTE_DIVOIRE);
        valueMap.put("CROATIA", CROATIA);
        valueMap.put("CUBA", CUBA);
        valueMap.put("CURAÇAO", CURAAO);
        valueMap.put("CYPRUS", CYPRUS);
        valueMap.put("CZECH REPUBLIC", ENUM_CZECH_REPUBLIC);
        valueMap.put("DENMARK", DENMARK);
        valueMap.put("DJIBOUTI", DJIBOUTI);
        valueMap.put("DOMINICA", DOMINICA);
        valueMap.put("DOMINICAN REPUBLIC", ENUM_DOMINICAN_REPUBLIC);
        valueMap.put("ECUADOR", ECUADOR);
        valueMap.put("EGYPT", EGYPT);
        valueMap.put("EL SALVADOR", ENUM_EL_SALVADOR);
        valueMap.put("EQUATORIAL GUINEA", ENUM_EQUATORIAL_GUINEA);
        valueMap.put("ERITREA", ERITREA);
        valueMap.put("ESTONIA", ESTONIA);
        valueMap.put("ESWATINI", ESWATINI);
        valueMap.put("ETHIOPIA", ETHIOPIA);
        valueMap.put("FALKLAND ISLANDS (MALVINAS)", ENUM_FALKLAND_ISLANDS_MALVINAS);
        valueMap.put("FAROE ISLANDS", ENUM_FAROE_ISLANDS);
        valueMap.put("FIJI", FIJI);
        valueMap.put("FINLAND", FINLAND);
        valueMap.put("FRANCE", FRANCE);
        valueMap.put("GABON", GABON);
        valueMap.put("GAMBIA", GAMBIA);
        valueMap.put("GEORGIA", GEORGIA);
        valueMap.put("GERMANY", GERMANY);
        valueMap.put("GHANA", GHANA);
        valueMap.put("GIBRALTAR", GIBRALTAR);
        valueMap.put("GREECE", GREECE);
        valueMap.put("GREENLAND", GREENLAND);
        valueMap.put("GRENADA", GRENADA);
        valueMap.put("GUATEMALA", GUATEMALA);
        valueMap.put("GUINEA", GUINEA);
        valueMap.put("GUINEA-BISSAU", GUINEABISSAU);
        valueMap.put("GUYANA", GUYANA);
        valueMap.put("HAITI", HAITI);
        valueMap.put("HOLY SEE", ENUM_HOLY_SEE);
        valueMap.put("HONDURAS", HONDURAS);
        valueMap.put("HONG KONG", ENUM_HONG_KONG);
        valueMap.put("HUNGARY", HUNGARY);
        valueMap.put("ICELAND", ICELAND);
        valueMap.put("INDIA", INDIA);
        valueMap.put("INDONESIA", INDONESIA);
        valueMap.put("IRAN (ISLAMIC REPUBLIC OF)", ENUM_IRAN_ISLAMIC_REPUBLIC_OF);
        valueMap.put("IRAQ", IRAQ);
        valueMap.put("IRELAND", IRELAND);
        valueMap.put("ISRAEL", ISRAEL);
        valueMap.put("ITALY", ITALY);
        valueMap.put("JAMAICA", JAMAICA);
        valueMap.put("JAPAN", JAPAN);
        valueMap.put("JORDAN", JORDAN);
        valueMap.put("KAZAKHSTAN", KAZAKHSTAN);
        valueMap.put("KENYA", KENYA);
        valueMap.put("KIRIBATI", KIRIBATI);
        valueMap.put("KOREA (DEMOCRATIC PEOPLE’S REPUBLIC OF)", ENUM_KOREA_DEMOCRATIC_PEOPLES_REPUBLIC_OF);
        valueMap.put("KOREA, REPUBLIC OF", ENUM_KOREA_REPUBLIC_OF);
        valueMap.put("KUWAIT", KUWAIT);
        valueMap.put("KYRGYZSTAN", KYRGYZSTAN);
        valueMap.put("LAO PEOPLE’S DEMOCRATIC REPUBLIC", ENUM_LAO_PEOPLES_DEMOCRATIC_REPUBLIC);
        valueMap.put("LATVIA", LATVIA);
        valueMap.put("LEBANON", LEBANON);
        valueMap.put("LESOTHO", LESOTHO);
        valueMap.put("LIBERIA", LIBERIA);
        valueMap.put("LIBYA", LIBYA);
        valueMap.put("LIECHTENSTEIN", LIECHTENSTEIN);
        valueMap.put("LITHUANIA", LITHUANIA);
        valueMap.put("LUXEMBOURG", LUXEMBOURG);
        valueMap.put("MACAO", MACAO);
        valueMap.put("MACEDONIA", MACEDONIA);
        valueMap.put("MADAGASCAR", MADAGASCAR);
        valueMap.put("MALAWI", MALAWI);
        valueMap.put("MALAYSIA", MALAYSIA);
        valueMap.put("MALDIVES", MALDIVES);
        valueMap.put("MALI", MALI);
        valueMap.put("MALTA", MALTA);
        valueMap.put("MAURITANIA", MAURITANIA);
        valueMap.put("MAURITIUS", MAURITIUS);
        valueMap.put("MEXICO", MEXICO);
        valueMap.put("MOLDOVA, REPUBLIC OF", ENUM_MOLDOVA_REPUBLIC_OF);
        valueMap.put("MONACO", MONACO);
        valueMap.put("MONGOLIA", MONGOLIA);
        valueMap.put("MONTENEGRO", MONTENEGRO);
        valueMap.put("MONTSERRAT", MONTSERRAT);
        valueMap.put("MOROCCO", MOROCCO);
        valueMap.put("MOZAMBIQUE", MOZAMBIQUE);
        valueMap.put("MYANMAR", MYANMAR);
        valueMap.put("NAMIBIA", NAMIBIA);
        valueMap.put("NAURU", NAURU);
        valueMap.put("NEPAL", NEPAL);
        valueMap.put("NETHERLAND ANTILLES", ENUM_NETHERLAND_ANTILLES);
        valueMap.put("NETHERLANDS", NETHERLANDS);
        valueMap.put("NEW ZEALAND", ENUM_NEW_ZEALAND);
        valueMap.put("NICARAGUA", NICARAGUA);
        valueMap.put("NIGER", NIGER);
        valueMap.put("NIGERIA", NIGERIA);
        valueMap.put("NIUE", NIUE);
        valueMap.put("NORFOLK ISLAND", ENUM_NORFOLK_ISLAND);
        valueMap.put("NORWAY", NORWAY);
        valueMap.put("OMAN", OMAN);
        valueMap.put("PAKISTAN", PAKISTAN);
        valueMap.put("PANAMA", PANAMA);
        valueMap.put("PAPUA NEW GUINEA", ENUM_PAPUA_NEW_GUINEA);
        valueMap.put("PARAGUAY", PARAGUAY);
        valueMap.put("PERU", PERU);
        valueMap.put("PHILIPPINES", PHILIPPINES);
        valueMap.put("PITCAIRN", PITCAIRN);
        valueMap.put("POLAND", POLAND);
        valueMap.put("PORTUGAL", PORTUGAL);
        valueMap.put("QATAR", QATAR);
        valueMap.put("ROMANIA", ROMANIA);
        valueMap.put("RUSSIAN FEDERATION", ENUM_RUSSIAN_FEDERATION);
        valueMap.put("RWANDA", RWANDA);
        valueMap.put("SAINT HELENA", ENUM_SAINT_HELENA);
        valueMap.put("SAINT KITTS AND NEVIS", ENUM_SAINT_KITTS_AND_NEVIS);
        valueMap.put("SAINT LUCIA", ENUM_SAINT_LUCIA);
        valueMap.put("SAINT VINCENT AND THE GRENADINES", ENUM_SAINT_VINCENT_AND_THE_GRENADINES);
        valueMap.put("SAMOA", SAMOA);
        valueMap.put("SAN MARINO", ENUM_SAN_MARINO);
        valueMap.put("SAO TOME AND PRINCIPE", ENUM_SAO_TOME_AND_PRINCIPE);
        valueMap.put("SAUDI ARABIA", ENUM_SAUDI_ARABIA);
        valueMap.put("SENEGAL", SENEGAL);
        valueMap.put("SERBIA", SERBIA);
        valueMap.put("SEYCHELLES", SEYCHELLES);
        valueMap.put("SIERRA LEONE", ENUM_SIERRA_LEONE);
        valueMap.put("SINGAPORE", SINGAPORE);
        valueMap.put("SINT MAARTEN", ENUM_SINT_MAARTEN);
        valueMap.put("SLOVAKIA", SLOVAKIA);
        valueMap.put("SLOVENIA", SLOVENIA);
        valueMap.put("SOLOMON ISLANDS", ENUM_SOLOMON_ISLANDS);
        valueMap.put("SOMALIA", SOMALIA);
        valueMap.put("SOUTH AFRICA", ENUM_SOUTH_AFRICA);
        valueMap.put("SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS", ENUM_SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS);
        valueMap.put("SOUTH SUDAN", ENUM_SOUTH_SUDAN);
        valueMap.put("SPAIN", SPAIN);
        valueMap.put("SRI LANKA", ENUM_SRI_LANKA);
        valueMap.put("SUDAN", SUDAN);
        valueMap.put("SURINAME", SURINAME);
        valueMap.put("SWEDEN", SWEDEN);
        valueMap.put("SWITZERLAND", SWITZERLAND);
        valueMap.put("SYRIAN ARAB REPUBLIC", ENUM_SYRIAN_ARAB_REPUBLIC);
        valueMap.put("TAIWAN", TAIWAN);
        valueMap.put("TAJIKISTAN", TAJIKISTAN);
        valueMap.put("TANZANIA", TANZANIA);
        valueMap.put("THAILAND", THAILAND);
        valueMap.put("THE BAHAMAS", ENUM_THE_BAHAMAS);
        valueMap.put("TIMOR-LESTE", TIMORLESTE);
        valueMap.put("TOGO", TOGO);
        valueMap.put("TOKELAU", TOKELAU);
        valueMap.put("TONGA", TONGA);
        valueMap.put("TRINIDAD AND TOBAGO", ENUM_TRINIDAD_AND_TOBAGO);
        valueMap.put("TUNISIA", TUNISIA);
        valueMap.put("TURKEY", TURKEY);
        valueMap.put("TURKMENISTAN", TURKMENISTAN);
        valueMap.put("TURKS AND CAICOS ISLANDS", ENUM_TURKS_AND_CAICOS_ISLANDS);
        valueMap.put("TUVALU", TUVALU);
        valueMap.put("UGANDA", UGANDA);
        valueMap.put("UKRAINE", UKRAINE);
        valueMap.put("UNITED ARAB EMIRATES", ENUM_UNITED_ARAB_EMIRATES);
        valueMap.put("UNITED KINGDOM", ENUM_UNITED_KINGDOM);
        valueMap.put("URUGUAY", URUGUAY);
        valueMap.put("UZBEKISTAN", UZBEKISTAN);
        valueMap.put("VANUATU", VANUATU);
        valueMap.put("VENEZUELA", VENEZUELA);
        valueMap.put("VIET NAM", ENUM_VIET_NAM);
        valueMap.put("WESTERN SAHARA", ENUM_WESTERN_SAHARA);
        valueMap.put("YEMEN", YEMEN);
        valueMap.put("ZAMBIA", ZAMBIA);
        valueMap.put("ZIMBABWE", ZIMBABWE);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static AddressCountry1Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of AddressCountry1Enum values to list of string values.
     * @param toConvert The list of AddressCountry1Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<AddressCountry1Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (AddressCountry1Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 