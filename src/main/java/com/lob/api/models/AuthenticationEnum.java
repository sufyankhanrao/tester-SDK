/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * AuthenticationEnum to be used.
 */
public enum AuthenticationEnum {
    EMAIL_REQUIRED,

    INVALID_API_KEY,

    PUBLISHABLE_KEY_NOT_ALLOWED,

    RATE_LIMIT_EXCEEDED,

    UNAUTHORIZED,

    UNAUTHORIZED_TOKEN;


    private static TreeMap<String, AuthenticationEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        EMAIL_REQUIRED.value = "email_required";
        INVALID_API_KEY.value = "invalid_api_key";
        PUBLISHABLE_KEY_NOT_ALLOWED.value = "publishable_key_not_allowed";
        RATE_LIMIT_EXCEEDED.value = "rate_limit_exceeded";
        UNAUTHORIZED.value = "unauthorized";
        UNAUTHORIZED_TOKEN.value = "unauthorized_token";

        valueMap.put("email_required", EMAIL_REQUIRED);
        valueMap.put("invalid_api_key", INVALID_API_KEY);
        valueMap.put("publishable_key_not_allowed", PUBLISHABLE_KEY_NOT_ALLOWED);
        valueMap.put("rate_limit_exceeded", RATE_LIMIT_EXCEEDED);
        valueMap.put("unauthorized", UNAUTHORIZED);
        valueMap.put("unauthorized_token", UNAUTHORIZED_TOKEN);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static AuthenticationEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of AuthenticationEnum values to list of string values.
     * @param toConvert The list of AuthenticationEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<AuthenticationEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (AuthenticationEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 