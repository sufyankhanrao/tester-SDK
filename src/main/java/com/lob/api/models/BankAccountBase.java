/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.internal.OptionalNullable;

/**
 * This is a model class for BankAccountBase type.
 */
public class BankAccountBase {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private OptionalNullable<String> description;
    private String routingNumber;
    private String accountNumber;
    private AccountTypeEnum accountType;
    private String signatory;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Metadata metadata;

    /**
     * Default constructor.
     */
    public BankAccountBase() {
    }

    /**
     * Initialization constructor.
     * @param  routingNumber  String value for routingNumber.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountType  AccountTypeEnum value for accountType.
     * @param  signatory  String value for signatory.
     * @param  description  String value for description.
     * @param  metadata  Metadata value for metadata.
     */
    public BankAccountBase(
            String routingNumber,
            String accountNumber,
            AccountTypeEnum accountType,
            String signatory,
            String description,
            Metadata metadata) {
        this.description = OptionalNullable.of(description);
        this.routingNumber = routingNumber;
        this.accountNumber = accountNumber;
        this.accountType = accountType;
        this.signatory = signatory;
        this.metadata = metadata;
    }

    /**
     * Internal initialization constructor.
     */
    protected BankAccountBase(String routingNumber, String accountNumber,
            AccountTypeEnum accountType, String signatory, OptionalNullable<String> description,
            Metadata metadata) {
        this.description = description;
        this.routingNumber = routingNumber;
        this.accountNumber = accountNumber;
        this.accountType = accountType;
        this.signatory = signatory;
        this.metadata = metadata;
    }

    /**
     * Internal Getter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * @return Returns the Internal String
     */
    @JsonGetter("description")
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDescription() {
        return this.description;
    }

    /**
     * Getter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * @return Returns the String
     */
    public String getDescription() {
        return OptionalNullable.getFrom(description);
    }

    /**
     * Setter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = OptionalNullable.of(description);
    }

    /**
     * UnSetter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     */
    public void unsetDescription() {
        description = null;
    }

    /**
     * Getter for RoutingNumber.
     * Must be a [valid US routing number](https://www.frbservices.org/index.html).
     * @return Returns the String
     */
    @JsonGetter("routing_number")
    public String getRoutingNumber() {
        return routingNumber;
    }

    /**
     * Setter for RoutingNumber.
     * Must be a [valid US routing number](https://www.frbservices.org/index.html).
     * @param routingNumber Value for String
     */
    @JsonSetter("routing_number")
    public void setRoutingNumber(String routingNumber) {
        this.routingNumber = routingNumber;
    }

    /**
     * Getter for AccountNumber.
     * @return Returns the String
     */
    @JsonGetter("account_number")
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for AccountType.
     * The type of entity that holds the account.
     * @return Returns the AccountTypeEnum
     */
    @JsonGetter("account_type")
    public AccountTypeEnum getAccountType() {
        return accountType;
    }

    /**
     * Setter for AccountType.
     * The type of entity that holds the account.
     * @param accountType Value for AccountTypeEnum
     */
    @JsonSetter("account_type")
    public void setAccountType(AccountTypeEnum accountType) {
        this.accountType = accountType;
    }

    /**
     * Getter for Signatory.
     * The signatory associated with your account. This name will be printed on checks created with
     * this bank account. If you prefer to use a custom signature image on your checks instead,
     * please create your bank account from the [Dashboard](https://dashboard.lob.com/#/login).
     * @return Returns the String
     */
    @JsonGetter("signatory")
    public String getSignatory() {
        return signatory;
    }

    /**
     * Setter for Signatory.
     * The signatory associated with your account. This name will be printed on checks created with
     * this bank account. If you prefer to use a custom signature image on your checks instead,
     * please create your bank account from the [Dashboard](https://dashboard.lob.com/#/login).
     * @param signatory Value for String
     */
    @JsonSetter("signatory")
    public void setSignatory(String signatory) {
        this.signatory = signatory;
    }

    /**
     * Getter for Metadata.
     * Use metadata to store custom information for tagging and labeling back to your internal
     * systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters
     * and values must be at most 500 characters. Neither can contain the characters `"` and `\`.
     * Nested objects are not supported. See [Metadata](#section/Metadata) for more information.
     * @return Returns the Metadata
     */
    @JsonGetter("metadata")
    public Metadata getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Use metadata to store custom information for tagging and labeling back to your internal
     * systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters
     * and values must be at most 500 characters. Neither can contain the characters `"` and `\`.
     * Nested objects are not supported. See [Metadata](#section/Metadata) for more information.
     * @param metadata Value for Metadata
     */
    @JsonSetter("metadata")
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

    /**
     * Converts this BankAccountBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BankAccountBase [" + "routingNumber=" + routingNumber + ", accountNumber="
                + accountNumber + ", accountType=" + accountType + ", signatory=" + signatory
                + ", description=" + description + ", metadata=" + metadata + "]";
    }

    /**
     * Builds a new {@link BankAccountBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BankAccountBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(routingNumber, accountNumber, accountType, signatory)
                .metadata(getMetadata());
        builder.description = internalGetDescription();
        return builder;
    }

    /**
     * Class to build instances of {@link BankAccountBase}.
     */
    public static class Builder {
        private String routingNumber;
        private String accountNumber;
        private AccountTypeEnum accountType;
        private String signatory;
        private OptionalNullable<String> description;
        private Metadata metadata;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  routingNumber  String value for routingNumber.
         * @param  accountNumber  String value for accountNumber.
         * @param  accountType  AccountTypeEnum value for accountType.
         * @param  signatory  String value for signatory.
         */
        public Builder(String routingNumber, String accountNumber, AccountTypeEnum accountType,
                String signatory) {
            this.routingNumber = routingNumber;
            this.accountNumber = accountNumber;
            this.accountType = accountType;
            this.signatory = signatory;
        }

        /**
         * Setter for routingNumber.
         * @param  routingNumber  String value for routingNumber.
         * @return Builder
         */
        public Builder routingNumber(String routingNumber) {
            this.routingNumber = routingNumber;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for accountType.
         * @param  accountType  AccountTypeEnum value for accountType.
         * @return Builder
         */
        public Builder accountType(AccountTypeEnum accountType) {
            this.accountType = accountType;
            return this;
        }

        /**
         * Setter for signatory.
         * @param  signatory  String value for signatory.
         * @return Builder
         */
        public Builder signatory(String signatory) {
            this.signatory = signatory;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = OptionalNullable.of(description);
            return this;
        }

        /**
         * UnSetter for description.
         * @return Builder
         */
        public Builder unsetDescription() {
            description = null;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Metadata value for metadata.
         * @return Builder
         */
        public Builder metadata(Metadata metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Builds a new {@link BankAccountBase} object using the set fields.
         * @return {@link BankAccountBase}
         */
        public BankAccountBase build() {
            return new BankAccountBase(routingNumber, accountNumber, accountType, signatory,
                    description, metadata);
        }
    }
}
