/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * CountryExtendedEnum to be used.
 */
public enum CountryExtendedEnum {
    AD,

    AE,

    AF,

    AG,

    AI,

    AL,

    AN,

    AO,

    AQ,

    AR,

    AT,

    AU,

    AW,

    AZ,

    BA,

    BB,

    BD,

    BE,

    BF,

    BG,

    BH,

    BI,

    BJ,

    BM,

    BN,

    BO,

    BQ,

    BR,

    BS,

    BT,

    BW,

    BY,

    BZ,

    CA,

    CD,

    CG,

    CH,

    CI,

    CK,

    CL,

    CM,

    CN,

    CO,

    CR,

    CS,

    CU,

    CV,

    CW,

    CY,

    CZ,

    DE,

    DJ,

    DK,

    DM,

    DO,

    DZ,

    EC,

    EE,

    EG,

    EH,

    ER,

    ES,

    ET,

    FI,

    FJ,

    FK,

    FO,

    FR,

    GA,

    GB,

    GD,

    GE,

    GH,

    GI,

    GL,

    GM,

    GN,

    GQ,

    GR,

    GS,

    GT,

    GW,

    GY,

    HK,

    HN,

    HR,

    HT,

    HU,

    ID,

    IE,

    IL,

    IN,

    IO,

    IQ,

    IR,

    IS,

    IT,

    JM,

    JO,

    JP,

    KE,

    KG,

    KH,

    KI,

    KM,

    KN,

    KP,

    KR,

    KW,

    KY,

    KZ,

    LA,

    LB,

    LC,

    LI,

    LK,

    LR,

    LS,

    LT,

    LU,

    LV,

    LY,

    MA,

    MC,

    MD,

    ME,

    MG,

    MK,

    ML,

    MM,

    MN,

    MO,

    MR,

    MS,

    MT,

    MU,

    MV,

    MW,

    MX,

    MY,

    MZ,

    NA,

    NE,

    NF,

    NG,

    NI,

    NL,

    NO,

    NP,

    NR,

    NU,

    NZ,

    OM,

    PA,

    PE,

    PG,

    PH,

    PK,

    PL,

    PN,

    PT,

    PY,

    QA,

    RO,

    RS,

    RU,

    RW,

    SA,

    SB,

    SC,

    SD,

    SE,

    SG,

    SH,

    SI,

    SK,

    SL,

    SM,

    SN,

    SO,

    SR,

    SS,

    ST,

    SV,

    SX,

    SY,

    SZ,

    TC,

    TD,

    TG,

    TH,

    TJ,

    TK,

    TL,

    TM,

    TN,

    TO,

    TR,

    TT,

    TV,

    TW,

    TZ,

    UA,

    UG,

    UY,

    UZ,

    VA,

    VC,

    VE,

    VG,

    VN,

    VU,

    WS,

    YE,

    ZA,

    ZM,

    ZW;


    private static TreeMap<String, CountryExtendedEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        AD.value = "AD";
        AE.value = "AE";
        AF.value = "AF";
        AG.value = "AG";
        AI.value = "AI";
        AL.value = "AL";
        AN.value = "AN";
        AO.value = "AO";
        AQ.value = "AQ";
        AR.value = "AR";
        AT.value = "AT";
        AU.value = "AU";
        AW.value = "AW";
        AZ.value = "AZ";
        BA.value = "BA";
        BB.value = "BB";
        BD.value = "BD";
        BE.value = "BE";
        BF.value = "BF";
        BG.value = "BG";
        BH.value = "BH";
        BI.value = "BI";
        BJ.value = "BJ";
        BM.value = "BM";
        BN.value = "BN";
        BO.value = "BO";
        BQ.value = "BQ";
        BR.value = "BR";
        BS.value = "BS";
        BT.value = "BT";
        BW.value = "BW";
        BY.value = "BY";
        BZ.value = "BZ";
        CA.value = "CA";
        CD.value = "CD";
        CG.value = "CG";
        CH.value = "CH";
        CI.value = "CI";
        CK.value = "CK";
        CL.value = "CL";
        CM.value = "CM";
        CN.value = "CN";
        CO.value = "CO";
        CR.value = "CR";
        CS.value = "CS";
        CU.value = "CU";
        CV.value = "CV";
        CW.value = "CW";
        CY.value = "CY";
        CZ.value = "CZ";
        DE.value = "DE";
        DJ.value = "DJ";
        DK.value = "DK";
        DM.value = "DM";
        DO.value = "DO";
        DZ.value = "DZ";
        EC.value = "EC";
        EE.value = "EE";
        EG.value = "EG";
        EH.value = "EH";
        ER.value = "ER";
        ES.value = "ES";
        ET.value = "ET";
        FI.value = "FI";
        FJ.value = "FJ";
        FK.value = "FK";
        FO.value = "FO";
        FR.value = "FR";
        GA.value = "GA";
        GB.value = "GB";
        GD.value = "GD";
        GE.value = "GE";
        GH.value = "GH";
        GI.value = "GI";
        GL.value = "GL";
        GM.value = "GM";
        GN.value = "GN";
        GQ.value = "GQ";
        GR.value = "GR";
        GS.value = "GS";
        GT.value = "GT";
        GW.value = "GW";
        GY.value = "GY";
        HK.value = "HK";
        HN.value = "HN";
        HR.value = "HR";
        HT.value = "HT";
        HU.value = "HU";
        ID.value = "ID";
        IE.value = "IE";
        IL.value = "IL";
        IN.value = "IN";
        IO.value = "IO";
        IQ.value = "IQ";
        IR.value = "IR";
        IS.value = "IS";
        IT.value = "IT";
        JM.value = "JM";
        JO.value = "JO";
        JP.value = "JP";
        KE.value = "KE";
        KG.value = "KG";
        KH.value = "KH";
        KI.value = "KI";
        KM.value = "KM";
        KN.value = "KN";
        KP.value = "KP";
        KR.value = "KR";
        KW.value = "KW";
        KY.value = "KY";
        KZ.value = "KZ";
        LA.value = "LA";
        LB.value = "LB";
        LC.value = "LC";
        LI.value = "LI";
        LK.value = "LK";
        LR.value = "LR";
        LS.value = "LS";
        LT.value = "LT";
        LU.value = "LU";
        LV.value = "LV";
        LY.value = "LY";
        MA.value = "MA";
        MC.value = "MC";
        MD.value = "MD";
        ME.value = "ME";
        MG.value = "MG";
        MK.value = "MK";
        ML.value = "ML";
        MM.value = "MM";
        MN.value = "MN";
        MO.value = "MO";
        MR.value = "MR";
        MS.value = "MS";
        MT.value = "MT";
        MU.value = "MU";
        MV.value = "MV";
        MW.value = "MW";
        MX.value = "MX";
        MY.value = "MY";
        MZ.value = "MZ";
        NA.value = "NA";
        NE.value = "NE";
        NF.value = "NF";
        NG.value = "NG";
        NI.value = "NI";
        NL.value = "NL";
        NO.value = "NO";
        NP.value = "NP";
        NR.value = "NR";
        NU.value = "NU";
        NZ.value = "NZ";
        OM.value = "OM";
        PA.value = "PA";
        PE.value = "PE";
        PG.value = "PG";
        PH.value = "PH";
        PK.value = "PK";
        PL.value = "PL";
        PN.value = "PN";
        PT.value = "PT";
        PY.value = "PY";
        QA.value = "QA";
        RO.value = "RO";
        RS.value = "RS";
        RU.value = "RU";
        RW.value = "RW";
        SA.value = "SA";
        SB.value = "SB";
        SC.value = "SC";
        SD.value = "SD";
        SE.value = "SE";
        SG.value = "SG";
        SH.value = "SH";
        SI.value = "SI";
        SK.value = "SK";
        SL.value = "SL";
        SM.value = "SM";
        SN.value = "SN";
        SO.value = "SO";
        SR.value = "SR";
        SS.value = "SS";
        ST.value = "ST";
        SV.value = "SV";
        SX.value = "SX";
        SY.value = "SY";
        SZ.value = "SZ";
        TC.value = "TC";
        TD.value = "TD";
        TG.value = "TG";
        TH.value = "TH";
        TJ.value = "TJ";
        TK.value = "TK";
        TL.value = "TL";
        TM.value = "TM";
        TN.value = "TN";
        TO.value = "TO";
        TR.value = "TR";
        TT.value = "TT";
        TV.value = "TV";
        TW.value = "TW";
        TZ.value = "TZ";
        UA.value = "UA";
        UG.value = "UG";
        UY.value = "UY";
        UZ.value = "UZ";
        VA.value = "VA";
        VC.value = "VC";
        VE.value = "VE";
        VG.value = "VG";
        VN.value = "VN";
        VU.value = "VU";
        WS.value = "WS";
        YE.value = "YE";
        ZA.value = "ZA";
        ZM.value = "ZM";
        ZW.value = "ZW";

        valueMap.put("AD", AD);
        valueMap.put("AE", AE);
        valueMap.put("AF", AF);
        valueMap.put("AG", AG);
        valueMap.put("AI", AI);
        valueMap.put("AL", AL);
        valueMap.put("AN", AN);
        valueMap.put("AO", AO);
        valueMap.put("AQ", AQ);
        valueMap.put("AR", AR);
        valueMap.put("AT", AT);
        valueMap.put("AU", AU);
        valueMap.put("AW", AW);
        valueMap.put("AZ", AZ);
        valueMap.put("BA", BA);
        valueMap.put("BB", BB);
        valueMap.put("BD", BD);
        valueMap.put("BE", BE);
        valueMap.put("BF", BF);
        valueMap.put("BG", BG);
        valueMap.put("BH", BH);
        valueMap.put("BI", BI);
        valueMap.put("BJ", BJ);
        valueMap.put("BM", BM);
        valueMap.put("BN", BN);
        valueMap.put("BO", BO);
        valueMap.put("BQ", BQ);
        valueMap.put("BR", BR);
        valueMap.put("BS", BS);
        valueMap.put("BT", BT);
        valueMap.put("BW", BW);
        valueMap.put("BY", BY);
        valueMap.put("BZ", BZ);
        valueMap.put("CA", CA);
        valueMap.put("CD", CD);
        valueMap.put("CG", CG);
        valueMap.put("CH", CH);
        valueMap.put("CI", CI);
        valueMap.put("CK", CK);
        valueMap.put("CL", CL);
        valueMap.put("CM", CM);
        valueMap.put("CN", CN);
        valueMap.put("CO", CO);
        valueMap.put("CR", CR);
        valueMap.put("CS", CS);
        valueMap.put("CU", CU);
        valueMap.put("CV", CV);
        valueMap.put("CW", CW);
        valueMap.put("CY", CY);
        valueMap.put("CZ", CZ);
        valueMap.put("DE", DE);
        valueMap.put("DJ", DJ);
        valueMap.put("DK", DK);
        valueMap.put("DM", DM);
        valueMap.put("DO", DO);
        valueMap.put("DZ", DZ);
        valueMap.put("EC", EC);
        valueMap.put("EE", EE);
        valueMap.put("EG", EG);
        valueMap.put("EH", EH);
        valueMap.put("ER", ER);
        valueMap.put("ES", ES);
        valueMap.put("ET", ET);
        valueMap.put("FI", FI);
        valueMap.put("FJ", FJ);
        valueMap.put("FK", FK);
        valueMap.put("FO", FO);
        valueMap.put("FR", FR);
        valueMap.put("GA", GA);
        valueMap.put("GB", GB);
        valueMap.put("GD", GD);
        valueMap.put("GE", GE);
        valueMap.put("GH", GH);
        valueMap.put("GI", GI);
        valueMap.put("GL", GL);
        valueMap.put("GM", GM);
        valueMap.put("GN", GN);
        valueMap.put("GQ", GQ);
        valueMap.put("GR", GR);
        valueMap.put("GS", GS);
        valueMap.put("GT", GT);
        valueMap.put("GW", GW);
        valueMap.put("GY", GY);
        valueMap.put("HK", HK);
        valueMap.put("HN", HN);
        valueMap.put("HR", HR);
        valueMap.put("HT", HT);
        valueMap.put("HU", HU);
        valueMap.put("ID", ID);
        valueMap.put("IE", IE);
        valueMap.put("IL", IL);
        valueMap.put("IN", IN);
        valueMap.put("IO", IO);
        valueMap.put("IQ", IQ);
        valueMap.put("IR", IR);
        valueMap.put("IS", IS);
        valueMap.put("IT", IT);
        valueMap.put("JM", JM);
        valueMap.put("JO", JO);
        valueMap.put("JP", JP);
        valueMap.put("KE", KE);
        valueMap.put("KG", KG);
        valueMap.put("KH", KH);
        valueMap.put("KI", KI);
        valueMap.put("KM", KM);
        valueMap.put("KN", KN);
        valueMap.put("KP", KP);
        valueMap.put("KR", KR);
        valueMap.put("KW", KW);
        valueMap.put("KY", KY);
        valueMap.put("KZ", KZ);
        valueMap.put("LA", LA);
        valueMap.put("LB", LB);
        valueMap.put("LC", LC);
        valueMap.put("LI", LI);
        valueMap.put("LK", LK);
        valueMap.put("LR", LR);
        valueMap.put("LS", LS);
        valueMap.put("LT", LT);
        valueMap.put("LU", LU);
        valueMap.put("LV", LV);
        valueMap.put("LY", LY);
        valueMap.put("MA", MA);
        valueMap.put("MC", MC);
        valueMap.put("MD", MD);
        valueMap.put("ME", ME);
        valueMap.put("MG", MG);
        valueMap.put("MK", MK);
        valueMap.put("ML", ML);
        valueMap.put("MM", MM);
        valueMap.put("MN", MN);
        valueMap.put("MO", MO);
        valueMap.put("MR", MR);
        valueMap.put("MS", MS);
        valueMap.put("MT", MT);
        valueMap.put("MU", MU);
        valueMap.put("MV", MV);
        valueMap.put("MW", MW);
        valueMap.put("MX", MX);
        valueMap.put("MY", MY);
        valueMap.put("MZ", MZ);
        valueMap.put("NA", NA);
        valueMap.put("NE", NE);
        valueMap.put("NF", NF);
        valueMap.put("NG", NG);
        valueMap.put("NI", NI);
        valueMap.put("NL", NL);
        valueMap.put("NO", NO);
        valueMap.put("NP", NP);
        valueMap.put("NR", NR);
        valueMap.put("NU", NU);
        valueMap.put("NZ", NZ);
        valueMap.put("OM", OM);
        valueMap.put("PA", PA);
        valueMap.put("PE", PE);
        valueMap.put("PG", PG);
        valueMap.put("PH", PH);
        valueMap.put("PK", PK);
        valueMap.put("PL", PL);
        valueMap.put("PN", PN);
        valueMap.put("PT", PT);
        valueMap.put("PY", PY);
        valueMap.put("QA", QA);
        valueMap.put("RO", RO);
        valueMap.put("RS", RS);
        valueMap.put("RU", RU);
        valueMap.put("RW", RW);
        valueMap.put("SA", SA);
        valueMap.put("SB", SB);
        valueMap.put("SC", SC);
        valueMap.put("SD", SD);
        valueMap.put("SE", SE);
        valueMap.put("SG", SG);
        valueMap.put("SH", SH);
        valueMap.put("SI", SI);
        valueMap.put("SK", SK);
        valueMap.put("SL", SL);
        valueMap.put("SM", SM);
        valueMap.put("SN", SN);
        valueMap.put("SO", SO);
        valueMap.put("SR", SR);
        valueMap.put("SS", SS);
        valueMap.put("ST", ST);
        valueMap.put("SV", SV);
        valueMap.put("SX", SX);
        valueMap.put("SY", SY);
        valueMap.put("SZ", SZ);
        valueMap.put("TC", TC);
        valueMap.put("TD", TD);
        valueMap.put("TG", TG);
        valueMap.put("TH", TH);
        valueMap.put("TJ", TJ);
        valueMap.put("TK", TK);
        valueMap.put("TL", TL);
        valueMap.put("TM", TM);
        valueMap.put("TN", TN);
        valueMap.put("TO", TO);
        valueMap.put("TR", TR);
        valueMap.put("TT", TT);
        valueMap.put("TV", TV);
        valueMap.put("TW", TW);
        valueMap.put("TZ", TZ);
        valueMap.put("UA", UA);
        valueMap.put("UG", UG);
        valueMap.put("UY", UY);
        valueMap.put("UZ", UZ);
        valueMap.put("VA", VA);
        valueMap.put("VC", VC);
        valueMap.put("VE", VE);
        valueMap.put("VG", VG);
        valueMap.put("VN", VN);
        valueMap.put("VU", VU);
        valueMap.put("WS", WS);
        valueMap.put("YE", YE);
        valueMap.put("ZA", ZA);
        valueMap.put("ZM", ZM);
        valueMap.put("ZW", ZW);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static CountryExtendedEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of CountryExtendedEnum values to list of string values.
     * @param toConvert The list of CountryExtendedEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<CountryExtendedEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (CountryExtendedEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 