/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * GenericEnum to be used.
 */
public enum GenericEnum {
    BAD_REQUEST,

    CONFLICT,

    FEATURE_LIMIT_REACHED,

    INTERNAL_SERVER_ERROR,

    INVALID,

    NOT_DELETABLE,

    NOT_FOUND,

    REQUEST_TIMEOUT,

    SERVICE_UNAVAILABLE,

    UNRECOGNIZED_ENDPOINT,

    UNSUPPORTED_LOB_VERSION;


    private static TreeMap<String, GenericEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        BAD_REQUEST.value = "bad_request";
        CONFLICT.value = "conflict";
        FEATURE_LIMIT_REACHED.value = "feature_limit_reached";
        INTERNAL_SERVER_ERROR.value = "internal_server_error";
        INVALID.value = "invalid";
        NOT_DELETABLE.value = "not_deletable";
        NOT_FOUND.value = "not_found";
        REQUEST_TIMEOUT.value = "request_timeout";
        SERVICE_UNAVAILABLE.value = "service_unavailable";
        UNRECOGNIZED_ENDPOINT.value = "unrecognized_endpoint";
        UNSUPPORTED_LOB_VERSION.value = "unsupported_lob_version";

        valueMap.put("bad_request", BAD_REQUEST);
        valueMap.put("conflict", CONFLICT);
        valueMap.put("feature_limit_reached", FEATURE_LIMIT_REACHED);
        valueMap.put("internal_server_error", INTERNAL_SERVER_ERROR);
        valueMap.put("invalid", INVALID);
        valueMap.put("not_deletable", NOT_DELETABLE);
        valueMap.put("not_found", NOT_FOUND);
        valueMap.put("request_timeout", REQUEST_TIMEOUT);
        valueMap.put("service_unavailable", SERVICE_UNAVAILABLE);
        valueMap.put("unrecognized_endpoint", UNRECOGNIZED_ENDPOINT);
        valueMap.put("unsupported_lob_version", UNSUPPORTED_LOB_VERSION);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static GenericEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of GenericEnum values to list of string values.
     * @param toConvert The list of GenericEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<GenericEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (GenericEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 