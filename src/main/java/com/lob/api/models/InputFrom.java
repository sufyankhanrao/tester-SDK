/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for InputFrom type.
 */
public class InputFrom {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Object from;

    /**
     * Default constructor.
     */
    public InputFrom() {
    }

    /**
     * Initialization constructor.
     * @param  from  Object value for from.
     */
    public InputFrom(
            Object from) {
        this.from = from;
    }

    /**
     * Getter for From.
     * Must either be an address ID or an inline object with correct address parameters. Must be a
     * US address unless using a `custom_envelope`. All addresses will be standardized into
     * uppercase without being modified by verification.
     * @return Returns the Object
     */
    @JsonGetter("from")
    public Object getFrom() {
        return from;
    }

    /**
     * Setter for From.
     * Must either be an address ID or an inline object with correct address parameters. Must be a
     * US address unless using a `custom_envelope`. All addresses will be standardized into
     * uppercase without being modified by verification.
     * @param from Value for Object
     */
    @JsonSetter("from")
    public void setFrom(Object from) {
        this.from = from;
    }

    /**
     * Converts this InputFrom into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "InputFrom [" + "from=" + from + "]";
    }

    /**
     * Builds a new {@link InputFrom.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link InputFrom.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .from(getFrom());
        return builder;
    }

    /**
     * Class to build instances of {@link InputFrom}.
     */
    public static class Builder {
        private Object from;



        /**
         * Setter for from.
         * @param  from  Object value for from.
         * @return Builder
         */
        public Builder from(Object from) {
            this.from = from;
            return this;
        }

        /**
         * Builds a new {@link InputFrom} object using the set fields.
         * @return {@link InputFrom}
         */
        public InputFrom build() {
            return new InputFrom(from);
        }
    }
}
