/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.DateTimeHelper;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for LetterGeneratedBase type.
 */
public class LetterGeneratedBase {
    private Object to;
    private String carrier;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<Thumbnail> thumbnails;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private LocalDate expectedDeliveryDate;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private LocalDateTime dateCreated;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private LocalDateTime dateModified;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Boolean deleted;
    private Object from;
    private String id;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Object templateId;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String templateVersionId;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String object;

    /**
     * Default constructor.
     */
    public LetterGeneratedBase() {
        carrier = "USPS";
    }

    /**
     * Initialization constructor.
     * @param  to  Object value for to.
     * @param  carrier  String value for carrier.
     * @param  from  Object value for from.
     * @param  id  String value for id.
     * @param  thumbnails  List of Thumbnail value for thumbnails.
     * @param  expectedDeliveryDate  LocalDate value for expectedDeliveryDate.
     * @param  dateCreated  LocalDateTime value for dateCreated.
     * @param  dateModified  LocalDateTime value for dateModified.
     * @param  deleted  Boolean value for deleted.
     * @param  templateId  Object value for templateId.
     * @param  templateVersionId  String value for templateVersionId.
     * @param  object  String value for object.
     */
    public LetterGeneratedBase(
            Object to,
            String carrier,
            Object from,
            String id,
            List<Thumbnail> thumbnails,
            LocalDate expectedDeliveryDate,
            LocalDateTime dateCreated,
            LocalDateTime dateModified,
            Boolean deleted,
            Object templateId,
            String templateVersionId,
            String object) {
        this.to = to;
        this.carrier = carrier;
        this.thumbnails = thumbnails;
        this.expectedDeliveryDate = expectedDeliveryDate;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.deleted = deleted;
        this.from = from;
        this.id = id;
        this.templateId = templateId;
        this.templateVersionId = templateVersionId;
        this.object = object;
    }

    /**
     * Getter for To.
     * @return Returns the Object
     */
    @JsonGetter("to")
    public Object getTo() {
        return to;
    }

    /**
     * Setter for To.
     * @param to Value for Object
     */
    @JsonSetter("to")
    public void setTo(Object to) {
        this.to = to;
    }

    /**
     * Getter for Carrier.
     * @return Returns the String
     */
    @JsonGetter("carrier")
    public String getCarrier() {
        return carrier;
    }

    /**
     * Setter for Carrier.
     * @param carrier Value for String
     */
    @JsonSetter("carrier")
    private void setCarrier(String carrier) {
        this.carrier = carrier;
    }

    /**
     * Getter for Thumbnails.
     * @return Returns the List of Thumbnail
     */
    @JsonGetter("thumbnails")
    public List<Thumbnail> getThumbnails() {
        return thumbnails;
    }

    /**
     * Setter for Thumbnails.
     * @param thumbnails Value for List of Thumbnail
     */
    @JsonSetter("thumbnails")
    public void setThumbnails(List<Thumbnail> thumbnails) {
        this.thumbnails = thumbnails;
    }

    /**
     * Getter for ExpectedDeliveryDate.
     * A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its
     * `send_date`.
     * @return Returns the LocalDate
     */
    @JsonGetter("expected_delivery_date")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getExpectedDeliveryDate() {
        return expectedDeliveryDate;
    }

    /**
     * Setter for ExpectedDeliveryDate.
     * A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its
     * `send_date`.
     * @param expectedDeliveryDate Value for LocalDate
     */
    @JsonSetter("expected_delivery_date")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setExpectedDeliveryDate(LocalDate expectedDeliveryDate) {
        this.expectedDeliveryDate = expectedDeliveryDate;
    }

    /**
     * Getter for DateCreated.
     * A timestamp in ISO 8601 format of the date the resource was created.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date_created")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateCreated() {
        return dateCreated;
    }

    /**
     * Setter for DateCreated.
     * A timestamp in ISO 8601 format of the date the resource was created.
     * @param dateCreated Value for LocalDateTime
     */
    @JsonSetter("date_created")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateCreated(LocalDateTime dateCreated) {
        this.dateCreated = dateCreated;
    }

    /**
     * Getter for DateModified.
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date_modified")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateModified() {
        return dateModified;
    }

    /**
     * Setter for DateModified.
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     * @param dateModified Value for LocalDateTime
     */
    @JsonSetter("date_modified")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateModified(LocalDateTime dateModified) {
        this.dateModified = dateModified;
    }

    /**
     * Getter for Deleted.
     * Only returned if the resource has been successfully deleted.
     * @return Returns the Boolean
     */
    @JsonGetter("deleted")
    public Boolean getDeleted() {
        return deleted;
    }

    /**
     * Setter for Deleted.
     * Only returned if the resource has been successfully deleted.
     * @param deleted Value for Boolean
     */
    @JsonSetter("deleted")
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for From.
     * @return Returns the Object
     */
    @JsonGetter("from")
    public Object getFrom() {
        return from;
    }

    /**
     * Setter for From.
     * @param from Value for Object
     */
    @JsonSetter("from")
    public void setFrom(Object from) {
        this.from = from;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `ltr_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `ltr_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for TemplateId.
     * @return Returns the Object
     */
    @JsonGetter("template_id")
    public Object getTemplateId() {
        return templateId;
    }

    /**
     * Setter for TemplateId.
     * @param templateId Value for Object
     */
    @JsonSetter("template_id")
    public void setTemplateId(Object templateId) {
        this.templateId = templateId;
    }

    /**
     * Getter for TemplateVersionId.
     * @return Returns the String
     */
    @JsonGetter("template_version_id")
    public String getTemplateVersionId() {
        return templateVersionId;
    }

    /**
     * Setter for TemplateVersionId.
     * @param templateVersionId Value for String
     */
    @JsonSetter("template_version_id")
    public void setTemplateVersionId(String templateVersionId) {
        this.templateVersionId = templateVersionId;
    }

    /**
     * Getter for Object.
     * @return Returns the String
     */
    @JsonGetter("object")
    public String getObject() {
        return object;
    }

    /**
     * Setter for Object.
     * @param object Value for String
     */
    @JsonSetter("object")
    public void setObject(String object) {
        this.object = object;
    }

    /**
     * Converts this LetterGeneratedBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LetterGeneratedBase [" + "to=" + to + ", carrier=" + carrier + ", from=" + from
                + ", id=" + id + ", thumbnails=" + thumbnails + ", expectedDeliveryDate="
                + expectedDeliveryDate + ", dateCreated=" + dateCreated + ", dateModified="
                + dateModified + ", deleted=" + deleted + ", templateId=" + templateId
                + ", templateVersionId=" + templateVersionId + ", object=" + object + "]";
    }

    /**
     * Builds a new {@link LetterGeneratedBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LetterGeneratedBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(to, carrier, from, id)
                .thumbnails(getThumbnails())
                .expectedDeliveryDate(getExpectedDeliveryDate())
                .dateCreated(getDateCreated())
                .dateModified(getDateModified())
                .deleted(getDeleted())
                .templateId(getTemplateId())
                .templateVersionId(getTemplateVersionId())
                .object(getObject());
        return builder;
    }

    /**
     * Class to build instances of {@link LetterGeneratedBase}.
     */
    public static class Builder {
        private Object to;
        private String carrier = "USPS";
        private Object from;
        private String id;
        private List<Thumbnail> thumbnails;
        private LocalDate expectedDeliveryDate;
        private LocalDateTime dateCreated;
        private LocalDateTime dateModified;
        private Boolean deleted;
        private Object templateId;
        private String templateVersionId;
        private String object;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  to  Object value for to.
         * @param  carrier  String value for carrier.
         * @param  from  Object value for from.
         * @param  id  String value for id.
         */
        public Builder(Object to, String carrier, Object from, String id) {
            this.to = to;
            this.carrier = carrier;
            this.from = from;
            this.id = id;
        }

        /**
         * Setter for to.
         * @param  to  Object value for to.
         * @return Builder
         */
        public Builder to(Object to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for carrier.
         * @param  carrier  String value for carrier.
         * @return Builder
         */
        public Builder carrier(String carrier) {
            this.carrier = carrier;
            return this;
        }

        /**
         * Setter for from.
         * @param  from  Object value for from.
         * @return Builder
         */
        public Builder from(Object from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for thumbnails.
         * @param  thumbnails  List of Thumbnail value for thumbnails.
         * @return Builder
         */
        public Builder thumbnails(List<Thumbnail> thumbnails) {
            this.thumbnails = thumbnails;
            return this;
        }

        /**
         * Setter for expectedDeliveryDate.
         * @param  expectedDeliveryDate  LocalDate value for expectedDeliveryDate.
         * @return Builder
         */
        public Builder expectedDeliveryDate(LocalDate expectedDeliveryDate) {
            this.expectedDeliveryDate = expectedDeliveryDate;
            return this;
        }

        /**
         * Setter for dateCreated.
         * @param  dateCreated  LocalDateTime value for dateCreated.
         * @return Builder
         */
        public Builder dateCreated(LocalDateTime dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }

        /**
         * Setter for dateModified.
         * @param  dateModified  LocalDateTime value for dateModified.
         * @return Builder
         */
        public Builder dateModified(LocalDateTime dateModified) {
            this.dateModified = dateModified;
            return this;
        }

        /**
         * Setter for deleted.
         * @param  deleted  Boolean value for deleted.
         * @return Builder
         */
        public Builder deleted(Boolean deleted) {
            this.deleted = deleted;
            return this;
        }

        /**
         * Setter for templateId.
         * @param  templateId  Object value for templateId.
         * @return Builder
         */
        public Builder templateId(Object templateId) {
            this.templateId = templateId;
            return this;
        }

        /**
         * Setter for templateVersionId.
         * @param  templateVersionId  String value for templateVersionId.
         * @return Builder
         */
        public Builder templateVersionId(String templateVersionId) {
            this.templateVersionId = templateVersionId;
            return this;
        }

        /**
         * Setter for object.
         * @param  object  String value for object.
         * @return Builder
         */
        public Builder object(String object) {
            this.object = object;
            return this;
        }

        /**
         * Builds a new {@link LetterGeneratedBase} object using the set fields.
         * @return {@link LetterGeneratedBase}
         */
        public LetterGeneratedBase build() {
            return new LetterGeneratedBase(to, carrier, from, id, thumbnails, expectedDeliveryDate,
                    dateCreated, dateModified, deleted, templateId, templateVersionId, object);
        }
    }
}
