/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * LetterTypesEnum to be used.
 */
public enum LetterTypesEnum {
    ENUM_LETTERCREATED,

    ENUM_LETTERRENDERED_PDF,

    ENUM_LETTERRENDERED_THUMBNAILS,

    ENUM_LETTERDELETED,

    ENUM_LETTERMAILED,

    ENUM_LETTERIN_TRANSIT,

    ENUM_LETTERIN_LOCAL_AREA,

    ENUM_LETTERPROCESSED_FOR_DELIVERY,

    ENUM_LETTERREROUTED,

    ENUM_LETTERRETURNED_TO_SENDER,

    ENUM_LETTERCERTIFIEDMAILED,

    ENUM_LETTERCERTIFIEDIN_TRANSIT,

    ENUM_LETTERCERTIFIEDIN_LOCAL_AREA,

    ENUM_LETTERCERTIFIEDPROCESSED_FOR_DELIVERY,

    ENUM_LETTERCERTIFIEDREROUTED,

    ENUM_LETTERCERTIFIEDRETURNED_TO_SENDER,

    ENUM_LETTERCERTIFIEDDELIVERED,

    ENUM_LETTERCERTIFIEDPICKUP_AVAILABLE,

    ENUM_LETTERCERTIFIEDISSUE,

    ENUM_LETTERRETURN_ENVELOPECREATED,

    ENUM_LETTERRETURN_ENVELOPEIN_TRANSIT,

    ENUM_LETTERRETURN_ENVELOPEIN_LOCAL_AREA,

    ENUM_LETTERRETURN_ENVELOPEPROCESSED_FOR_DELIVERY,

    ENUM_LETTERRETURN_ENVELOPERE_ROUTED,

    ENUM_LETTERRETURN_ENVELOPERETURNED_TO_SENDER;


    private static TreeMap<String, LetterTypesEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        ENUM_LETTERCREATED.value = "letter.created";
        ENUM_LETTERRENDERED_PDF.value = "letter.rendered_pdf";
        ENUM_LETTERRENDERED_THUMBNAILS.value = "letter.rendered_thumbnails";
        ENUM_LETTERDELETED.value = "letter.deleted";
        ENUM_LETTERMAILED.value = "letter.mailed";
        ENUM_LETTERIN_TRANSIT.value = "letter.in_transit";
        ENUM_LETTERIN_LOCAL_AREA.value = "letter.in_local_area";
        ENUM_LETTERPROCESSED_FOR_DELIVERY.value = "letter.processed_for_delivery";
        ENUM_LETTERREROUTED.value = "letter.re-routed";
        ENUM_LETTERRETURNED_TO_SENDER.value = "letter.returned_to_sender";
        ENUM_LETTERCERTIFIEDMAILED.value = "letter.certified.mailed";
        ENUM_LETTERCERTIFIEDIN_TRANSIT.value = "letter.certified.in_transit";
        ENUM_LETTERCERTIFIEDIN_LOCAL_AREA.value = "letter.certified.in_local_area";
        ENUM_LETTERCERTIFIEDPROCESSED_FOR_DELIVERY.value = "letter.certified.processed_for_delivery";
        ENUM_LETTERCERTIFIEDREROUTED.value = "letter.certified.re-routed";
        ENUM_LETTERCERTIFIEDRETURNED_TO_SENDER.value = "letter.certified.returned_to_sender";
        ENUM_LETTERCERTIFIEDDELIVERED.value = "letter.certified.delivered";
        ENUM_LETTERCERTIFIEDPICKUP_AVAILABLE.value = "letter.certified.pickup_available";
        ENUM_LETTERCERTIFIEDISSUE.value = "letter.certified.issue";
        ENUM_LETTERRETURN_ENVELOPECREATED.value = "letter.return_envelope.created";
        ENUM_LETTERRETURN_ENVELOPEIN_TRANSIT.value = "letter.return_envelope.in_transit";
        ENUM_LETTERRETURN_ENVELOPEIN_LOCAL_AREA.value = "letter.return_envelope.in_local_area";
        ENUM_LETTERRETURN_ENVELOPEPROCESSED_FOR_DELIVERY.value = "letter.return_envelope.processed_for_delivery";
        ENUM_LETTERRETURN_ENVELOPERE_ROUTED.value = "letter.return_envelope.re_routed";
        ENUM_LETTERRETURN_ENVELOPERETURNED_TO_SENDER.value = "letter.return_envelope.returned_to_sender";

        valueMap.put("letter.created", ENUM_LETTERCREATED);
        valueMap.put("letter.rendered_pdf", ENUM_LETTERRENDERED_PDF);
        valueMap.put("letter.rendered_thumbnails", ENUM_LETTERRENDERED_THUMBNAILS);
        valueMap.put("letter.deleted", ENUM_LETTERDELETED);
        valueMap.put("letter.mailed", ENUM_LETTERMAILED);
        valueMap.put("letter.in_transit", ENUM_LETTERIN_TRANSIT);
        valueMap.put("letter.in_local_area", ENUM_LETTERIN_LOCAL_AREA);
        valueMap.put("letter.processed_for_delivery", ENUM_LETTERPROCESSED_FOR_DELIVERY);
        valueMap.put("letter.re-routed", ENUM_LETTERREROUTED);
        valueMap.put("letter.returned_to_sender", ENUM_LETTERRETURNED_TO_SENDER);
        valueMap.put("letter.certified.mailed", ENUM_LETTERCERTIFIEDMAILED);
        valueMap.put("letter.certified.in_transit", ENUM_LETTERCERTIFIEDIN_TRANSIT);
        valueMap.put("letter.certified.in_local_area", ENUM_LETTERCERTIFIEDIN_LOCAL_AREA);
        valueMap.put("letter.certified.processed_for_delivery", ENUM_LETTERCERTIFIEDPROCESSED_FOR_DELIVERY);
        valueMap.put("letter.certified.re-routed", ENUM_LETTERCERTIFIEDREROUTED);
        valueMap.put("letter.certified.returned_to_sender", ENUM_LETTERCERTIFIEDRETURNED_TO_SENDER);
        valueMap.put("letter.certified.delivered", ENUM_LETTERCERTIFIEDDELIVERED);
        valueMap.put("letter.certified.pickup_available", ENUM_LETTERCERTIFIEDPICKUP_AVAILABLE);
        valueMap.put("letter.certified.issue", ENUM_LETTERCERTIFIEDISSUE);
        valueMap.put("letter.return_envelope.created", ENUM_LETTERRETURN_ENVELOPECREATED);
        valueMap.put("letter.return_envelope.in_transit", ENUM_LETTERRETURN_ENVELOPEIN_TRANSIT);
        valueMap.put("letter.return_envelope.in_local_area", ENUM_LETTERRETURN_ENVELOPEIN_LOCAL_AREA);
        valueMap.put("letter.return_envelope.processed_for_delivery", ENUM_LETTERRETURN_ENVELOPEPROCESSED_FOR_DELIVERY);
        valueMap.put("letter.return_envelope.re_routed", ENUM_LETTERRETURN_ENVELOPERE_ROUTED);
        valueMap.put("letter.return_envelope.returned_to_sender", ENUM_LETTERRETURN_ENVELOPERETURNED_TO_SENDER);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static LetterTypesEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of LetterTypesEnum values to list of string values.
     * @param toConvert The list of LetterTypesEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<LetterTypesEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (LetterTypesEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 