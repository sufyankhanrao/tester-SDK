/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for SingleLineAddressIntl type.
 */
public class SingleLineAddressIntl {
    private String address;
    private CountryExtendedEnum country;

    /**
     * Default constructor.
     */
    public SingleLineAddressIntl() {
    }

    /**
     * Initialization constructor.
     * @param  address  String value for address.
     * @param  country  CountryExtendedEnum value for country.
     */
    public SingleLineAddressIntl(
            String address,
            CountryExtendedEnum country) {
        this.address = address;
        this.country = country;
    }

    /**
     * Getter for Address.
     * The entire address in one string (e.g., "370 Water St C1N 1C4").
     * @return Returns the String
     */
    @JsonGetter("address")
    public String getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * The entire address in one string (e.g., "370 Water St C1N 1C4").
     * @param address Value for String
     */
    @JsonSetter("address")
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for Country.
     * Must be a 2 letter country short-name code (ISO 3166). Does not accept `US`, `AS`, `PR`,
     * `FM`, `GU`, `MH`, `MP`, `PW`, or `VI`. For these addresses, please use the US verification
     * API. Also does not accept `PS`, which is not currently supported.
     * @return Returns the CountryExtendedEnum
     */
    @JsonGetter("country")
    public CountryExtendedEnum getCountry() {
        return country;
    }

    /**
     * Setter for Country.
     * Must be a 2 letter country short-name code (ISO 3166). Does not accept `US`, `AS`, `PR`,
     * `FM`, `GU`, `MH`, `MP`, `PW`, or `VI`. For these addresses, please use the US verification
     * API. Also does not accept `PS`, which is not currently supported.
     * @param country Value for CountryExtendedEnum
     */
    @JsonSetter("country")
    public void setCountry(CountryExtendedEnum country) {
        this.country = country;
    }

    /**
     * Converts this SingleLineAddressIntl into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SingleLineAddressIntl [" + "address=" + address + ", country=" + country + "]";
    }

    /**
     * Builds a new {@link SingleLineAddressIntl.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SingleLineAddressIntl.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(address, country);
        return builder;
    }

    /**
     * Class to build instances of {@link SingleLineAddressIntl}.
     */
    public static class Builder {
        private String address;
        private CountryExtendedEnum country;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  address  String value for address.
         * @param  country  CountryExtendedEnum value for country.
         */
        public Builder(String address, CountryExtendedEnum country) {
            this.address = address;
            this.country = country;
        }

        /**
         * Setter for address.
         * @param  address  String value for address.
         * @return Builder
         */
        public Builder address(String address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for country.
         * @param  country  CountryExtendedEnum value for country.
         * @return Builder
         */
        public Builder country(CountryExtendedEnum country) {
            this.country = country;
            return this;
        }

        /**
         * Builds a new {@link SingleLineAddressIntl} object using the set fields.
         * @return {@link SingleLineAddressIntl}
         */
        public SingleLineAddressIntl build() {
            return new SingleLineAddressIntl(address, country);
        }
    }
}
