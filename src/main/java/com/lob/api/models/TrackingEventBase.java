/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for TrackingEventBase type.
 */
public class TrackingEventBase {
    private String id;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private LocalDateTime time;
    private LocalDateTime dateCreated;
    private LocalDateTime dateModified;
    private String object;

    /**
     * Default constructor.
     */
    public TrackingEventBase() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  dateCreated  LocalDateTime value for dateCreated.
     * @param  dateModified  LocalDateTime value for dateModified.
     * @param  object  String value for object.
     * @param  time  LocalDateTime value for time.
     */
    public TrackingEventBase(
            String id,
            LocalDateTime dateCreated,
            LocalDateTime dateModified,
            String object,
            LocalDateTime time) {
        this.id = id;
        this.time = time;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.object = object;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `evnt_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `evnt_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Time.
     * A timestamp in ISO 8601 format of the date USPS registered the event.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("time")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getTime() {
        return time;
    }

    /**
     * Setter for Time.
     * A timestamp in ISO 8601 format of the date USPS registered the event.
     * @param time Value for LocalDateTime
     */
    @JsonSetter("time")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTime(LocalDateTime time) {
        this.time = time;
    }

    /**
     * Getter for DateCreated.
     * A timestamp in ISO 8601 format of the date the resource was created.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date_created")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateCreated() {
        return dateCreated;
    }

    /**
     * Setter for DateCreated.
     * A timestamp in ISO 8601 format of the date the resource was created.
     * @param dateCreated Value for LocalDateTime
     */
    @JsonSetter("date_created")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateCreated(LocalDateTime dateCreated) {
        this.dateCreated = dateCreated;
    }

    /**
     * Getter for DateModified.
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date_modified")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateModified() {
        return dateModified;
    }

    /**
     * Setter for DateModified.
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     * @param dateModified Value for LocalDateTime
     */
    @JsonSetter("date_modified")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateModified(LocalDateTime dateModified) {
        this.dateModified = dateModified;
    }

    /**
     * Getter for Object.
     * @return Returns the String
     */
    @JsonGetter("object")
    public String getObject() {
        return object;
    }

    /**
     * Setter for Object.
     * @param object Value for String
     */
    @JsonSetter("object")
    public void setObject(String object) {
        this.object = object;
    }

    /**
     * Converts this TrackingEventBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TrackingEventBase [" + "id=" + id + ", dateCreated=" + dateCreated
                + ", dateModified=" + dateModified + ", object=" + object + ", time=" + time + "]";
    }

    /**
     * Builds a new {@link TrackingEventBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TrackingEventBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, dateCreated, dateModified, object)
                .time(getTime());
        return builder;
    }

    /**
     * Class to build instances of {@link TrackingEventBase}.
     */
    public static class Builder {
        private String id;
        private LocalDateTime dateCreated;
        private LocalDateTime dateModified;
        private String object;
        private LocalDateTime time;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  dateCreated  LocalDateTime value for dateCreated.
         * @param  dateModified  LocalDateTime value for dateModified.
         * @param  object  String value for object.
         */
        public Builder(String id, LocalDateTime dateCreated, LocalDateTime dateModified,
                String object) {
            this.id = id;
            this.dateCreated = dateCreated;
            this.dateModified = dateModified;
            this.object = object;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for dateCreated.
         * @param  dateCreated  LocalDateTime value for dateCreated.
         * @return Builder
         */
        public Builder dateCreated(LocalDateTime dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }

        /**
         * Setter for dateModified.
         * @param  dateModified  LocalDateTime value for dateModified.
         * @return Builder
         */
        public Builder dateModified(LocalDateTime dateModified) {
            this.dateModified = dateModified;
            return this;
        }

        /**
         * Setter for object.
         * @param  object  String value for object.
         * @return Builder
         */
        public Builder object(String object) {
            this.object = object;
            return this;
        }

        /**
         * Setter for time.
         * @param  time  LocalDateTime value for time.
         * @return Builder
         */
        public Builder time(LocalDateTime time) {
            this.time = time;
            return this;
        }

        /**
         * Builds a new {@link TrackingEventBase} object using the set fields.
         * @return {@link TrackingEventBase}
         */
        public TrackingEventBase build() {
            return new TrackingEventBase(id, dateCreated, dateModified, object, time);
        }
    }
}
