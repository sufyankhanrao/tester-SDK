/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ZipLookupCity type.
 */
public class ZipLookupCity {
    private String city;
    private String state;
    private String county;
    private String countyFips;
    private boolean preferred;

    /**
     * Default constructor.
     */
    public ZipLookupCity() {
    }

    /**
     * Initialization constructor.
     * @param  city  String value for city.
     * @param  state  String value for state.
     * @param  county  String value for county.
     * @param  countyFips  String value for countyFips.
     * @param  preferred  boolean value for preferred.
     */
    public ZipLookupCity(
            String city,
            String state,
            String county,
            String countyFips,
            boolean preferred) {
        this.city = city;
        this.state = state;
        this.county = county;
        this.countyFips = countyFips;
        this.preferred = preferred;
    }

    /**
     * Getter for City.
     * @return Returns the String
     */
    @JsonGetter("city")
    public String getCity() {
        return city;
    }

    /**
     * Setter for City.
     * @param city Value for String
     */
    @JsonSetter("city")
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for State.
     * The [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) two letter code for the state.
     * @return Returns the String
     */
    @JsonGetter("state")
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) two letter code for the state.
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for County.
     * County name of the address city.
     * @return Returns the String
     */
    @JsonGetter("county")
    public String getCounty() {
        return county;
    }

    /**
     * Setter for County.
     * County name of the address city.
     * @param county Value for String
     */
    @JsonSetter("county")
    public void setCounty(String county) {
        this.county = county;
    }

    /**
     * Getter for CountyFips.
     * A 5-digit [FIPS county code](https://en.wikipedia.org/wiki/FIPS_county_code) which uniquely
     * identifies `components[county]`. It consists of a 2-digit state code and a 3-digit county
     * code.
     * @return Returns the String
     */
    @JsonGetter("county_fips")
    public String getCountyFips() {
        return countyFips;
    }

    /**
     * Setter for CountyFips.
     * A 5-digit [FIPS county code](https://en.wikipedia.org/wiki/FIPS_county_code) which uniquely
     * identifies `components[county]`. It consists of a 2-digit state code and a 3-digit county
     * code.
     * @param countyFips Value for String
     */
    @JsonSetter("county_fips")
    public void setCountyFips(String countyFips) {
        this.countyFips = countyFips;
    }

    /**
     * Getter for Preferred.
     * Indicates whether or not the city is the [USPS default
     * city](https://en.wikipedia.org/wiki/ZIP_Code#ZIP_Codes_and_previous_zoning_lines) (preferred
     * city) of a ZIP code. There is only one preferred city per ZIP code, which will always be in
     * position 0 in the array of cities.
     * @return Returns the boolean
     */
    @JsonGetter("preferred")
    public boolean getPreferred() {
        return preferred;
    }

    /**
     * Setter for Preferred.
     * Indicates whether or not the city is the [USPS default
     * city](https://en.wikipedia.org/wiki/ZIP_Code#ZIP_Codes_and_previous_zoning_lines) (preferred
     * city) of a ZIP code. There is only one preferred city per ZIP code, which will always be in
     * position 0 in the array of cities.
     * @param preferred Value for boolean
     */
    @JsonSetter("preferred")
    public void setPreferred(boolean preferred) {
        this.preferred = preferred;
    }

    /**
     * Converts this ZipLookupCity into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ZipLookupCity [" + "city=" + city + ", state=" + state + ", county=" + county
                + ", countyFips=" + countyFips + ", preferred=" + preferred + "]";
    }

    /**
     * Builds a new {@link ZipLookupCity.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ZipLookupCity.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(city, state, county, countyFips, preferred);
        return builder;
    }

    /**
     * Class to build instances of {@link ZipLookupCity}.
     */
    public static class Builder {
        private String city;
        private String state;
        private String county;
        private String countyFips;
        private boolean preferred;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  city  String value for city.
         * @param  state  String value for state.
         * @param  county  String value for county.
         * @param  countyFips  String value for countyFips.
         * @param  preferred  boolean value for preferred.
         */
        public Builder(String city, String state, String county, String countyFips,
                boolean preferred) {
            this.city = city;
            this.state = state;
            this.county = county;
            this.countyFips = countyFips;
            this.preferred = preferred;
        }

        /**
         * Setter for city.
         * @param  city  String value for city.
         * @return Builder
         */
        public Builder city(String city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for county.
         * @param  county  String value for county.
         * @return Builder
         */
        public Builder county(String county) {
            this.county = county;
            return this;
        }

        /**
         * Setter for countyFips.
         * @param  countyFips  String value for countyFips.
         * @return Builder
         */
        public Builder countyFips(String countyFips) {
            this.countyFips = countyFips;
            return this;
        }

        /**
         * Setter for preferred.
         * @param  preferred  boolean value for preferred.
         * @return Builder
         */
        public Builder preferred(boolean preferred) {
            this.preferred = preferred;
            return this;
        }

        /**
         * Builds a new {@link ZipLookupCity} object using the set fields.
         * @return {@link ZipLookupCity}
         */
        public ZipLookupCity build() {
            return new ZipLookupCity(city, state, county, countyFips, preferred);
        }
    }
}
