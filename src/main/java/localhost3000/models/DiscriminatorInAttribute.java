/*
 * TesterXMLLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for DiscriminatorInAttribute type.
 */
@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        property = "discriminator",
        defaultImpl = DiscriminatorInAttribute.class,
        visible = true)
@JsonInclude(Include.ALWAYS)
public class DiscriminatorInAttribute
        extends BaseForDiscriminatorInAttribute {
    private String addedField;

    /**
     * Default constructor.
     */
    public DiscriminatorInAttribute() {
        super();
        setDiscriminator("Kylo Ren");
    }

    /**
     * Initialization constructor.
     * @param  baseField  String value for baseField.
     * @param  addedField  String value for addedField.
     * @param  discriminator  String value for discriminator.
     */
    public DiscriminatorInAttribute(
            String baseField,
            String addedField,
            String discriminator) {
        super(baseField, discriminator);
        this.addedField = addedField;
    }

    /**
     * Getter for AddedField.
     * String element in child model.
     * @return Returns the String
     */
    @JsonGetter("Added Field")
    @XmlElement(name = "added")
    public String getAddedField() {
        return addedField;
    }

    /**
     * Setter for AddedField.
     * String element in child model.
     * @param addedField Value for String
     */
    @JsonSetter("Added Field")
    public void setAddedField(String addedField) {
        this.addedField = addedField;
    }

    /**
     * Converts this DiscriminatorInAttribute into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DiscriminatorInAttribute [" + "addedField=" + addedField + ", baseField="
                + getBaseField() + ", discriminator=" + getDiscriminator() + "]";
    }

    /**
     * Builds a new {@link DiscriminatorInAttribute.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DiscriminatorInAttribute.Builder} object
     */
    public Builder toDiscriminatorInAttributeBuilder() {
        Builder builder = new Builder(getBaseField(), addedField)
                .discriminator(getDiscriminator());
        return builder;
    }

    /**
     * Class to build instances of {@link DiscriminatorInAttribute}.
     */
    public static class Builder {
        private String addedField;
        private String baseField;
        private String discriminator = "Kylo Ren";

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  baseField  String value for baseField.
         * @param  addedField  String value for addedField.
         */
        public Builder(String baseField, String addedField) {
            this.baseField = baseField;
            this.addedField = addedField;
        }

        /**
         * Setter for addedField.
         * @param  addedField  String value for addedField.
         * @return Builder
         */
        public Builder addedField(String addedField) {
            this.addedField = addedField;
            return this;
        }

        /**
         * Setter for baseField.
         * @param  baseField  String value for baseField.
         * @return Builder
         */
        public Builder baseField(String baseField) {
            this.baseField = baseField;
            return this;
        }

        /**
         * Setter for discriminator.
         * @param  discriminator  String value for discriminator.
         * @return Builder
         */
        public Builder discriminator(String discriminator) {
            this.discriminator = discriminator;
            return this;
        }

        /**
         * Builds a new {@link DiscriminatorInAttribute} object using the set fields.
         * @return {@link DiscriminatorInAttribute}
         */
        public DiscriminatorInAttribute build() {
            return new DiscriminatorInAttribute(baseField, addedField, discriminator);
        }
    }
}
