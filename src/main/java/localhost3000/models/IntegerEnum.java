/*
 * TesterXMLLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * IntegerEnum to be used.
 */
public enum IntegerEnum {
    @javax.xml.bind.annotation.XmlEnumValue("47")
    FOURTYSEVEN,

    @javax.xml.bind.annotation.XmlEnumValue("48")
    FOURTYEIGHT;


    private static TreeMap<Integer, IntegerEnum> valueMap = new TreeMap<>();
    private Integer value;

    static {
        FOURTYSEVEN.value = 47;
        FOURTYEIGHT.value = 48;

        valueMap.put(47, FOURTYSEVEN);
        valueMap.put(48, FOURTYEIGHT);
    }

    /**
     * Returns the enum member associated with the given integer value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given integer value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static IntegerEnum fromInteger(Integer toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the integer value associated with the enum member.
     * @return The integer value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public Integer value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of IntegerEnum values to list of integer values.
     * @param toConvert The list of IntegerEnum values to convert.
     * @return List of representative integer values.
     */
    public static List<Integer> toValue(List<IntegerEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<Integer> convertedValues = new ArrayList<>();
        for (IntegerEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 