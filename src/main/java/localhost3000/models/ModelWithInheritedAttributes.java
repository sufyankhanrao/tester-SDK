/*
 * TesterXMLLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import javax.xml.bind.annotation.XmlAttribute;

/**
 * This is a model class for ModelWithInheritedAttributes type.
 */
@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        property = "attributes_type",
        defaultImpl = ModelWithInheritedAttributes.class,
        visible = true)
@JsonInclude(Include.ALWAYS)
public class ModelWithInheritedAttributes
        extends SimpleAttributes {
    private String newStringField;

    /**
     * Default constructor.
     */
    public ModelWithInheritedAttributes() {
        super();
        setAttributesType("ModelWithInheritedAttributes");
    }

    /**
     * Initialization constructor.
     * @param  stringElement  String value for stringElement.
     * @param  nonreserved  String value for nonreserved.
     * @param  numberElement  int value for numberElement.
     * @param  precision  double value for precision.
     * @param  booleanElement  boolean value for booleanElement.
     * @param  newStringField  String value for newStringField.
     * @param  attributesType  String value for attributesType.
     */
    public ModelWithInheritedAttributes(
            String stringElement,
            String nonreserved,
            int numberElement,
            double precision,
            boolean booleanElement,
            String newStringField,
            String attributesType) {
        super(stringElement, nonreserved, numberElement, precision, booleanElement,
                attributesType);
        this.newStringField = newStringField;
    }

    /**
     * Getter for NewStringField.
     * String attribute with the name
     * @return Returns the String
     */
    @JsonGetter("NewStringField")
    @XmlAttribute(name = "NewStringField")
    public String getNewStringField() {
        return newStringField;
    }

    /**
     * Setter for NewStringField.
     * String attribute with the name
     * @param newStringField Value for String
     */
    @JsonSetter("NewStringField")
    public void setNewStringField(String newStringField) {
        this.newStringField = newStringField;
    }

    /**
     * Converts this ModelWithInheritedAttributes into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ModelWithInheritedAttributes [" + "newStringField=" + newStringField
                + ", stringElement=" + getStringElement() + ", nonreserved=" + getNonreserved()
                + ", numberElement=" + getNumberElement() + ", precision=" + getPrecision()
                + ", booleanElement=" + getBooleanElement() + ", attributesType="
                + getAttributesType() + "]";
    }

    /**
     * Builds a new {@link ModelWithInheritedAttributes.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ModelWithInheritedAttributes.Builder} object
     */
    public Builder toModelWithInheritedAttributesBuilder() {
        Builder builder = new Builder(getStringElement(), getNonreserved(), getNumberElement(),
                getPrecision(), getBooleanElement(), newStringField)
                .attributesType(getAttributesType());
        return builder;
    }

    /**
     * Class to build instances of {@link ModelWithInheritedAttributes}.
     */
    public static class Builder {
        private String newStringField;
        private String stringElement;
        private String nonreserved;
        private int numberElement;
        private double precision;
        private boolean booleanElement;
        private String attributesType = "ModelWithInheritedAttributes";

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  stringElement  String value for stringElement.
         * @param  nonreserved  String value for nonreserved.
         * @param  numberElement  int value for numberElement.
         * @param  precision  double value for precision.
         * @param  booleanElement  boolean value for booleanElement.
         * @param  newStringField  String value for newStringField.
         */
        public Builder(String stringElement, String nonreserved, int numberElement,
                double precision, boolean booleanElement, String newStringField) {
            this.stringElement = stringElement;
            this.nonreserved = nonreserved;
            this.numberElement = numberElement;
            this.precision = precision;
            this.booleanElement = booleanElement;
            this.newStringField = newStringField;
        }

        /**
         * Setter for newStringField.
         * @param  newStringField  String value for newStringField.
         * @return Builder
         */
        public Builder newStringField(String newStringField) {
            this.newStringField = newStringField;
            return this;
        }

        /**
         * Setter for stringElement.
         * @param  stringElement  String value for stringElement.
         * @return Builder
         */
        public Builder stringElement(String stringElement) {
            this.stringElement = stringElement;
            return this;
        }

        /**
         * Setter for nonreserved.
         * @param  nonreserved  String value for nonreserved.
         * @return Builder
         */
        public Builder nonreserved(String nonreserved) {
            this.nonreserved = nonreserved;
            return this;
        }

        /**
         * Setter for numberElement.
         * @param  numberElement  int value for numberElement.
         * @return Builder
         */
        public Builder numberElement(int numberElement) {
            this.numberElement = numberElement;
            return this;
        }

        /**
         * Setter for precision.
         * @param  precision  double value for precision.
         * @return Builder
         */
        public Builder precision(double precision) {
            this.precision = precision;
            return this;
        }

        /**
         * Setter for booleanElement.
         * @param  booleanElement  boolean value for booleanElement.
         * @return Builder
         */
        public Builder booleanElement(boolean booleanElement) {
            this.booleanElement = booleanElement;
            return this;
        }

        /**
         * Setter for attributesType.
         * @param  attributesType  String value for attributesType.
         * @return Builder
         */
        public Builder attributesType(String attributesType) {
            this.attributesType = attributesType;
            return this;
        }

        /**
         * Builds a new {@link ModelWithInheritedAttributes} object using the set fields.
         * @return {@link ModelWithInheritedAttributes}
         */
        public ModelWithInheritedAttributes build() {
            return new ModelWithInheritedAttributes(stringElement, nonreserved, numberElement,
                    precision, booleanElement, newStringField, attributesType);
        }
    }
}
