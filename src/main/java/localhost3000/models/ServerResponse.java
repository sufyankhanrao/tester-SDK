/*
 * TesterXMLLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for ServerResponse type.
 */
public class ServerResponse {
    private boolean success;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String message;

    /**
     * Default constructor.
     */
    public ServerResponse() {
    }

    /**
     * Initialization constructor.
     * @param  success  boolean value for success.
     * @param  message  String value for message.
     */
    public ServerResponse(
            boolean success,
            String message) {
        this.success = success;
        this.message = message;
    }

    /**
     * Getter for Success.
     * @return Returns the boolean
     */
    @JsonGetter("success")
    @XmlElement(name = "success")
    public boolean getSuccess() {
        return success;
    }

    /**
     * Setter for Success.
     * @param success Value for boolean
     */
    @JsonSetter("success")
    public void setSuccess(boolean success) {
        this.success = success;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    @XmlElement(name = "message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Converts this ServerResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ServerResponse [" + "success=" + success + ", message=" + message + "]";
    }

    /**
     * Builds a new {@link ServerResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ServerResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(success)
                .message(getMessage());
        return builder;
    }

    /**
     * Class to build instances of {@link ServerResponse}.
     */
    public static class Builder {
        private boolean success;
        private String message;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  success  boolean value for success.
         */
        public Builder(boolean success) {
            this.success = success;
        }

        /**
         * Setter for success.
         * @param  success  boolean value for success.
         * @return Builder
         */
        public Builder success(boolean success) {
            this.success = success;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Builds a new {@link ServerResponse} object using the set fields.
         * @return {@link ServerResponse}
         */
        public ServerResponse build() {
            return new ServerResponse(success, message);
        }
    }
}
