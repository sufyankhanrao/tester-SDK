/*
 * TesterXMLLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for SimpleArrayWithElementName type.
 */
public class SimpleArrayWithElementName {
    private List<String> elem;

    /**
     * Default constructor.
     */
    public SimpleArrayWithElementName() {
    }

    /**
     * Initialization constructor.
     * @param  elem  List of String value for elem.
     */
    public SimpleArrayWithElementName(
            List<String> elem) {
        this.elem = elem;
    }

    /**
     * Getter for Elem.
     * @return Returns the List of String
     */
    @JsonGetter("elem")
    @XmlElement(name = "element")
    public List<String> getElem() {
        return elem;
    }

    /**
     * Setter for Elem.
     * @param elem Value for List of String
     */
    @JsonSetter("elem")
    public void setElem(List<String> elem) {
        this.elem = elem;
    }

    /**
     * Converts this SimpleArrayWithElementName into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SimpleArrayWithElementName [" + "elem=" + elem + "]";
    }

    /**
     * Builds a new {@link SimpleArrayWithElementName.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SimpleArrayWithElementName.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(elem);
        return builder;
    }

    /**
     * Class to build instances of {@link SimpleArrayWithElementName}.
     */
    public static class Builder {
        private List<String> elem;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  elem  List of String value for elem.
         */
        public Builder(List<String> elem) {
            this.elem = elem;
        }

        /**
         * Setter for elem.
         * @param  elem  List of String value for elem.
         * @return Builder
         */
        public Builder elem(List<String> elem) {
            this.elem = elem;
            return this;
        }

        /**
         * Builds a new {@link SimpleArrayWithElementName} object using the set fields.
         * @return {@link SimpleArrayWithElementName}
         */
        public SimpleArrayWithElementName build() {
            return new SimpleArrayWithElementName(elem);
        }
    }
}
