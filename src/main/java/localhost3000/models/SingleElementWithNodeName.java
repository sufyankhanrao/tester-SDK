/*
 * TesterXMLLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import javax.xml.bind.annotation.XmlElement;

/**
 * This is a model class for SingleElementWithNodeName type.
 */
public class SingleElementWithNodeName {
    private String stringElement;

    /**
     * Default constructor.
     */
    public SingleElementWithNodeName() {
    }

    /**
     * Initialization constructor.
     * @param  stringElement  String value for stringElement.
     */
    public SingleElementWithNodeName(
            String stringElement) {
        this.stringElement = stringElement;
    }

    /**
     * Getter for StringElement.
     * string element (element name "string")
     * @return Returns the String
     */
    @JsonGetter("string-element")
    @XmlElement(name = "string")
    public String getStringElement() {
        return stringElement;
    }

    /**
     * Setter for StringElement.
     * string element (element name "string")
     * @param stringElement Value for String
     */
    @JsonSetter("string-element")
    public void setStringElement(String stringElement) {
        this.stringElement = stringElement;
    }

    /**
     * Converts this SingleElementWithNodeName into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SingleElementWithNodeName [" + "stringElement=" + stringElement + "]";
    }

    /**
     * Builds a new {@link SingleElementWithNodeName.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SingleElementWithNodeName.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(stringElement);
        return builder;
    }

    /**
     * Class to build instances of {@link SingleElementWithNodeName}.
     */
    public static class Builder {
        private String stringElement;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  stringElement  String value for stringElement.
         */
        public Builder(String stringElement) {
            this.stringElement = stringElement;
        }

        /**
         * Setter for stringElement.
         * @param  stringElement  String value for stringElement.
         * @return Builder
         */
        public Builder stringElement(String stringElement) {
            this.stringElement = stringElement;
            return this;
        }

        /**
         * Builds a new {@link SingleElementWithNodeName} object using the set fields.
         * @return {@link SingleElementWithNodeName}
         */
        public SingleElementWithNodeName build() {
            return new SingleElementWithNodeName(stringElement);
        }
    }
}
