/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * AvsEnum to be used.
 */
public enum AvsEnum {
    BAD,

    ZIP,

    STREET,

    GOOD,

    UNKNOWN;


    private static TreeMap<String, AvsEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        BAD.value = "BAD";
        ZIP.value = "ZIP";
        STREET.value = "STREET";
        GOOD.value = "GOOD";
        UNKNOWN.value = "UNKNOWN";

        valueMap.put("BAD", BAD);
        valueMap.put("ZIP", ZIP);
        valueMap.put("STREET", STREET);
        valueMap.put("GOOD", GOOD);
        valueMap.put("UNKNOWN", UNKNOWN);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static AvsEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of AvsEnum values to list of string values.
     * @param toConvert The list of AvsEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<AvsEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (AvsEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 