/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * EntryModeIdEnum to be used.
 */
public enum EntryModeIdEnum {
    B,

    S,

    K,

    C,

    P,

    F;


    private static TreeMap<String, EntryModeIdEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        B.value = "B";
        S.value = "S";
        K.value = "K";
        C.value = "C";
        P.value = "P";
        F.value = "F";

        valueMap.put("B", B);
        valueMap.put("S", S);
        valueMap.put("K", K);
        valueMap.put("C", C);
        valueMap.put("P", P);
        valueMap.put("F", F);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static EntryModeIdEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of EntryModeIdEnum values to list of string values.
     * @param toConvert The list of EntryModeIdEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<EntryModeIdEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (EntryModeIdEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 