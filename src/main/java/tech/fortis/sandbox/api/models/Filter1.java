/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Filter1 type.
 */
public class Filter1 {
    private String locationId;
    private String accountNumber;
    private String contactApiId;
    private String firstName;
    private String lastName;
    private String cellPhone;
    private String contactBalance;
    private String address;
    private String city;
    private String state;
    private String companyName;
    private String headerMessage;
    private String dateOfBirth;
    private String emailTrxReceipt;
    private String homePhone;
    private String officePhone;
    private String officeExtPhone;
    private String headerMessageType;
    private String updateIfExists;
    private String zip;
    private String contactC1;
    private String contactC2;
    private String contactC3;
    private String parentId;
    private String email;
    private String id;
    private String createdTs;
    private String modifiedTs;
    private String active;

    /**
     * Default constructor.
     */
    public Filter1() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  String value for locationId.
     * @param  accountNumber  String value for accountNumber.
     * @param  contactApiId  String value for contactApiId.
     * @param  firstName  String value for firstName.
     * @param  lastName  String value for lastName.
     * @param  cellPhone  String value for cellPhone.
     * @param  contactBalance  String value for contactBalance.
     * @param  address  String value for address.
     * @param  city  String value for city.
     * @param  state  String value for state.
     * @param  companyName  String value for companyName.
     * @param  headerMessage  String value for headerMessage.
     * @param  dateOfBirth  String value for dateOfBirth.
     * @param  emailTrxReceipt  String value for emailTrxReceipt.
     * @param  homePhone  String value for homePhone.
     * @param  officePhone  String value for officePhone.
     * @param  officeExtPhone  String value for officeExtPhone.
     * @param  headerMessageType  String value for headerMessageType.
     * @param  updateIfExists  String value for updateIfExists.
     * @param  zip  String value for zip.
     * @param  contactC1  String value for contactC1.
     * @param  contactC2  String value for contactC2.
     * @param  contactC3  String value for contactC3.
     * @param  parentId  String value for parentId.
     * @param  email  String value for email.
     * @param  id  String value for id.
     * @param  createdTs  String value for createdTs.
     * @param  modifiedTs  String value for modifiedTs.
     * @param  active  String value for active.
     */
    public Filter1(
            String locationId,
            String accountNumber,
            String contactApiId,
            String firstName,
            String lastName,
            String cellPhone,
            String contactBalance,
            String address,
            String city,
            String state,
            String companyName,
            String headerMessage,
            String dateOfBirth,
            String emailTrxReceipt,
            String homePhone,
            String officePhone,
            String officeExtPhone,
            String headerMessageType,
            String updateIfExists,
            String zip,
            String contactC1,
            String contactC2,
            String contactC3,
            String parentId,
            String email,
            String id,
            String createdTs,
            String modifiedTs,
            String active) {
        this.locationId = locationId;
        this.accountNumber = accountNumber;
        this.contactApiId = contactApiId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.cellPhone = cellPhone;
        this.contactBalance = contactBalance;
        this.address = address;
        this.city = city;
        this.state = state;
        this.companyName = companyName;
        this.headerMessage = headerMessage;
        this.dateOfBirth = dateOfBirth;
        this.emailTrxReceipt = emailTrxReceipt;
        this.homePhone = homePhone;
        this.officePhone = officePhone;
        this.officeExtPhone = officeExtPhone;
        this.headerMessageType = headerMessageType;
        this.updateIfExists = updateIfExists;
        this.zip = zip;
        this.contactC1 = contactC1;
        this.contactC2 = contactC2;
        this.contactC3 = contactC3;
        this.parentId = parentId;
        this.email = email;
        this.id = id;
        this.createdTs = createdTs;
        this.modifiedTs = modifiedTs;
        this.active = active;
    }

    /**
     * Getter for LocationId.
     * @return Returns the String
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for AccountNumber.
     * @return Returns the String
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for ContactApiId.
     * @return Returns the String
     */
    @JsonGetter("contact_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactApiId() {
        return contactApiId;
    }

    /**
     * Setter for ContactApiId.
     * @param contactApiId Value for String
     */
    @JsonSetter("contact_api_id")
    public void setContactApiId(String contactApiId) {
        this.contactApiId = contactApiId;
    }

    /**
     * Getter for FirstName.
     * @return Returns the String
     */
    @JsonGetter("first_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirstName() {
        return firstName;
    }

    /**
     * Setter for FirstName.
     * @param firstName Value for String
     */
    @JsonSetter("first_name")
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for LastName.
     * @return Returns the String
     */
    @JsonGetter("last_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastName() {
        return lastName;
    }

    /**
     * Setter for LastName.
     * @param lastName Value for String
     */
    @JsonSetter("last_name")
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for CellPhone.
     * @return Returns the String
     */
    @JsonGetter("cell_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCellPhone() {
        return cellPhone;
    }

    /**
     * Setter for CellPhone.
     * @param cellPhone Value for String
     */
    @JsonSetter("cell_phone")
    public void setCellPhone(String cellPhone) {
        this.cellPhone = cellPhone;
    }

    /**
     * Getter for ContactBalance.
     * @return Returns the String
     */
    @JsonGetter("contact_balance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactBalance() {
        return contactBalance;
    }

    /**
     * Setter for ContactBalance.
     * @param contactBalance Value for String
     */
    @JsonSetter("contact_balance")
    public void setContactBalance(String contactBalance) {
        this.contactBalance = contactBalance;
    }

    /**
     * Getter for Address.
     * @return Returns the String
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * @param address Value for String
     */
    @JsonSetter("address")
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for City.
     * @return Returns the String
     */
    @JsonGetter("city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCity() {
        return city;
    }

    /**
     * Setter for City.
     * @param city Value for String
     */
    @JsonSetter("city")
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for State.
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for CompanyName.
     * @return Returns the String
     */
    @JsonGetter("company_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyName() {
        return companyName;
    }

    /**
     * Setter for CompanyName.
     * @param companyName Value for String
     */
    @JsonSetter("company_name")
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    /**
     * Getter for HeaderMessage.
     * @return Returns the String
     */
    @JsonGetter("header_message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHeaderMessage() {
        return headerMessage;
    }

    /**
     * Setter for HeaderMessage.
     * @param headerMessage Value for String
     */
    @JsonSetter("header_message")
    public void setHeaderMessage(String headerMessage) {
        this.headerMessage = headerMessage;
    }

    /**
     * Getter for DateOfBirth.
     * @return Returns the String
     */
    @JsonGetter("date_of_birth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * Setter for DateOfBirth.
     * @param dateOfBirth Value for String
     */
    @JsonSetter("date_of_birth")
    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Getter for EmailTrxReceipt.
     * @return Returns the String
     */
    @JsonGetter("email_trx_receipt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmailTrxReceipt() {
        return emailTrxReceipt;
    }

    /**
     * Setter for EmailTrxReceipt.
     * @param emailTrxReceipt Value for String
     */
    @JsonSetter("email_trx_receipt")
    public void setEmailTrxReceipt(String emailTrxReceipt) {
        this.emailTrxReceipt = emailTrxReceipt;
    }

    /**
     * Getter for HomePhone.
     * @return Returns the String
     */
    @JsonGetter("home_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHomePhone() {
        return homePhone;
    }

    /**
     * Setter for HomePhone.
     * @param homePhone Value for String
     */
    @JsonSetter("home_phone")
    public void setHomePhone(String homePhone) {
        this.homePhone = homePhone;
    }

    /**
     * Getter for OfficePhone.
     * @return Returns the String
     */
    @JsonGetter("office_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficePhone() {
        return officePhone;
    }

    /**
     * Setter for OfficePhone.
     * @param officePhone Value for String
     */
    @JsonSetter("office_phone")
    public void setOfficePhone(String officePhone) {
        this.officePhone = officePhone;
    }

    /**
     * Getter for OfficeExtPhone.
     * @return Returns the String
     */
    @JsonGetter("office_ext_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficeExtPhone() {
        return officeExtPhone;
    }

    /**
     * Setter for OfficeExtPhone.
     * @param officeExtPhone Value for String
     */
    @JsonSetter("office_ext_phone")
    public void setOfficeExtPhone(String officeExtPhone) {
        this.officeExtPhone = officeExtPhone;
    }

    /**
     * Getter for HeaderMessageType.
     * @return Returns the String
     */
    @JsonGetter("header_message_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHeaderMessageType() {
        return headerMessageType;
    }

    /**
     * Setter for HeaderMessageType.
     * @param headerMessageType Value for String
     */
    @JsonSetter("header_message_type")
    public void setHeaderMessageType(String headerMessageType) {
        this.headerMessageType = headerMessageType;
    }

    /**
     * Getter for UpdateIfExists.
     * @return Returns the String
     */
    @JsonGetter("update_if_exists")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUpdateIfExists() {
        return updateIfExists;
    }

    /**
     * Setter for UpdateIfExists.
     * @param updateIfExists Value for String
     */
    @JsonSetter("update_if_exists")
    public void setUpdateIfExists(String updateIfExists) {
        this.updateIfExists = updateIfExists;
    }

    /**
     * Getter for Zip.
     * @return Returns the String
     */
    @JsonGetter("zip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZip() {
        return zip;
    }

    /**
     * Setter for Zip.
     * @param zip Value for String
     */
    @JsonSetter("zip")
    public void setZip(String zip) {
        this.zip = zip;
    }

    /**
     * Getter for ContactC1.
     * @return Returns the String
     */
    @JsonGetter("contact_c1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactC1() {
        return contactC1;
    }

    /**
     * Setter for ContactC1.
     * @param contactC1 Value for String
     */
    @JsonSetter("contact_c1")
    public void setContactC1(String contactC1) {
        this.contactC1 = contactC1;
    }

    /**
     * Getter for ContactC2.
     * @return Returns the String
     */
    @JsonGetter("contact_c2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactC2() {
        return contactC2;
    }

    /**
     * Setter for ContactC2.
     * @param contactC2 Value for String
     */
    @JsonSetter("contact_c2")
    public void setContactC2(String contactC2) {
        this.contactC2 = contactC2;
    }

    /**
     * Getter for ContactC3.
     * @return Returns the String
     */
    @JsonGetter("contact_c3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactC3() {
        return contactC3;
    }

    /**
     * Setter for ContactC3.
     * @param contactC3 Value for String
     */
    @JsonSetter("contact_c3")
    public void setContactC3(String contactC3) {
        this.contactC3 = contactC3;
    }

    /**
     * Getter for ParentId.
     * @return Returns the String
     */
    @JsonGetter("parent_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentId() {
        return parentId;
    }

    /**
     * Setter for ParentId.
     * @param parentId Value for String
     */
    @JsonSetter("parent_id")
    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for CreatedTs.
     * @return Returns the String
     */
    @JsonGetter("created_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * @param createdTs Value for String
     */
    @JsonSetter("created_ts")
    public void setCreatedTs(String createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for ModifiedTs.
     * @return Returns the String
     */
    @JsonGetter("modified_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * @param modifiedTs Value for String
     */
    @JsonSetter("modified_ts")
    public void setModifiedTs(String modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for Active.
     * @return Returns the String
     */
    @JsonGetter("active")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getActive() {
        return active;
    }

    /**
     * Setter for Active.
     * @param active Value for String
     */
    @JsonSetter("active")
    public void setActive(String active) {
        this.active = active;
    }

    /**
     * Converts this Filter1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Filter1 [" + "locationId=" + locationId + ", accountNumber=" + accountNumber
                + ", contactApiId=" + contactApiId + ", firstName=" + firstName + ", lastName="
                + lastName + ", cellPhone=" + cellPhone + ", contactBalance=" + contactBalance
                + ", address=" + address + ", city=" + city + ", state=" + state + ", companyName="
                + companyName + ", headerMessage=" + headerMessage + ", dateOfBirth=" + dateOfBirth
                + ", emailTrxReceipt=" + emailTrxReceipt + ", homePhone=" + homePhone
                + ", officePhone=" + officePhone + ", officeExtPhone=" + officeExtPhone
                + ", headerMessageType=" + headerMessageType + ", updateIfExists=" + updateIfExists
                + ", zip=" + zip + ", contactC1=" + contactC1 + ", contactC2=" + contactC2
                + ", contactC3=" + contactC3 + ", parentId=" + parentId + ", email=" + email
                + ", id=" + id + ", createdTs=" + createdTs + ", modifiedTs=" + modifiedTs
                + ", active=" + active + "]";
    }

    /**
     * Builds a new {@link Filter1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Filter1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .locationId(getLocationId())
                .accountNumber(getAccountNumber())
                .contactApiId(getContactApiId())
                .firstName(getFirstName())
                .lastName(getLastName())
                .cellPhone(getCellPhone())
                .contactBalance(getContactBalance())
                .address(getAddress())
                .city(getCity())
                .state(getState())
                .companyName(getCompanyName())
                .headerMessage(getHeaderMessage())
                .dateOfBirth(getDateOfBirth())
                .emailTrxReceipt(getEmailTrxReceipt())
                .homePhone(getHomePhone())
                .officePhone(getOfficePhone())
                .officeExtPhone(getOfficeExtPhone())
                .headerMessageType(getHeaderMessageType())
                .updateIfExists(getUpdateIfExists())
                .zip(getZip())
                .contactC1(getContactC1())
                .contactC2(getContactC2())
                .contactC3(getContactC3())
                .parentId(getParentId())
                .email(getEmail())
                .id(getId())
                .createdTs(getCreatedTs())
                .modifiedTs(getModifiedTs())
                .active(getActive());
        return builder;
    }

    /**
     * Class to build instances of {@link Filter1}.
     */
    public static class Builder {
        private String locationId;
        private String accountNumber;
        private String contactApiId;
        private String firstName;
        private String lastName;
        private String cellPhone;
        private String contactBalance;
        private String address;
        private String city;
        private String state;
        private String companyName;
        private String headerMessage;
        private String dateOfBirth;
        private String emailTrxReceipt;
        private String homePhone;
        private String officePhone;
        private String officeExtPhone;
        private String headerMessageType;
        private String updateIfExists;
        private String zip;
        private String contactC1;
        private String contactC2;
        private String contactC3;
        private String parentId;
        private String email;
        private String id;
        private String createdTs;
        private String modifiedTs;
        private String active;



        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for contactApiId.
         * @param  contactApiId  String value for contactApiId.
         * @return Builder
         */
        public Builder contactApiId(String contactApiId) {
            this.contactApiId = contactApiId;
            return this;
        }

        /**
         * Setter for firstName.
         * @param  firstName  String value for firstName.
         * @return Builder
         */
        public Builder firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * Setter for lastName.
         * @param  lastName  String value for lastName.
         * @return Builder
         */
        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * Setter for cellPhone.
         * @param  cellPhone  String value for cellPhone.
         * @return Builder
         */
        public Builder cellPhone(String cellPhone) {
            this.cellPhone = cellPhone;
            return this;
        }

        /**
         * Setter for contactBalance.
         * @param  contactBalance  String value for contactBalance.
         * @return Builder
         */
        public Builder contactBalance(String contactBalance) {
            this.contactBalance = contactBalance;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  String value for address.
         * @return Builder
         */
        public Builder address(String address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for city.
         * @param  city  String value for city.
         * @return Builder
         */
        public Builder city(String city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for companyName.
         * @param  companyName  String value for companyName.
         * @return Builder
         */
        public Builder companyName(String companyName) {
            this.companyName = companyName;
            return this;
        }

        /**
         * Setter for headerMessage.
         * @param  headerMessage  String value for headerMessage.
         * @return Builder
         */
        public Builder headerMessage(String headerMessage) {
            this.headerMessage = headerMessage;
            return this;
        }

        /**
         * Setter for dateOfBirth.
         * @param  dateOfBirth  String value for dateOfBirth.
         * @return Builder
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        /**
         * Setter for emailTrxReceipt.
         * @param  emailTrxReceipt  String value for emailTrxReceipt.
         * @return Builder
         */
        public Builder emailTrxReceipt(String emailTrxReceipt) {
            this.emailTrxReceipt = emailTrxReceipt;
            return this;
        }

        /**
         * Setter for homePhone.
         * @param  homePhone  String value for homePhone.
         * @return Builder
         */
        public Builder homePhone(String homePhone) {
            this.homePhone = homePhone;
            return this;
        }

        /**
         * Setter for officePhone.
         * @param  officePhone  String value for officePhone.
         * @return Builder
         */
        public Builder officePhone(String officePhone) {
            this.officePhone = officePhone;
            return this;
        }

        /**
         * Setter for officeExtPhone.
         * @param  officeExtPhone  String value for officeExtPhone.
         * @return Builder
         */
        public Builder officeExtPhone(String officeExtPhone) {
            this.officeExtPhone = officeExtPhone;
            return this;
        }

        /**
         * Setter for headerMessageType.
         * @param  headerMessageType  String value for headerMessageType.
         * @return Builder
         */
        public Builder headerMessageType(String headerMessageType) {
            this.headerMessageType = headerMessageType;
            return this;
        }

        /**
         * Setter for updateIfExists.
         * @param  updateIfExists  String value for updateIfExists.
         * @return Builder
         */
        public Builder updateIfExists(String updateIfExists) {
            this.updateIfExists = updateIfExists;
            return this;
        }

        /**
         * Setter for zip.
         * @param  zip  String value for zip.
         * @return Builder
         */
        public Builder zip(String zip) {
            this.zip = zip;
            return this;
        }

        /**
         * Setter for contactC1.
         * @param  contactC1  String value for contactC1.
         * @return Builder
         */
        public Builder contactC1(String contactC1) {
            this.contactC1 = contactC1;
            return this;
        }

        /**
         * Setter for contactC2.
         * @param  contactC2  String value for contactC2.
         * @return Builder
         */
        public Builder contactC2(String contactC2) {
            this.contactC2 = contactC2;
            return this;
        }

        /**
         * Setter for contactC3.
         * @param  contactC3  String value for contactC3.
         * @return Builder
         */
        public Builder contactC3(String contactC3) {
            this.contactC3 = contactC3;
            return this;
        }

        /**
         * Setter for parentId.
         * @param  parentId  String value for parentId.
         * @return Builder
         */
        public Builder parentId(String parentId) {
            this.parentId = parentId;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  String value for createdTs.
         * @return Builder
         */
        public Builder createdTs(String createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  String value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(String modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for active.
         * @param  active  String value for active.
         * @return Builder
         */
        public Builder active(String active) {
            this.active = active;
            return this;
        }

        /**
         * Builds a new {@link Filter1} object using the set fields.
         * @return {@link Filter1}
         */
        public Filter1 build() {
            return new Filter1(locationId, accountNumber, contactApiId, firstName, lastName,
                    cellPhone, contactBalance, address, city, state, companyName, headerMessage,
                    dateOfBirth, emailTrxReceipt, homePhone, officePhone, officeExtPhone,
                    headerMessageType, updateIfExists, zip, contactC1, contactC2, contactC3,
                    parentId, email, id, createdTs, modifiedTs, active);
        }
    }
}
