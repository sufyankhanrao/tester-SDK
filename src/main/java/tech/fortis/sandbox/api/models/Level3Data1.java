/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Level3Data1 type.
 */
public class Level3Data1 {
    private String destinationCountryCode;
    private Double dutyAmount;
    private Double freightAmount;
    private Double nationalTax;
    private Double salesTax;
    private String shipfromZipCode;
    private String shiptoZipCode;
    private Double taxAmount;
    private TaxExemptEnum taxExempt;
    private String customerVatRegistration;
    private String merchantVatRegistration;
    private String orderDate;
    private String summaryCommodityCode;
    private Double taxRate;
    private String uniqueVatRefNumber;
    private List<LineItem1> lineItems;

    /**
     * Default constructor.
     */
    public Level3Data1() {
    }

    /**
     * Initialization constructor.
     * @param  destinationCountryCode  String value for destinationCountryCode.
     * @param  dutyAmount  Double value for dutyAmount.
     * @param  freightAmount  Double value for freightAmount.
     * @param  nationalTax  Double value for nationalTax.
     * @param  salesTax  Double value for salesTax.
     * @param  shipfromZipCode  String value for shipfromZipCode.
     * @param  shiptoZipCode  String value for shiptoZipCode.
     * @param  taxAmount  Double value for taxAmount.
     * @param  taxExempt  TaxExemptEnum value for taxExempt.
     * @param  customerVatRegistration  String value for customerVatRegistration.
     * @param  merchantVatRegistration  String value for merchantVatRegistration.
     * @param  orderDate  String value for orderDate.
     * @param  summaryCommodityCode  String value for summaryCommodityCode.
     * @param  taxRate  Double value for taxRate.
     * @param  uniqueVatRefNumber  String value for uniqueVatRefNumber.
     * @param  lineItems  List of LineItem1 value for lineItems.
     */
    public Level3Data1(
            String destinationCountryCode,
            Double dutyAmount,
            Double freightAmount,
            Double nationalTax,
            Double salesTax,
            String shipfromZipCode,
            String shiptoZipCode,
            Double taxAmount,
            TaxExemptEnum taxExempt,
            String customerVatRegistration,
            String merchantVatRegistration,
            String orderDate,
            String summaryCommodityCode,
            Double taxRate,
            String uniqueVatRefNumber,
            List<LineItem1> lineItems) {
        this.destinationCountryCode = destinationCountryCode;
        this.dutyAmount = dutyAmount;
        this.freightAmount = freightAmount;
        this.nationalTax = nationalTax;
        this.salesTax = salesTax;
        this.shipfromZipCode = shipfromZipCode;
        this.shiptoZipCode = shiptoZipCode;
        this.taxAmount = taxAmount;
        this.taxExempt = taxExempt;
        this.customerVatRegistration = customerVatRegistration;
        this.merchantVatRegistration = merchantVatRegistration;
        this.orderDate = orderDate;
        this.summaryCommodityCode = summaryCommodityCode;
        this.taxRate = taxRate;
        this.uniqueVatRefNumber = uniqueVatRefNumber;
        this.lineItems = lineItems;
    }

    /**
     * Getter for DestinationCountryCode.
     * Code of the country where the goods are being shipped.
     * @return Returns the String
     */
    @JsonGetter("destination_country_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDestinationCountryCode() {
        return destinationCountryCode;
    }

    /**
     * Setter for DestinationCountryCode.
     * Code of the country where the goods are being shipped.
     * @param destinationCountryCode Value for String
     */
    @JsonSetter("destination_country_code")
    public void setDestinationCountryCode(String destinationCountryCode) {
        this.destinationCountryCode = destinationCountryCode;
    }

    /**
     * Getter for DutyAmount.
     * Fee amount associated with the import of the purchased goods ,Can accept Two (2) decimal
     * places
     * @return Returns the Double
     */
    @JsonGetter("duty_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDutyAmount() {
        return dutyAmount;
    }

    /**
     * Setter for DutyAmount.
     * Fee amount associated with the import of the purchased goods ,Can accept Two (2) decimal
     * places
     * @param dutyAmount Value for Double
     */
    @JsonSetter("duty_amount")
    public void setDutyAmount(Double dutyAmount) {
        this.dutyAmount = dutyAmount;
    }

    /**
     * Getter for FreightAmount.
     * Freight or shipping portion of the total transaction amount ,Can accept Two (2) decimal
     * places.
     * @return Returns the Double
     */
    @JsonGetter("freight_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getFreightAmount() {
        return freightAmount;
    }

    /**
     * Setter for FreightAmount.
     * Freight or shipping portion of the total transaction amount ,Can accept Two (2) decimal
     * places.
     * @param freightAmount Value for Double
     */
    @JsonSetter("freight_amount")
    public void setFreightAmount(Double freightAmount) {
        this.freightAmount = freightAmount;
    }

    /**
     * Getter for NationalTax.
     * National tax for the transaction ,Can accept Two (2) decimal places.
     * @return Returns the Double
     */
    @JsonGetter("national_tax")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getNationalTax() {
        return nationalTax;
    }

    /**
     * Setter for NationalTax.
     * National tax for the transaction ,Can accept Two (2) decimal places.
     * @param nationalTax Value for Double
     */
    @JsonSetter("national_tax")
    public void setNationalTax(Double nationalTax) {
        this.nationalTax = nationalTax;
    }

    /**
     * Getter for SalesTax.
     * Sales tax for the transaction ,Can accept Two (2) decimal places.
     * @return Returns the Double
     */
    @JsonGetter("sales_tax")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getSalesTax() {
        return salesTax;
    }

    /**
     * Setter for SalesTax.
     * Sales tax for the transaction ,Can accept Two (2) decimal places.
     * @param salesTax Value for Double
     */
    @JsonSetter("sales_tax")
    public void setSalesTax(Double salesTax) {
        this.salesTax = salesTax;
    }

    /**
     * Getter for ShipfromZipCode.
     * Postal/ZIP code of the address from where the purchased goods are being shipped.
     * @return Returns the String
     */
    @JsonGetter("shipfrom_zip_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getShipfromZipCode() {
        return shipfromZipCode;
    }

    /**
     * Setter for ShipfromZipCode.
     * Postal/ZIP code of the address from where the purchased goods are being shipped.
     * @param shipfromZipCode Value for String
     */
    @JsonSetter("shipfrom_zip_code")
    public void setShipfromZipCode(String shipfromZipCode) {
        this.shipfromZipCode = shipfromZipCode;
    }

    /**
     * Getter for ShiptoZipCode.
     * Postal/ZIP code of the address where purchased goods will be delivered.
     * @return Returns the String
     */
    @JsonGetter("shipto_zip_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getShiptoZipCode() {
        return shiptoZipCode;
    }

    /**
     * Setter for ShiptoZipCode.
     * Postal/ZIP code of the address where purchased goods will be delivered.
     * @param shiptoZipCode Value for String
     */
    @JsonSetter("shipto_zip_code")
    public void setShiptoZipCode(String shiptoZipCode) {
        this.shiptoZipCode = shiptoZipCode;
    }

    /**
     * Getter for TaxAmount.
     * Amount of any value added taxes ,Can accept Two (2) decimal places.
     * @return Returns the Double
     */
    @JsonGetter("tax_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTaxAmount() {
        return taxAmount;
    }

    /**
     * Setter for TaxAmount.
     * Amount of any value added taxes ,Can accept Two (2) decimal places.
     * @param taxAmount Value for Double
     */
    @JsonSetter("tax_amount")
    public void setTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
    }

    /**
     * Getter for TaxExempt.
     * Sales Tax Exempt. Allowed values: “1”, “0”.
     * @return Returns the TaxExemptEnum
     */
    @JsonGetter("tax_exempt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TaxExemptEnum getTaxExempt() {
        return taxExempt;
    }

    /**
     * Setter for TaxExempt.
     * Sales Tax Exempt. Allowed values: “1”, “0”.
     * @param taxExempt Value for TaxExemptEnum
     */
    @JsonSetter("tax_exempt")
    public void setTaxExempt(TaxExemptEnum taxExempt) {
        this.taxExempt = taxExempt;
    }

    /**
     * Getter for CustomerVatRegistration.
     * Customer VAT Registration
     * @return Returns the String
     */
    @JsonGetter("customer_vat_registration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCustomerVatRegistration() {
        return customerVatRegistration;
    }

    /**
     * Setter for CustomerVatRegistration.
     * Customer VAT Registration
     * @param customerVatRegistration Value for String
     */
    @JsonSetter("customer_vat_registration")
    public void setCustomerVatRegistration(String customerVatRegistration) {
        this.customerVatRegistration = customerVatRegistration;
    }

    /**
     * Getter for MerchantVatRegistration.
     * Merchant VAT Registration
     * @return Returns the String
     */
    @JsonGetter("merchant_vat_registration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMerchantVatRegistration() {
        return merchantVatRegistration;
    }

    /**
     * Setter for MerchantVatRegistration.
     * Merchant VAT Registration
     * @param merchantVatRegistration Value for String
     */
    @JsonSetter("merchant_vat_registration")
    public void setMerchantVatRegistration(String merchantVatRegistration) {
        this.merchantVatRegistration = merchantVatRegistration;
    }

    /**
     * Getter for OrderDate.
     * Order Date
     * @return Returns the String
     */
    @JsonGetter("order_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrderDate() {
        return orderDate;
    }

    /**
     * Setter for OrderDate.
     * Order Date
     * @param orderDate Value for String
     */
    @JsonSetter("order_date")
    public void setOrderDate(String orderDate) {
        this.orderDate = orderDate;
    }

    /**
     * Getter for SummaryCommodityCode.
     * Summary Commodity Code
     * @return Returns the String
     */
    @JsonGetter("summary_commodity_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSummaryCommodityCode() {
        return summaryCommodityCode;
    }

    /**
     * Setter for SummaryCommodityCode.
     * Summary Commodity Code
     * @param summaryCommodityCode Value for String
     */
    @JsonSetter("summary_commodity_code")
    public void setSummaryCommodityCode(String summaryCommodityCode) {
        this.summaryCommodityCode = summaryCommodityCode;
    }

    /**
     * Getter for TaxRate.
     * Tax rate used to calculate the sales tax amount, can accept 2 decimal places.
     * @return Returns the Double
     */
    @JsonGetter("tax_rate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getTaxRate() {
        return taxRate;
    }

    /**
     * Setter for TaxRate.
     * Tax rate used to calculate the sales tax amount, can accept 2 decimal places.
     * @param taxRate Value for Double
     */
    @JsonSetter("tax_rate")
    public void setTaxRate(Double taxRate) {
        this.taxRate = taxRate;
    }

    /**
     * Getter for UniqueVatRefNumber.
     * Unique VAT Reference Number
     * @return Returns the String
     */
    @JsonGetter("unique_vat_ref_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUniqueVatRefNumber() {
        return uniqueVatRefNumber;
    }

    /**
     * Setter for UniqueVatRefNumber.
     * Unique VAT Reference Number
     * @param uniqueVatRefNumber Value for String
     */
    @JsonSetter("unique_vat_ref_number")
    public void setUniqueVatRefNumber(String uniqueVatRefNumber) {
        this.uniqueVatRefNumber = uniqueVatRefNumber;
    }

    /**
     * Getter for LineItems.
     * Array of line items in transaction
     * @return Returns the List of LineItem1
     */
    @JsonGetter("line_items")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<LineItem1> getLineItems() {
        return lineItems;
    }

    /**
     * Setter for LineItems.
     * Array of line items in transaction
     * @param lineItems Value for List of LineItem1
     */
    @JsonSetter("line_items")
    public void setLineItems(List<LineItem1> lineItems) {
        this.lineItems = lineItems;
    }

    /**
     * Converts this Level3Data1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Level3Data1 [" + "destinationCountryCode=" + destinationCountryCode
                + ", dutyAmount=" + dutyAmount + ", freightAmount=" + freightAmount
                + ", nationalTax=" + nationalTax + ", salesTax=" + salesTax + ", shipfromZipCode="
                + shipfromZipCode + ", shiptoZipCode=" + shiptoZipCode + ", taxAmount=" + taxAmount
                + ", taxExempt=" + taxExempt + ", customerVatRegistration="
                + customerVatRegistration + ", merchantVatRegistration=" + merchantVatRegistration
                + ", orderDate=" + orderDate + ", summaryCommodityCode=" + summaryCommodityCode
                + ", taxRate=" + taxRate + ", uniqueVatRefNumber=" + uniqueVatRefNumber
                + ", lineItems=" + lineItems + "]";
    }

    /**
     * Builds a new {@link Level3Data1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Level3Data1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .destinationCountryCode(getDestinationCountryCode())
                .dutyAmount(getDutyAmount())
                .freightAmount(getFreightAmount())
                .nationalTax(getNationalTax())
                .salesTax(getSalesTax())
                .shipfromZipCode(getShipfromZipCode())
                .shiptoZipCode(getShiptoZipCode())
                .taxAmount(getTaxAmount())
                .taxExempt(getTaxExempt())
                .customerVatRegistration(getCustomerVatRegistration())
                .merchantVatRegistration(getMerchantVatRegistration())
                .orderDate(getOrderDate())
                .summaryCommodityCode(getSummaryCommodityCode())
                .taxRate(getTaxRate())
                .uniqueVatRefNumber(getUniqueVatRefNumber())
                .lineItems(getLineItems());
        return builder;
    }

    /**
     * Class to build instances of {@link Level3Data1}.
     */
    public static class Builder {
        private String destinationCountryCode;
        private Double dutyAmount;
        private Double freightAmount;
        private Double nationalTax;
        private Double salesTax;
        private String shipfromZipCode;
        private String shiptoZipCode;
        private Double taxAmount;
        private TaxExemptEnum taxExempt;
        private String customerVatRegistration;
        private String merchantVatRegistration;
        private String orderDate;
        private String summaryCommodityCode;
        private Double taxRate;
        private String uniqueVatRefNumber;
        private List<LineItem1> lineItems;



        /**
         * Setter for destinationCountryCode.
         * @param  destinationCountryCode  String value for destinationCountryCode.
         * @return Builder
         */
        public Builder destinationCountryCode(String destinationCountryCode) {
            this.destinationCountryCode = destinationCountryCode;
            return this;
        }

        /**
         * Setter for dutyAmount.
         * @param  dutyAmount  Double value for dutyAmount.
         * @return Builder
         */
        public Builder dutyAmount(Double dutyAmount) {
            this.dutyAmount = dutyAmount;
            return this;
        }

        /**
         * Setter for freightAmount.
         * @param  freightAmount  Double value for freightAmount.
         * @return Builder
         */
        public Builder freightAmount(Double freightAmount) {
            this.freightAmount = freightAmount;
            return this;
        }

        /**
         * Setter for nationalTax.
         * @param  nationalTax  Double value for nationalTax.
         * @return Builder
         */
        public Builder nationalTax(Double nationalTax) {
            this.nationalTax = nationalTax;
            return this;
        }

        /**
         * Setter for salesTax.
         * @param  salesTax  Double value for salesTax.
         * @return Builder
         */
        public Builder salesTax(Double salesTax) {
            this.salesTax = salesTax;
            return this;
        }

        /**
         * Setter for shipfromZipCode.
         * @param  shipfromZipCode  String value for shipfromZipCode.
         * @return Builder
         */
        public Builder shipfromZipCode(String shipfromZipCode) {
            this.shipfromZipCode = shipfromZipCode;
            return this;
        }

        /**
         * Setter for shiptoZipCode.
         * @param  shiptoZipCode  String value for shiptoZipCode.
         * @return Builder
         */
        public Builder shiptoZipCode(String shiptoZipCode) {
            this.shiptoZipCode = shiptoZipCode;
            return this;
        }

        /**
         * Setter for taxAmount.
         * @param  taxAmount  Double value for taxAmount.
         * @return Builder
         */
        public Builder taxAmount(Double taxAmount) {
            this.taxAmount = taxAmount;
            return this;
        }

        /**
         * Setter for taxExempt.
         * @param  taxExempt  TaxExemptEnum value for taxExempt.
         * @return Builder
         */
        public Builder taxExempt(TaxExemptEnum taxExempt) {
            this.taxExempt = taxExempt;
            return this;
        }

        /**
         * Setter for customerVatRegistration.
         * @param  customerVatRegistration  String value for customerVatRegistration.
         * @return Builder
         */
        public Builder customerVatRegistration(String customerVatRegistration) {
            this.customerVatRegistration = customerVatRegistration;
            return this;
        }

        /**
         * Setter for merchantVatRegistration.
         * @param  merchantVatRegistration  String value for merchantVatRegistration.
         * @return Builder
         */
        public Builder merchantVatRegistration(String merchantVatRegistration) {
            this.merchantVatRegistration = merchantVatRegistration;
            return this;
        }

        /**
         * Setter for orderDate.
         * @param  orderDate  String value for orderDate.
         * @return Builder
         */
        public Builder orderDate(String orderDate) {
            this.orderDate = orderDate;
            return this;
        }

        /**
         * Setter for summaryCommodityCode.
         * @param  summaryCommodityCode  String value for summaryCommodityCode.
         * @return Builder
         */
        public Builder summaryCommodityCode(String summaryCommodityCode) {
            this.summaryCommodityCode = summaryCommodityCode;
            return this;
        }

        /**
         * Setter for taxRate.
         * @param  taxRate  Double value for taxRate.
         * @return Builder
         */
        public Builder taxRate(Double taxRate) {
            this.taxRate = taxRate;
            return this;
        }

        /**
         * Setter for uniqueVatRefNumber.
         * @param  uniqueVatRefNumber  String value for uniqueVatRefNumber.
         * @return Builder
         */
        public Builder uniqueVatRefNumber(String uniqueVatRefNumber) {
            this.uniqueVatRefNumber = uniqueVatRefNumber;
            return this;
        }

        /**
         * Setter for lineItems.
         * @param  lineItems  List of LineItem1 value for lineItems.
         * @return Builder
         */
        public Builder lineItems(List<LineItem1> lineItems) {
            this.lineItems = lineItems;
            return this;
        }

        /**
         * Builds a new {@link Level3Data1} object using the set fields.
         * @return {@link Level3Data1}
         */
        public Level3Data1 build() {
            return new Level3Data1(destinationCountryCode, dutyAmount, freightAmount, nationalTax,
                    salesTax, shipfromZipCode, shiptoZipCode, taxAmount, taxExempt,
                    customerVatRegistration, merchantVatRegistration, orderDate,
                    summaryCommodityCode, taxRate, uniqueVatRefNumber, lineItems);
        }
    }
}
