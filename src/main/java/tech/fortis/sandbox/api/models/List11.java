/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import tech.fortis.sandbox.api.DateTimeHelper;

/**
 * This is a model class for List11 type.
 */
public class List11 {
    private String accountNumber;
    private String address;
    private String brandingDomainUrl;
    private String cellPhone;
    private String city;
    private String companyName;
    private String contactId;
    private String dateOfBirth;
    private String domainId;
    private String email;
    private boolean emailTrxReceipt;
    private String homePhone;
    private String firstName;
    private String lastName;
    private String locale;
    private String officePhone;
    private String officeExtPhone;
    private String primaryLocationId;
    private String requiresNewPassword;
    private String state;
    private String termsConditionId;
    private String tz;
    private UiPrefs1 uiPrefs;
    private String username;
    private String userApiKey;
    private String userHashKey;
    private UserTypeIdEnum userTypeId;
    private String password;
    private String zip;
    private String locationId;
    private String contactApiId;
    private String primaryLocationApiId;
    private Boolean statusId;
    private String id;
    private int status;
    private double loginAttempts;
    private LocalDateTime lastLoginTs;
    private LocalDateTime createdTs;
    private LocalDateTime modifiedTs;
    private String createdUserId;
    private LocalDateTime termsAcceptedTs;
    private String termsAgreeIp;
    private String currentDateTime;

    /**
     * Default constructor.
     */
    public List11() {
    }

    /**
     * Initialization constructor.
     * @param  brandingDomainUrl  String value for brandingDomainUrl.
     * @param  contactId  String value for contactId.
     * @param  domainId  String value for domainId.
     * @param  email  String value for email.
     * @param  emailTrxReceipt  boolean value for emailTrxReceipt.
     * @param  lastName  String value for lastName.
     * @param  locale  String value for locale.
     * @param  primaryLocationId  String value for primaryLocationId.
     * @param  termsConditionId  String value for termsConditionId.
     * @param  tz  String value for tz.
     * @param  uiPrefs  UiPrefs1 value for uiPrefs.
     * @param  username  String value for username.
     * @param  userTypeId  UserTypeIdEnum value for userTypeId.
     * @param  id  String value for id.
     * @param  status  int value for status.
     * @param  loginAttempts  double value for loginAttempts.
     * @param  lastLoginTs  LocalDateTime value for lastLoginTs.
     * @param  createdTs  LocalDateTime value for createdTs.
     * @param  modifiedTs  LocalDateTime value for modifiedTs.
     * @param  createdUserId  String value for createdUserId.
     * @param  currentDateTime  String value for currentDateTime.
     * @param  accountNumber  String value for accountNumber.
     * @param  address  String value for address.
     * @param  cellPhone  String value for cellPhone.
     * @param  city  String value for city.
     * @param  companyName  String value for companyName.
     * @param  dateOfBirth  String value for dateOfBirth.
     * @param  homePhone  String value for homePhone.
     * @param  firstName  String value for firstName.
     * @param  officePhone  String value for officePhone.
     * @param  officeExtPhone  String value for officeExtPhone.
     * @param  requiresNewPassword  String value for requiresNewPassword.
     * @param  state  String value for state.
     * @param  userApiKey  String value for userApiKey.
     * @param  userHashKey  String value for userHashKey.
     * @param  password  String value for password.
     * @param  zip  String value for zip.
     * @param  locationId  String value for locationId.
     * @param  contactApiId  String value for contactApiId.
     * @param  primaryLocationApiId  String value for primaryLocationApiId.
     * @param  statusId  Boolean value for statusId.
     * @param  termsAcceptedTs  LocalDateTime value for termsAcceptedTs.
     * @param  termsAgreeIp  String value for termsAgreeIp.
     */
    public List11(
            String brandingDomainUrl,
            String contactId,
            String domainId,
            String email,
            boolean emailTrxReceipt,
            String lastName,
            String locale,
            String primaryLocationId,
            String termsConditionId,
            String tz,
            UiPrefs1 uiPrefs,
            String username,
            UserTypeIdEnum userTypeId,
            String id,
            int status,
            double loginAttempts,
            LocalDateTime lastLoginTs,
            LocalDateTime createdTs,
            LocalDateTime modifiedTs,
            String createdUserId,
            String currentDateTime,
            String accountNumber,
            String address,
            String cellPhone,
            String city,
            String companyName,
            String dateOfBirth,
            String homePhone,
            String firstName,
            String officePhone,
            String officeExtPhone,
            String requiresNewPassword,
            String state,
            String userApiKey,
            String userHashKey,
            String password,
            String zip,
            String locationId,
            String contactApiId,
            String primaryLocationApiId,
            Boolean statusId,
            LocalDateTime termsAcceptedTs,
            String termsAgreeIp) {
        this.accountNumber = accountNumber;
        this.address = address;
        this.brandingDomainUrl = brandingDomainUrl;
        this.cellPhone = cellPhone;
        this.city = city;
        this.companyName = companyName;
        this.contactId = contactId;
        this.dateOfBirth = dateOfBirth;
        this.domainId = domainId;
        this.email = email;
        this.emailTrxReceipt = emailTrxReceipt;
        this.homePhone = homePhone;
        this.firstName = firstName;
        this.lastName = lastName;
        this.locale = locale;
        this.officePhone = officePhone;
        this.officeExtPhone = officeExtPhone;
        this.primaryLocationId = primaryLocationId;
        this.requiresNewPassword = requiresNewPassword;
        this.state = state;
        this.termsConditionId = termsConditionId;
        this.tz = tz;
        this.uiPrefs = uiPrefs;
        this.username = username;
        this.userApiKey = userApiKey;
        this.userHashKey = userHashKey;
        this.userTypeId = userTypeId;
        this.password = password;
        this.zip = zip;
        this.locationId = locationId;
        this.contactApiId = contactApiId;
        this.primaryLocationApiId = primaryLocationApiId;
        this.statusId = statusId;
        this.id = id;
        this.status = status;
        this.loginAttempts = loginAttempts;
        this.lastLoginTs = lastLoginTs;
        this.createdTs = createdTs;
        this.modifiedTs = modifiedTs;
        this.createdUserId = createdUserId;
        this.termsAcceptedTs = termsAcceptedTs;
        this.termsAgreeIp = termsAgreeIp;
        this.currentDateTime = currentDateTime;
    }

    /**
     * Getter for AccountNumber.
     * Account Number
     * @return Returns the String
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account Number
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for Address.
     * Address
     * @return Returns the String
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * Address
     * @param address Value for String
     */
    @JsonSetter("address")
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for BrandingDomainUrl.
     * Address
     * @return Returns the String
     */
    @JsonGetter("branding_domain_url")
    public String getBrandingDomainUrl() {
        return brandingDomainUrl;
    }

    /**
     * Setter for BrandingDomainUrl.
     * Address
     * @param brandingDomainUrl Value for String
     */
    @JsonSetter("branding_domain_url")
    public void setBrandingDomainUrl(String brandingDomainUrl) {
        this.brandingDomainUrl = brandingDomainUrl;
    }

    /**
     * Getter for CellPhone.
     * Cell Phone
     * @return Returns the String
     */
    @JsonGetter("cell_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCellPhone() {
        return cellPhone;
    }

    /**
     * Setter for CellPhone.
     * Cell Phone
     * @param cellPhone Value for String
     */
    @JsonSetter("cell_phone")
    public void setCellPhone(String cellPhone) {
        this.cellPhone = cellPhone;
    }

    /**
     * Getter for City.
     * City
     * @return Returns the String
     */
    @JsonGetter("city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCity() {
        return city;
    }

    /**
     * Setter for City.
     * City
     * @param city Value for String
     */
    @JsonSetter("city")
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for CompanyName.
     * Company Name
     * @return Returns the String
     */
    @JsonGetter("company_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyName() {
        return companyName;
    }

    /**
     * Setter for CompanyName.
     * Company Name
     * @param companyName Value for String
     */
    @JsonSetter("company_name")
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    /**
     * Getter for ContactId.
     * Contact
     * @return Returns the String
     */
    @JsonGetter("contact_id")
    public String getContactId() {
        return contactId;
    }

    /**
     * Setter for ContactId.
     * Contact
     * @param contactId Value for String
     */
    @JsonSetter("contact_id")
    public void setContactId(String contactId) {
        this.contactId = contactId;
    }

    /**
     * Getter for DateOfBirth.
     * Date Of Birth
     * @return Returns the String
     */
    @JsonGetter("date_of_birth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * Setter for DateOfBirth.
     * Date Of Birth
     * @param dateOfBirth Value for String
     */
    @JsonSetter("date_of_birth")
    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Getter for DomainId.
     * Domain
     * @return Returns the String
     */
    @JsonGetter("domain_id")
    public String getDomainId() {
        return domainId;
    }

    /**
     * Setter for DomainId.
     * Domain
     * @param domainId Value for String
     */
    @JsonSetter("domain_id")
    public void setDomainId(String domainId) {
        this.domainId = domainId;
    }

    /**
     * Getter for Email.
     * Email
     * @return Returns the String
     */
    @JsonGetter("email")
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * Email
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for EmailTrxReceipt.
     * Email Trx Receipt
     * @return Returns the boolean
     */
    @JsonGetter("email_trx_receipt")
    public boolean getEmailTrxReceipt() {
        return emailTrxReceipt;
    }

    /**
     * Setter for EmailTrxReceipt.
     * Email Trx Receipt
     * @param emailTrxReceipt Value for boolean
     */
    @JsonSetter("email_trx_receipt")
    public void setEmailTrxReceipt(boolean emailTrxReceipt) {
        this.emailTrxReceipt = emailTrxReceipt;
    }

    /**
     * Getter for HomePhone.
     * Home Phone
     * @return Returns the String
     */
    @JsonGetter("home_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHomePhone() {
        return homePhone;
    }

    /**
     * Setter for HomePhone.
     * Home Phone
     * @param homePhone Value for String
     */
    @JsonSetter("home_phone")
    public void setHomePhone(String homePhone) {
        this.homePhone = homePhone;
    }

    /**
     * Getter for FirstName.
     * First Name
     * @return Returns the String
     */
    @JsonGetter("first_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirstName() {
        return firstName;
    }

    /**
     * Setter for FirstName.
     * First Name
     * @param firstName Value for String
     */
    @JsonSetter("first_name")
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for LastName.
     * Last Name
     * @return Returns the String
     */
    @JsonGetter("last_name")
    public String getLastName() {
        return lastName;
    }

    /**
     * Setter for LastName.
     * Last Name
     * @param lastName Value for String
     */
    @JsonSetter("last_name")
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for Locale.
     * Locale
     * @return Returns the String
     */
    @JsonGetter("locale")
    public String getLocale() {
        return locale;
    }

    /**
     * Setter for Locale.
     * Locale
     * @param locale Value for String
     */
    @JsonSetter("locale")
    public void setLocale(String locale) {
        this.locale = locale;
    }

    /**
     * Getter for OfficePhone.
     * Office Phone
     * @return Returns the String
     */
    @JsonGetter("office_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficePhone() {
        return officePhone;
    }

    /**
     * Setter for OfficePhone.
     * Office Phone
     * @param officePhone Value for String
     */
    @JsonSetter("office_phone")
    public void setOfficePhone(String officePhone) {
        this.officePhone = officePhone;
    }

    /**
     * Getter for OfficeExtPhone.
     * Office Ext Phone
     * @return Returns the String
     */
    @JsonGetter("office_ext_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficeExtPhone() {
        return officeExtPhone;
    }

    /**
     * Setter for OfficeExtPhone.
     * Office Ext Phone
     * @param officeExtPhone Value for String
     */
    @JsonSetter("office_ext_phone")
    public void setOfficeExtPhone(String officeExtPhone) {
        this.officeExtPhone = officeExtPhone;
    }

    /**
     * Getter for PrimaryLocationId.
     * Primary Location ID
     * @return Returns the String
     */
    @JsonGetter("primary_location_id")
    public String getPrimaryLocationId() {
        return primaryLocationId;
    }

    /**
     * Setter for PrimaryLocationId.
     * Primary Location ID
     * @param primaryLocationId Value for String
     */
    @JsonSetter("primary_location_id")
    public void setPrimaryLocationId(String primaryLocationId) {
        this.primaryLocationId = primaryLocationId;
    }

    /**
     * Getter for RequiresNewPassword.
     * Requires New Password
     * @return Returns the String
     */
    @JsonGetter("requires_new_password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRequiresNewPassword() {
        return requiresNewPassword;
    }

    /**
     * Setter for RequiresNewPassword.
     * Requires New Password
     * @param requiresNewPassword Value for String
     */
    @JsonSetter("requires_new_password")
    public void setRequiresNewPassword(String requiresNewPassword) {
        this.requiresNewPassword = requiresNewPassword;
    }

    /**
     * Getter for State.
     * State
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * State
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for TermsConditionId.
     * Terms Agree Ip
     * @return Returns the String
     */
    @JsonGetter("terms_condition_id")
    public String getTermsConditionId() {
        return termsConditionId;
    }

    /**
     * Setter for TermsConditionId.
     * Terms Agree Ip
     * @param termsConditionId Value for String
     */
    @JsonSetter("terms_condition_id")
    public void setTermsConditionId(String termsConditionId) {
        this.termsConditionId = termsConditionId;
    }

    /**
     * Getter for Tz.
     * Time zone
     * @return Returns the String
     */
    @JsonGetter("tz")
    public String getTz() {
        return tz;
    }

    /**
     * Setter for Tz.
     * Time zone
     * @param tz Value for String
     */
    @JsonSetter("tz")
    public void setTz(String tz) {
        this.tz = tz;
    }

    /**
     * Getter for UiPrefs.
     * Ui Prefs
     * @return Returns the UiPrefs1
     */
    @JsonGetter("ui_prefs")
    public UiPrefs1 getUiPrefs() {
        return uiPrefs;
    }

    /**
     * Setter for UiPrefs.
     * Ui Prefs
     * @param uiPrefs Value for UiPrefs1
     */
    @JsonSetter("ui_prefs")
    public void setUiPrefs(UiPrefs1 uiPrefs) {
        this.uiPrefs = uiPrefs;
    }

    /**
     * Getter for Username.
     * Username
     * @return Returns the String
     */
    @JsonGetter("username")
    public String getUsername() {
        return username;
    }

    /**
     * Setter for Username.
     * Username
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for UserApiKey.
     * User Api Key
     * @return Returns the String
     */
    @JsonGetter("user_api_key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUserApiKey() {
        return userApiKey;
    }

    /**
     * Setter for UserApiKey.
     * User Api Key
     * @param userApiKey Value for String
     */
    @JsonSetter("user_api_key")
    public void setUserApiKey(String userApiKey) {
        this.userApiKey = userApiKey;
    }

    /**
     * Getter for UserHashKey.
     * User Hash Key
     * @return Returns the String
     */
    @JsonGetter("user_hash_key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUserHashKey() {
        return userHashKey;
    }

    /**
     * Setter for UserHashKey.
     * User Hash Key
     * @param userHashKey Value for String
     */
    @JsonSetter("user_hash_key")
    public void setUserHashKey(String userHashKey) {
        this.userHashKey = userHashKey;
    }

    /**
     * Getter for UserTypeId.
     * User Type
     * @return Returns the UserTypeIdEnum
     */
    @JsonGetter("user_type_id")
    public UserTypeIdEnum getUserTypeId() {
        return userTypeId;
    }

    /**
     * Setter for UserTypeId.
     * User Type
     * @param userTypeId Value for UserTypeIdEnum
     */
    @JsonSetter("user_type_id")
    public void setUserTypeId(UserTypeIdEnum userTypeId) {
        this.userTypeId = userTypeId;
    }

    /**
     * Getter for Password.
     * Password
     * @return Returns the String
     */
    @JsonGetter("password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPassword() {
        return password;
    }

    /**
     * Setter for Password.
     * Password
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for Zip.
     * Zip
     * @return Returns the String
     */
    @JsonGetter("zip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZip() {
        return zip;
    }

    /**
     * Setter for Zip.
     * Zip
     * @param zip Value for String
     */
    @JsonSetter("zip")
    public void setZip(String zip) {
        this.zip = zip;
    }

    /**
     * Getter for LocationId.
     * Location ID
     * @return Returns the String
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * Location ID
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for ContactApiId.
     * ContactApi Id
     * @return Returns the String
     */
    @JsonGetter("contact_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactApiId() {
        return contactApiId;
    }

    /**
     * Setter for ContactApiId.
     * ContactApi Id
     * @param contactApiId Value for String
     */
    @JsonSetter("contact_api_id")
    public void setContactApiId(String contactApiId) {
        this.contactApiId = contactApiId;
    }

    /**
     * Getter for PrimaryLocationApiId.
     * Primary LocationApi ID
     * @return Returns the String
     */
    @JsonGetter("primary_location_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrimaryLocationApiId() {
        return primaryLocationApiId;
    }

    /**
     * Setter for PrimaryLocationApiId.
     * Primary LocationApi ID
     * @param primaryLocationApiId Value for String
     */
    @JsonSetter("primary_location_api_id")
    public void setPrimaryLocationApiId(String primaryLocationApiId) {
        this.primaryLocationApiId = primaryLocationApiId;
    }

    /**
     * Getter for StatusId.
     * Status
     * @return Returns the Boolean
     */
    @JsonGetter("status_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getStatusId() {
        return statusId;
    }

    /**
     * Setter for StatusId.
     * Status
     * @param statusId Value for Boolean
     */
    @JsonSetter("status_id")
    public void setStatusId(Boolean statusId) {
        this.statusId = statusId;
    }

    /**
     * Getter for Id.
     * User ID
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * User ID
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Status.
     * Status
     * @return Returns the int
     */
    @JsonGetter("status")
    public int getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Status
     * @param status Value for int
     */
    @JsonSetter("status")
    public void setStatus(int status) {
        this.status = status;
    }

    /**
     * Getter for LoginAttempts.
     * Login Attempts
     * @return Returns the double
     */
    @JsonGetter("login_attempts")
    public double getLoginAttempts() {
        return loginAttempts;
    }

    /**
     * Setter for LoginAttempts.
     * Login Attempts
     * @param loginAttempts Value for double
     */
    @JsonSetter("login_attempts")
    public void setLoginAttempts(double loginAttempts) {
        this.loginAttempts = loginAttempts;
    }

    /**
     * Getter for LastLoginTs.
     * Last Login
     * @return Returns the LocalDateTime
     */
    @JsonGetter("last_login_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastLoginTs() {
        return lastLoginTs;
    }

    /**
     * Setter for LastLoginTs.
     * Last Login
     * @param lastLoginTs Value for LocalDateTime
     */
    @JsonSetter("last_login_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastLoginTs(LocalDateTime lastLoginTs) {
        this.lastLoginTs = lastLoginTs;
    }

    /**
     * Getter for CreatedTs.
     * Created Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * Created Time Stamp
     * @param createdTs Value for LocalDateTime
     */
    @JsonSetter("created_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedTs(LocalDateTime createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for ModifiedTs.
     * Modified Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("modified_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * Modified Time Stamp
     * @param modifiedTs Value for LocalDateTime
     */
    @JsonSetter("modified_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setModifiedTs(LocalDateTime modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for CreatedUserId.
     * Created User
     * @return Returns the String
     */
    @JsonGetter("created_user_id")
    public String getCreatedUserId() {
        return createdUserId;
    }

    /**
     * Setter for CreatedUserId.
     * Created User
     * @param createdUserId Value for String
     */
    @JsonSetter("created_user_id")
    public void setCreatedUserId(String createdUserId) {
        this.createdUserId = createdUserId;
    }

    /**
     * Getter for TermsAcceptedTs.
     * Terms Accepted
     * @return Returns the LocalDateTime
     */
    @JsonGetter("terms_accepted_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getTermsAcceptedTs() {
        return termsAcceptedTs;
    }

    /**
     * Setter for TermsAcceptedTs.
     * Terms Accepted
     * @param termsAcceptedTs Value for LocalDateTime
     */
    @JsonSetter("terms_accepted_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTermsAcceptedTs(LocalDateTime termsAcceptedTs) {
        this.termsAcceptedTs = termsAcceptedTs;
    }

    /**
     * Getter for TermsAgreeIp.
     * Terms Agree Ip
     * @return Returns the String
     */
    @JsonGetter("terms_agree_ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTermsAgreeIp() {
        return termsAgreeIp;
    }

    /**
     * Setter for TermsAgreeIp.
     * Terms Agree Ip
     * @param termsAgreeIp Value for String
     */
    @JsonSetter("terms_agree_ip")
    public void setTermsAgreeIp(String termsAgreeIp) {
        this.termsAgreeIp = termsAgreeIp;
    }

    /**
     * Getter for CurrentDateTime.
     * Current Date Time
     * @return Returns the String
     */
    @JsonGetter("current_date_time")
    public String getCurrentDateTime() {
        return currentDateTime;
    }

    /**
     * Setter for CurrentDateTime.
     * Current Date Time
     * @param currentDateTime Value for String
     */
    @JsonSetter("current_date_time")
    public void setCurrentDateTime(String currentDateTime) {
        this.currentDateTime = currentDateTime;
    }

    /**
     * Converts this List11 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "List11 [" + "brandingDomainUrl=" + brandingDomainUrl + ", contactId=" + contactId
                + ", domainId=" + domainId + ", email=" + email + ", emailTrxReceipt="
                + emailTrxReceipt + ", lastName=" + lastName + ", locale=" + locale
                + ", primaryLocationId=" + primaryLocationId + ", termsConditionId="
                + termsConditionId + ", tz=" + tz + ", uiPrefs=" + uiPrefs + ", username="
                + username + ", userTypeId=" + userTypeId + ", id=" + id + ", status=" + status
                + ", loginAttempts=" + loginAttempts + ", lastLoginTs=" + lastLoginTs
                + ", createdTs=" + createdTs + ", modifiedTs=" + modifiedTs + ", createdUserId="
                + createdUserId + ", currentDateTime=" + currentDateTime + ", accountNumber="
                + accountNumber + ", address=" + address + ", cellPhone=" + cellPhone + ", city="
                + city + ", companyName=" + companyName + ", dateOfBirth=" + dateOfBirth
                + ", homePhone=" + homePhone + ", firstName=" + firstName + ", officePhone="
                + officePhone + ", officeExtPhone=" + officeExtPhone + ", requiresNewPassword="
                + requiresNewPassword + ", state=" + state + ", userApiKey=" + userApiKey
                + ", userHashKey=" + userHashKey + ", password=" + password + ", zip=" + zip
                + ", locationId=" + locationId + ", contactApiId=" + contactApiId
                + ", primaryLocationApiId=" + primaryLocationApiId + ", statusId=" + statusId
                + ", termsAcceptedTs=" + termsAcceptedTs + ", termsAgreeIp=" + termsAgreeIp + "]";
    }

    /**
     * Builds a new {@link List11.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link List11.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(brandingDomainUrl, contactId, domainId, email,
                emailTrxReceipt, lastName, locale, primaryLocationId, termsConditionId, tz, uiPrefs,
                username, userTypeId, id, status, loginAttempts, lastLoginTs, createdTs, modifiedTs,
                createdUserId, currentDateTime)
                .accountNumber(getAccountNumber())
                .address(getAddress())
                .cellPhone(getCellPhone())
                .city(getCity())
                .companyName(getCompanyName())
                .dateOfBirth(getDateOfBirth())
                .homePhone(getHomePhone())
                .firstName(getFirstName())
                .officePhone(getOfficePhone())
                .officeExtPhone(getOfficeExtPhone())
                .requiresNewPassword(getRequiresNewPassword())
                .state(getState())
                .userApiKey(getUserApiKey())
                .userHashKey(getUserHashKey())
                .password(getPassword())
                .zip(getZip())
                .locationId(getLocationId())
                .contactApiId(getContactApiId())
                .primaryLocationApiId(getPrimaryLocationApiId())
                .statusId(getStatusId())
                .termsAcceptedTs(getTermsAcceptedTs())
                .termsAgreeIp(getTermsAgreeIp());
        return builder;
    }

    /**
     * Class to build instances of {@link List11}.
     */
    public static class Builder {
        private String brandingDomainUrl;
        private String contactId;
        private String domainId;
        private String email;
        private boolean emailTrxReceipt;
        private String lastName;
        private String locale;
        private String primaryLocationId;
        private String termsConditionId;
        private String tz;
        private UiPrefs1 uiPrefs;
        private String username;
        private UserTypeIdEnum userTypeId;
        private String id;
        private int status;
        private double loginAttempts;
        private LocalDateTime lastLoginTs;
        private LocalDateTime createdTs;
        private LocalDateTime modifiedTs;
        private String createdUserId;
        private String currentDateTime;
        private String accountNumber;
        private String address;
        private String cellPhone;
        private String city;
        private String companyName;
        private String dateOfBirth;
        private String homePhone;
        private String firstName;
        private String officePhone;
        private String officeExtPhone;
        private String requiresNewPassword;
        private String state;
        private String userApiKey;
        private String userHashKey;
        private String password;
        private String zip;
        private String locationId;
        private String contactApiId;
        private String primaryLocationApiId;
        private Boolean statusId;
        private LocalDateTime termsAcceptedTs;
        private String termsAgreeIp;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  brandingDomainUrl  String value for brandingDomainUrl.
         * @param  contactId  String value for contactId.
         * @param  domainId  String value for domainId.
         * @param  email  String value for email.
         * @param  emailTrxReceipt  boolean value for emailTrxReceipt.
         * @param  lastName  String value for lastName.
         * @param  locale  String value for locale.
         * @param  primaryLocationId  String value for primaryLocationId.
         * @param  termsConditionId  String value for termsConditionId.
         * @param  tz  String value for tz.
         * @param  uiPrefs  UiPrefs1 value for uiPrefs.
         * @param  username  String value for username.
         * @param  userTypeId  UserTypeIdEnum value for userTypeId.
         * @param  id  String value for id.
         * @param  status  int value for status.
         * @param  loginAttempts  double value for loginAttempts.
         * @param  lastLoginTs  LocalDateTime value for lastLoginTs.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @param  createdUserId  String value for createdUserId.
         * @param  currentDateTime  String value for currentDateTime.
         */
        public Builder(String brandingDomainUrl, String contactId, String domainId, String email,
                boolean emailTrxReceipt, String lastName, String locale, String primaryLocationId,
                String termsConditionId, String tz, UiPrefs1 uiPrefs, String username,
                UserTypeIdEnum userTypeId, String id, int status, double loginAttempts,
                LocalDateTime lastLoginTs, LocalDateTime createdTs, LocalDateTime modifiedTs,
                String createdUserId, String currentDateTime) {
            this.brandingDomainUrl = brandingDomainUrl;
            this.contactId = contactId;
            this.domainId = domainId;
            this.email = email;
            this.emailTrxReceipt = emailTrxReceipt;
            this.lastName = lastName;
            this.locale = locale;
            this.primaryLocationId = primaryLocationId;
            this.termsConditionId = termsConditionId;
            this.tz = tz;
            this.uiPrefs = uiPrefs;
            this.username = username;
            this.userTypeId = userTypeId;
            this.id = id;
            this.status = status;
            this.loginAttempts = loginAttempts;
            this.lastLoginTs = lastLoginTs;
            this.createdTs = createdTs;
            this.modifiedTs = modifiedTs;
            this.createdUserId = createdUserId;
            this.currentDateTime = currentDateTime;
        }

        /**
         * Setter for brandingDomainUrl.
         * @param  brandingDomainUrl  String value for brandingDomainUrl.
         * @return Builder
         */
        public Builder brandingDomainUrl(String brandingDomainUrl) {
            this.brandingDomainUrl = brandingDomainUrl;
            return this;
        }

        /**
         * Setter for contactId.
         * @param  contactId  String value for contactId.
         * @return Builder
         */
        public Builder contactId(String contactId) {
            this.contactId = contactId;
            return this;
        }

        /**
         * Setter for domainId.
         * @param  domainId  String value for domainId.
         * @return Builder
         */
        public Builder domainId(String domainId) {
            this.domainId = domainId;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for emailTrxReceipt.
         * @param  emailTrxReceipt  boolean value for emailTrxReceipt.
         * @return Builder
         */
        public Builder emailTrxReceipt(boolean emailTrxReceipt) {
            this.emailTrxReceipt = emailTrxReceipt;
            return this;
        }

        /**
         * Setter for lastName.
         * @param  lastName  String value for lastName.
         * @return Builder
         */
        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * Setter for locale.
         * @param  locale  String value for locale.
         * @return Builder
         */
        public Builder locale(String locale) {
            this.locale = locale;
            return this;
        }

        /**
         * Setter for primaryLocationId.
         * @param  primaryLocationId  String value for primaryLocationId.
         * @return Builder
         */
        public Builder primaryLocationId(String primaryLocationId) {
            this.primaryLocationId = primaryLocationId;
            return this;
        }

        /**
         * Setter for termsConditionId.
         * @param  termsConditionId  String value for termsConditionId.
         * @return Builder
         */
        public Builder termsConditionId(String termsConditionId) {
            this.termsConditionId = termsConditionId;
            return this;
        }

        /**
         * Setter for tz.
         * @param  tz  String value for tz.
         * @return Builder
         */
        public Builder tz(String tz) {
            this.tz = tz;
            return this;
        }

        /**
         * Setter for uiPrefs.
         * @param  uiPrefs  UiPrefs1 value for uiPrefs.
         * @return Builder
         */
        public Builder uiPrefs(UiPrefs1 uiPrefs) {
            this.uiPrefs = uiPrefs;
            return this;
        }

        /**
         * Setter for username.
         * @param  username  String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for userTypeId.
         * @param  userTypeId  UserTypeIdEnum value for userTypeId.
         * @return Builder
         */
        public Builder userTypeId(UserTypeIdEnum userTypeId) {
            this.userTypeId = userTypeId;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  int value for status.
         * @return Builder
         */
        public Builder status(int status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for loginAttempts.
         * @param  loginAttempts  double value for loginAttempts.
         * @return Builder
         */
        public Builder loginAttempts(double loginAttempts) {
            this.loginAttempts = loginAttempts;
            return this;
        }

        /**
         * Setter for lastLoginTs.
         * @param  lastLoginTs  LocalDateTime value for lastLoginTs.
         * @return Builder
         */
        public Builder lastLoginTs(LocalDateTime lastLoginTs) {
            this.lastLoginTs = lastLoginTs;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @return Builder
         */
        public Builder createdTs(LocalDateTime createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(LocalDateTime modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for createdUserId.
         * @param  createdUserId  String value for createdUserId.
         * @return Builder
         */
        public Builder createdUserId(String createdUserId) {
            this.createdUserId = createdUserId;
            return this;
        }

        /**
         * Setter for currentDateTime.
         * @param  currentDateTime  String value for currentDateTime.
         * @return Builder
         */
        public Builder currentDateTime(String currentDateTime) {
            this.currentDateTime = currentDateTime;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  String value for address.
         * @return Builder
         */
        public Builder address(String address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for cellPhone.
         * @param  cellPhone  String value for cellPhone.
         * @return Builder
         */
        public Builder cellPhone(String cellPhone) {
            this.cellPhone = cellPhone;
            return this;
        }

        /**
         * Setter for city.
         * @param  city  String value for city.
         * @return Builder
         */
        public Builder city(String city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for companyName.
         * @param  companyName  String value for companyName.
         * @return Builder
         */
        public Builder companyName(String companyName) {
            this.companyName = companyName;
            return this;
        }

        /**
         * Setter for dateOfBirth.
         * @param  dateOfBirth  String value for dateOfBirth.
         * @return Builder
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        /**
         * Setter for homePhone.
         * @param  homePhone  String value for homePhone.
         * @return Builder
         */
        public Builder homePhone(String homePhone) {
            this.homePhone = homePhone;
            return this;
        }

        /**
         * Setter for firstName.
         * @param  firstName  String value for firstName.
         * @return Builder
         */
        public Builder firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * Setter for officePhone.
         * @param  officePhone  String value for officePhone.
         * @return Builder
         */
        public Builder officePhone(String officePhone) {
            this.officePhone = officePhone;
            return this;
        }

        /**
         * Setter for officeExtPhone.
         * @param  officeExtPhone  String value for officeExtPhone.
         * @return Builder
         */
        public Builder officeExtPhone(String officeExtPhone) {
            this.officeExtPhone = officeExtPhone;
            return this;
        }

        /**
         * Setter for requiresNewPassword.
         * @param  requiresNewPassword  String value for requiresNewPassword.
         * @return Builder
         */
        public Builder requiresNewPassword(String requiresNewPassword) {
            this.requiresNewPassword = requiresNewPassword;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for userApiKey.
         * @param  userApiKey  String value for userApiKey.
         * @return Builder
         */
        public Builder userApiKey(String userApiKey) {
            this.userApiKey = userApiKey;
            return this;
        }

        /**
         * Setter for userHashKey.
         * @param  userHashKey  String value for userHashKey.
         * @return Builder
         */
        public Builder userHashKey(String userHashKey) {
            this.userHashKey = userHashKey;
            return this;
        }

        /**
         * Setter for password.
         * @param  password  String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for zip.
         * @param  zip  String value for zip.
         * @return Builder
         */
        public Builder zip(String zip) {
            this.zip = zip;
            return this;
        }

        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for contactApiId.
         * @param  contactApiId  String value for contactApiId.
         * @return Builder
         */
        public Builder contactApiId(String contactApiId) {
            this.contactApiId = contactApiId;
            return this;
        }

        /**
         * Setter for primaryLocationApiId.
         * @param  primaryLocationApiId  String value for primaryLocationApiId.
         * @return Builder
         */
        public Builder primaryLocationApiId(String primaryLocationApiId) {
            this.primaryLocationApiId = primaryLocationApiId;
            return this;
        }

        /**
         * Setter for statusId.
         * @param  statusId  Boolean value for statusId.
         * @return Builder
         */
        public Builder statusId(Boolean statusId) {
            this.statusId = statusId;
            return this;
        }

        /**
         * Setter for termsAcceptedTs.
         * @param  termsAcceptedTs  LocalDateTime value for termsAcceptedTs.
         * @return Builder
         */
        public Builder termsAcceptedTs(LocalDateTime termsAcceptedTs) {
            this.termsAcceptedTs = termsAcceptedTs;
            return this;
        }

        /**
         * Setter for termsAgreeIp.
         * @param  termsAgreeIp  String value for termsAgreeIp.
         * @return Builder
         */
        public Builder termsAgreeIp(String termsAgreeIp) {
            this.termsAgreeIp = termsAgreeIp;
            return this;
        }

        /**
         * Builds a new {@link List11} object using the set fields.
         * @return {@link List11}
         */
        public List11 build() {
            return new List11(brandingDomainUrl, contactId, domainId, email, emailTrxReceipt,
                    lastName, locale, primaryLocationId, termsConditionId, tz, uiPrefs, username,
                    userTypeId, id, status, loginAttempts, lastLoginTs, createdTs, modifiedTs,
                    createdUserId, currentDateTime, accountNumber, address, cellPhone, city,
                    companyName, dateOfBirth, homePhone, firstName, officePhone, officeExtPhone,
                    requiresNewPassword, state, userApiKey, userHashKey, password, zip, locationId,
                    contactApiId, primaryLocationApiId, statusId, termsAcceptedTs, termsAgreeIp);
        }
    }
}
