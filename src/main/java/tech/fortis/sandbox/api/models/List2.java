/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import tech.fortis.sandbox.api.DateTimeHelper;

/**
 * This is a model class for List2 type.
 */
public class List2 {
    private String locationId;
    private String terminalId;
    private boolean requireSignature;
    private String deviceTermApiId;
    private String termsConditions;
    private LocalDateTime createdTs;
    private String createdUserId;
    private String id;
    private LocalDateTime modifiedTs;
    private int reasonCodeId;
    private Object signature;

    /**
     * Default constructor.
     */
    public List2() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  String value for locationId.
     * @param  terminalId  String value for terminalId.
     * @param  requireSignature  boolean value for requireSignature.
     * @param  termsConditions  String value for termsConditions.
     * @param  createdTs  LocalDateTime value for createdTs.
     * @param  createdUserId  String value for createdUserId.
     * @param  id  String value for id.
     * @param  modifiedTs  LocalDateTime value for modifiedTs.
     * @param  reasonCodeId  int value for reasonCodeId.
     * @param  signature  Object value for signature.
     * @param  deviceTermApiId  String value for deviceTermApiId.
     */
    public List2(
            String locationId,
            String terminalId,
            boolean requireSignature,
            String termsConditions,
            LocalDateTime createdTs,
            String createdUserId,
            String id,
            LocalDateTime modifiedTs,
            int reasonCodeId,
            Object signature,
            String deviceTermApiId) {
        this.locationId = locationId;
        this.terminalId = terminalId;
        this.requireSignature = requireSignature;
        this.deviceTermApiId = deviceTermApiId;
        this.termsConditions = termsConditions;
        this.createdTs = createdTs;
        this.createdUserId = createdUserId;
        this.id = id;
        this.modifiedTs = modifiedTs;
        this.reasonCodeId = reasonCodeId;
        this.signature = signature;
    }

    /**
     * Getter for LocationId.
     * Location ID
     * @return Returns the String
     */
    @JsonGetter("location_id")
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * Location ID
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for TerminalId.
     * Terminal ID
     * @return Returns the String
     */
    @JsonGetter("terminal_id")
    public String getTerminalId() {
        return terminalId;
    }

    /**
     * Setter for TerminalId.
     * Terminal ID
     * @param terminalId Value for String
     */
    @JsonSetter("terminal_id")
    public void setTerminalId(String terminalId) {
        this.terminalId = terminalId;
    }

    /**
     * Getter for RequireSignature.
     * Set to true or 1 to require a signature from the customer
     * @return Returns the boolean
     */
    @JsonGetter("require_signature")
    public boolean getRequireSignature() {
        return requireSignature;
    }

    /**
     * Setter for RequireSignature.
     * Set to true or 1 to require a signature from the customer
     * @param requireSignature Value for boolean
     */
    @JsonSetter("require_signature")
    public void setRequireSignature(boolean requireSignature) {
        this.requireSignature = requireSignature;
    }

    /**
     * Getter for DeviceTermApiId.
     * Can be used for associating record to external systems. Must be unique per location.
     * @return Returns the String
     */
    @JsonGetter("device_term_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceTermApiId() {
        return deviceTermApiId;
    }

    /**
     * Setter for DeviceTermApiId.
     * Can be used for associating record to external systems. Must be unique per location.
     * @param deviceTermApiId Value for String
     */
    @JsonSetter("device_term_api_id")
    public void setDeviceTermApiId(String deviceTermApiId) {
        this.deviceTermApiId = deviceTermApiId;
    }

    /**
     * Getter for TermsConditions.
     * This is the message that is displayed on the screen when prompting for a signature.
     * @return Returns the String
     */
    @JsonGetter("terms_conditions")
    public String getTermsConditions() {
        return termsConditions;
    }

    /**
     * Setter for TermsConditions.
     * This is the message that is displayed on the screen when prompting for a signature.
     * @param termsConditions Value for String
     */
    @JsonSetter("terms_conditions")
    public void setTermsConditions(String termsConditions) {
        this.termsConditions = termsConditions;
    }

    /**
     * Getter for CreatedTs.
     * Created Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * Created Time Stamp
     * @param createdTs Value for LocalDateTime
     */
    @JsonSetter("created_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedTs(LocalDateTime createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for CreatedUserId.
     * System generated id for user who created record
     * @return Returns the String
     */
    @JsonGetter("created_user_id")
    public String getCreatedUserId() {
        return createdUserId;
    }

    /**
     * Setter for CreatedUserId.
     * System generated id for user who created record
     * @param createdUserId Value for String
     */
    @JsonSetter("created_user_id")
    public void setCreatedUserId(String createdUserId) {
        this.createdUserId = createdUserId;
    }

    /**
     * Getter for Id.
     * Device term ID
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Device term ID
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for ModifiedTs.
     * Modified Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("modified_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * Modified Time Stamp
     * @param modifiedTs Value for LocalDateTime
     */
    @JsonSetter("modified_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setModifiedTs(LocalDateTime modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for ReasonCodeId.
     * Reason code ID
     * @return Returns the int
     */
    @JsonGetter("reason_code_id")
    public int getReasonCodeId() {
        return reasonCodeId;
    }

    /**
     * Setter for ReasonCodeId.
     * Reason code ID
     * @param reasonCodeId Value for int
     */
    @JsonSetter("reason_code_id")
    public void setReasonCodeId(int reasonCodeId) {
        this.reasonCodeId = reasonCodeId;
    }

    /**
     * Getter for Signature.
     * A JSON object containing all the info about and including the signature blob (base64).
     * @return Returns the Object
     */
    @JsonGetter("signature")
    public Object getSignature() {
        return signature;
    }

    /**
     * Setter for Signature.
     * A JSON object containing all the info about and including the signature blob (base64).
     * @param signature Value for Object
     */
    @JsonSetter("signature")
    public void setSignature(Object signature) {
        this.signature = signature;
    }

    /**
     * Converts this List2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "List2 [" + "locationId=" + locationId + ", terminalId=" + terminalId
                + ", requireSignature=" + requireSignature + ", termsConditions=" + termsConditions
                + ", createdTs=" + createdTs + ", createdUserId=" + createdUserId + ", id=" + id
                + ", modifiedTs=" + modifiedTs + ", reasonCodeId=" + reasonCodeId + ", signature="
                + signature + ", deviceTermApiId=" + deviceTermApiId + "]";
    }

    /**
     * Builds a new {@link List2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link List2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(locationId, terminalId, requireSignature, termsConditions,
                createdTs, createdUserId, id, modifiedTs, reasonCodeId, signature)
                .deviceTermApiId(getDeviceTermApiId());
        return builder;
    }

    /**
     * Class to build instances of {@link List2}.
     */
    public static class Builder {
        private String locationId;
        private String terminalId;
        private boolean requireSignature;
        private String termsConditions;
        private LocalDateTime createdTs;
        private String createdUserId;
        private String id;
        private LocalDateTime modifiedTs;
        private int reasonCodeId;
        private Object signature;
        private String deviceTermApiId;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  locationId  String value for locationId.
         * @param  terminalId  String value for terminalId.
         * @param  requireSignature  boolean value for requireSignature.
         * @param  termsConditions  String value for termsConditions.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @param  createdUserId  String value for createdUserId.
         * @param  id  String value for id.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @param  reasonCodeId  int value for reasonCodeId.
         * @param  signature  Object value for signature.
         */
        public Builder(String locationId, String terminalId, boolean requireSignature,
                String termsConditions, LocalDateTime createdTs, String createdUserId, String id,
                LocalDateTime modifiedTs, int reasonCodeId, Object signature) {
            this.locationId = locationId;
            this.terminalId = terminalId;
            this.requireSignature = requireSignature;
            this.termsConditions = termsConditions;
            this.createdTs = createdTs;
            this.createdUserId = createdUserId;
            this.id = id;
            this.modifiedTs = modifiedTs;
            this.reasonCodeId = reasonCodeId;
            this.signature = signature;
        }

        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for terminalId.
         * @param  terminalId  String value for terminalId.
         * @return Builder
         */
        public Builder terminalId(String terminalId) {
            this.terminalId = terminalId;
            return this;
        }

        /**
         * Setter for requireSignature.
         * @param  requireSignature  boolean value for requireSignature.
         * @return Builder
         */
        public Builder requireSignature(boolean requireSignature) {
            this.requireSignature = requireSignature;
            return this;
        }

        /**
         * Setter for termsConditions.
         * @param  termsConditions  String value for termsConditions.
         * @return Builder
         */
        public Builder termsConditions(String termsConditions) {
            this.termsConditions = termsConditions;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @return Builder
         */
        public Builder createdTs(LocalDateTime createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for createdUserId.
         * @param  createdUserId  String value for createdUserId.
         * @return Builder
         */
        public Builder createdUserId(String createdUserId) {
            this.createdUserId = createdUserId;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(LocalDateTime modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for reasonCodeId.
         * @param  reasonCodeId  int value for reasonCodeId.
         * @return Builder
         */
        public Builder reasonCodeId(int reasonCodeId) {
            this.reasonCodeId = reasonCodeId;
            return this;
        }

        /**
         * Setter for signature.
         * @param  signature  Object value for signature.
         * @return Builder
         */
        public Builder signature(Object signature) {
            this.signature = signature;
            return this;
        }

        /**
         * Setter for deviceTermApiId.
         * @param  deviceTermApiId  String value for deviceTermApiId.
         * @return Builder
         */
        public Builder deviceTermApiId(String deviceTermApiId) {
            this.deviceTermApiId = deviceTermApiId;
            return this;
        }

        /**
         * Builds a new {@link List2} object using the set fields.
         * @return {@link List2}
         */
        public List2 build() {
            return new List2(locationId, terminalId, requireSignature, termsConditions, createdTs,
                    createdUserId, id, modifiedTs, reasonCodeId, signature, deviceTermApiId);
        }
    }
}
