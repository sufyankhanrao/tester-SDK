/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;
import tech.fortis.sandbox.api.DateTimeHelper;

/**
 * This is a model class for List3 type.
 */
public class List3 {
    private String brandingDomainUrl;
    private LocalDateTime createdTs;
    private String id;
    private LocalDateTime modifiedTs;
    private String aba;
    private String accountNumber;
    private String address1;
    private String address2;
    private String brandingDomainId;
    private String city;
    private Boolean contactEmailTrxReceiptDefault;
    private String dda;
    private String defaultAch;
    private String defaultCc;
    private String developerCompanyId;
    private String emailReplyTo;
    private String fax;
    private String locationApiId;
    private String locationApiKey;
    private String locationC1;
    private String locationC2;
    private String locationC3;
    private String name;
    private String officePhone;
    private String officeExtPhone;
    private String parentId;
    private Integer recurringNotificationDaysDefault;
    private Boolean showContactFiles;
    private Boolean showContactNotes;
    private String state;
    private String ticketHashKey;
    private String tz;
    private String zipCode;
    private Object brandingDomain;
    private List<Object> productTransactions;
    private Object productFile;
    private Object productAccountvault;
    private Object productRecurring;
    private List<Object> tags;
    private List<Object> terminals;

    /**
     * Default constructor.
     */
    public List3() {
    }

    /**
     * Initialization constructor.
     * @param  createdTs  LocalDateTime value for createdTs.
     * @param  id  String value for id.
     * @param  modifiedTs  LocalDateTime value for modifiedTs.
     * @param  name  String value for name.
     * @param  parentId  String value for parentId.
     * @param  brandingDomain  Object value for brandingDomain.
     * @param  productTransactions  List of Object value for productTransactions.
     * @param  productFile  Object value for productFile.
     * @param  productAccountvault  Object value for productAccountvault.
     * @param  productRecurring  Object value for productRecurring.
     * @param  tags  List of Object value for tags.
     * @param  terminals  List of Object value for terminals.
     * @param  brandingDomainUrl  String value for brandingDomainUrl.
     * @param  aba  String value for aba.
     * @param  accountNumber  String value for accountNumber.
     * @param  address1  String value for address1.
     * @param  address2  String value for address2.
     * @param  brandingDomainId  String value for brandingDomainId.
     * @param  city  String value for city.
     * @param  contactEmailTrxReceiptDefault  Boolean value for contactEmailTrxReceiptDefault.
     * @param  dda  String value for dda.
     * @param  defaultAch  String value for defaultAch.
     * @param  defaultCc  String value for defaultCc.
     * @param  developerCompanyId  String value for developerCompanyId.
     * @param  emailReplyTo  String value for emailReplyTo.
     * @param  fax  String value for fax.
     * @param  locationApiId  String value for locationApiId.
     * @param  locationApiKey  String value for locationApiKey.
     * @param  locationC1  String value for locationC1.
     * @param  locationC2  String value for locationC2.
     * @param  locationC3  String value for locationC3.
     * @param  officePhone  String value for officePhone.
     * @param  officeExtPhone  String value for officeExtPhone.
     * @param  recurringNotificationDaysDefault  Integer value for recurringNotificationDaysDefault.
     * @param  showContactFiles  Boolean value for showContactFiles.
     * @param  showContactNotes  Boolean value for showContactNotes.
     * @param  state  String value for state.
     * @param  ticketHashKey  String value for ticketHashKey.
     * @param  tz  String value for tz.
     * @param  zipCode  String value for zipCode.
     */
    public List3(
            LocalDateTime createdTs,
            String id,
            LocalDateTime modifiedTs,
            String name,
            String parentId,
            Object brandingDomain,
            List<Object> productTransactions,
            Object productFile,
            Object productAccountvault,
            Object productRecurring,
            List<Object> tags,
            List<Object> terminals,
            String brandingDomainUrl,
            String aba,
            String accountNumber,
            String address1,
            String address2,
            String brandingDomainId,
            String city,
            Boolean contactEmailTrxReceiptDefault,
            String dda,
            String defaultAch,
            String defaultCc,
            String developerCompanyId,
            String emailReplyTo,
            String fax,
            String locationApiId,
            String locationApiKey,
            String locationC1,
            String locationC2,
            String locationC3,
            String officePhone,
            String officeExtPhone,
            Integer recurringNotificationDaysDefault,
            Boolean showContactFiles,
            Boolean showContactNotes,
            String state,
            String ticketHashKey,
            String tz,
            String zipCode) {
        this.brandingDomainUrl = brandingDomainUrl;
        this.createdTs = createdTs;
        this.id = id;
        this.modifiedTs = modifiedTs;
        this.aba = aba;
        this.accountNumber = accountNumber;
        this.address1 = address1;
        this.address2 = address2;
        this.brandingDomainId = brandingDomainId;
        this.city = city;
        this.contactEmailTrxReceiptDefault = contactEmailTrxReceiptDefault;
        this.dda = dda;
        this.defaultAch = defaultAch;
        this.defaultCc = defaultCc;
        this.developerCompanyId = developerCompanyId;
        this.emailReplyTo = emailReplyTo;
        this.fax = fax;
        this.locationApiId = locationApiId;
        this.locationApiKey = locationApiKey;
        this.locationC1 = locationC1;
        this.locationC2 = locationC2;
        this.locationC3 = locationC3;
        this.name = name;
        this.officePhone = officePhone;
        this.officeExtPhone = officeExtPhone;
        this.parentId = parentId;
        this.recurringNotificationDaysDefault = recurringNotificationDaysDefault;
        this.showContactFiles = showContactFiles;
        this.showContactNotes = showContactNotes;
        this.state = state;
        this.ticketHashKey = ticketHashKey;
        this.tz = tz;
        this.zipCode = zipCode;
        this.brandingDomain = brandingDomain;
        this.productTransactions = productTransactions;
        this.productFile = productFile;
        this.productAccountvault = productAccountvault;
        this.productRecurring = productRecurring;
        this.tags = tags;
        this.terminals = terminals;
    }

    /**
     * Getter for BrandingDomainUrl.
     * Branding domain URL
     * @return Returns the String
     */
    @JsonGetter("branding_domain_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBrandingDomainUrl() {
        return brandingDomainUrl;
    }

    /**
     * Setter for BrandingDomainUrl.
     * Branding domain URL
     * @param brandingDomainUrl Value for String
     */
    @JsonSetter("branding_domain_url")
    public void setBrandingDomainUrl(String brandingDomainUrl) {
        this.brandingDomainUrl = brandingDomainUrl;
    }

    /**
     * Getter for CreatedTs.
     * Created Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * Created Time Stamp
     * @param createdTs Value for LocalDateTime
     */
    @JsonSetter("created_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedTs(LocalDateTime createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for Id.
     * Location ID
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Location ID
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for ModifiedTs.
     * Modified Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("modified_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * Modified Time Stamp
     * @param modifiedTs Value for LocalDateTime
     */
    @JsonSetter("modified_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setModifiedTs(LocalDateTime modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for Aba.
     * Aba / Routing
     * @return Returns the String
     */
    @JsonGetter("aba")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAba() {
        return aba;
    }

    /**
     * Setter for Aba.
     * Aba / Routing
     * @param aba Value for String
     */
    @JsonSetter("aba")
    public void setAba(String aba) {
        this.aba = aba;
    }

    /**
     * Getter for AccountNumber.
     * Account number
     * @return Returns the String
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account number
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for Address1.
     * Address 1
     * @return Returns the String
     */
    @JsonGetter("address1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddress1() {
        return address1;
    }

    /**
     * Setter for Address1.
     * Address 1
     * @param address1 Value for String
     */
    @JsonSetter("address1")
    public void setAddress1(String address1) {
        this.address1 = address1;
    }

    /**
     * Getter for Address2.
     * Address 2
     * @return Returns the String
     */
    @JsonGetter("address2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddress2() {
        return address2;
    }

    /**
     * Setter for Address2.
     * Address 2
     * @param address2 Value for String
     */
    @JsonSetter("address2")
    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    /**
     * Getter for BrandingDomainId.
     * GUID for Branding Domain
     * @return Returns the String
     */
    @JsonGetter("branding_domain_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBrandingDomainId() {
        return brandingDomainId;
    }

    /**
     * Setter for BrandingDomainId.
     * GUID for Branding Domain
     * @param brandingDomainId Value for String
     */
    @JsonSetter("branding_domain_id")
    public void setBrandingDomainId(String brandingDomainId) {
        this.brandingDomainId = brandingDomainId;
    }

    /**
     * Getter for City.
     * City name
     * @return Returns the String
     */
    @JsonGetter("city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCity() {
        return city;
    }

    /**
     * Setter for City.
     * City name
     * @param city Value for String
     */
    @JsonSetter("city")
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for ContactEmailTrxReceiptDefault.
     * If true, will email contact receipt for any transaction
     * @return Returns the Boolean
     */
    @JsonGetter("contact_email_trx_receipt_default")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getContactEmailTrxReceiptDefault() {
        return contactEmailTrxReceiptDefault;
    }

    /**
     * Setter for ContactEmailTrxReceiptDefault.
     * If true, will email contact receipt for any transaction
     * @param contactEmailTrxReceiptDefault Value for Boolean
     */
    @JsonSetter("contact_email_trx_receipt_default")
    public void setContactEmailTrxReceiptDefault(Boolean contactEmailTrxReceiptDefault) {
        this.contactEmailTrxReceiptDefault = contactEmailTrxReceiptDefault;
    }

    /**
     * Getter for Dda.
     * Dda
     * @return Returns the String
     */
    @JsonGetter("dda")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDda() {
        return dda;
    }

    /**
     * Setter for Dda.
     * Dda
     * @param dda Value for String
     */
    @JsonSetter("dda")
    public void setDda(String dda) {
        this.dda = dda;
    }

    /**
     * Getter for DefaultAch.
     * GUID for Location's default ACH Product Transaction
     * @return Returns the String
     */
    @JsonGetter("default_ach")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultAch() {
        return defaultAch;
    }

    /**
     * Setter for DefaultAch.
     * GUID for Location's default ACH Product Transaction
     * @param defaultAch Value for String
     */
    @JsonSetter("default_ach")
    public void setDefaultAch(String defaultAch) {
        this.defaultAch = defaultAch;
    }

    /**
     * Getter for DefaultCc.
     * GUID for Location's default CC Product Transaction
     * @return Returns the String
     */
    @JsonGetter("default_cc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDefaultCc() {
        return defaultCc;
    }

    /**
     * Setter for DefaultCc.
     * GUID for Location's default CC Product Transaction
     * @param defaultCc Value for String
     */
    @JsonSetter("default_cc")
    public void setDefaultCc(String defaultCc) {
        this.defaultCc = defaultCc;
    }

    /**
     * Getter for DeveloperCompanyId.
     * GUID for Developer Company
     * @return Returns the String
     */
    @JsonGetter("developer_company_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeveloperCompanyId() {
        return developerCompanyId;
    }

    /**
     * Setter for DeveloperCompanyId.
     * GUID for Developer Company
     * @param developerCompanyId Value for String
     */
    @JsonSetter("developer_company_id")
    public void setDeveloperCompanyId(String developerCompanyId) {
        this.developerCompanyId = developerCompanyId;
    }

    /**
     * Getter for EmailReplyTo.
     * Used as from email address when sending various notifications
     * @return Returns the String
     */
    @JsonGetter("email_reply_to")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmailReplyTo() {
        return emailReplyTo;
    }

    /**
     * Setter for EmailReplyTo.
     * Used as from email address when sending various notifications
     * @param emailReplyTo Value for String
     */
    @JsonSetter("email_reply_to")
    public void setEmailReplyTo(String emailReplyTo) {
        this.emailReplyTo = emailReplyTo;
    }

    /**
     * Getter for Fax.
     * Fax number
     * @return Returns the String
     */
    @JsonGetter("fax")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFax() {
        return fax;
    }

    /**
     * Setter for Fax.
     * Fax number
     * @param fax Value for String
     */
    @JsonSetter("fax")
    public void setFax(String fax) {
        this.fax = fax;
    }

    /**
     * Getter for LocationApiId.
     * Location api ID
     * @return Returns the String
     */
    @JsonGetter("location_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationApiId() {
        return locationApiId;
    }

    /**
     * Setter for LocationApiId.
     * Location api ID
     * @param locationApiId Value for String
     */
    @JsonSetter("location_api_id")
    public void setLocationApiId(String locationApiId) {
        this.locationApiId = locationApiId;
    }

    /**
     * Getter for LocationApiKey.
     * Location api key
     * @return Returns the String
     */
    @JsonGetter("location_api_key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationApiKey() {
        return locationApiKey;
    }

    /**
     * Setter for LocationApiKey.
     * Location api key
     * @param locationApiKey Value for String
     */
    @JsonSetter("location_api_key")
    public void setLocationApiKey(String locationApiKey) {
        this.locationApiKey = locationApiKey;
    }

    /**
     * Getter for LocationC1.
     * Can be used to store custom information for location.
     * @return Returns the String
     */
    @JsonGetter("location_c1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationC1() {
        return locationC1;
    }

    /**
     * Setter for LocationC1.
     * Can be used to store custom information for location.
     * @param locationC1 Value for String
     */
    @JsonSetter("location_c1")
    public void setLocationC1(String locationC1) {
        this.locationC1 = locationC1;
    }

    /**
     * Getter for LocationC2.
     * Can be used to store custom information for location.
     * @return Returns the String
     */
    @JsonGetter("location_c2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationC2() {
        return locationC2;
    }

    /**
     * Setter for LocationC2.
     * Can be used to store custom information for location.
     * @param locationC2 Value for String
     */
    @JsonSetter("location_c2")
    public void setLocationC2(String locationC2) {
        this.locationC2 = locationC2;
    }

    /**
     * Getter for LocationC3.
     * Can be used to store custom information for location.
     * @return Returns the String
     */
    @JsonGetter("location_c3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationC3() {
        return locationC3;
    }

    /**
     * Setter for LocationC3.
     * Can be used to store custom information for location.
     * @param locationC3 Value for String
     */
    @JsonSetter("location_c3")
    public void setLocationC3(String locationC3) {
        this.locationC3 = locationC3;
    }

    /**
     * Getter for Name.
     * Name of the company
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the company
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for OfficePhone.
     * Office phone number
     * @return Returns the String
     */
    @JsonGetter("office_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficePhone() {
        return officePhone;
    }

    /**
     * Setter for OfficePhone.
     * Office phone number
     * @param officePhone Value for String
     */
    @JsonSetter("office_phone")
    public void setOfficePhone(String officePhone) {
        this.officePhone = officePhone;
    }

    /**
     * Getter for OfficeExtPhone.
     * Office phone extension number
     * @return Returns the String
     */
    @JsonGetter("office_ext_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficeExtPhone() {
        return officeExtPhone;
    }

    /**
     * Setter for OfficeExtPhone.
     * Office phone extension number
     * @param officeExtPhone Value for String
     */
    @JsonSetter("office_ext_phone")
    public void setOfficeExtPhone(String officeExtPhone) {
        this.officeExtPhone = officeExtPhone;
    }

    /**
     * Getter for ParentId.
     * Location GUID of the parent location
     * @return Returns the String
     */
    @JsonGetter("parent_id")
    public String getParentId() {
        return parentId;
    }

    /**
     * Setter for ParentId.
     * Location GUID of the parent location
     * @param parentId Value for String
     */
    @JsonSetter("parent_id")
    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    /**
     * Getter for RecurringNotificationDaysDefault.
     * Number of days prior to a Recurring running that a notification should be sent
     * @return Returns the Integer
     */
    @JsonGetter("recurring_notification_days_default")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getRecurringNotificationDaysDefault() {
        return recurringNotificationDaysDefault;
    }

    /**
     * Setter for RecurringNotificationDaysDefault.
     * Number of days prior to a Recurring running that a notification should be sent
     * @param recurringNotificationDaysDefault Value for Integer
     */
    @JsonSetter("recurring_notification_days_default")
    public void setRecurringNotificationDaysDefault(Integer recurringNotificationDaysDefault) {
        this.recurringNotificationDaysDefault = recurringNotificationDaysDefault;
    }

    /**
     * Getter for ShowContactFiles.
     * If set to true will show 'Files' tab on Contact
     * @return Returns the Boolean
     */
    @JsonGetter("show_contact_files")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getShowContactFiles() {
        return showContactFiles;
    }

    /**
     * Setter for ShowContactFiles.
     * If set to true will show 'Files' tab on Contact
     * @param showContactFiles Value for Boolean
     */
    @JsonSetter("show_contact_files")
    public void setShowContactFiles(Boolean showContactFiles) {
        this.showContactFiles = showContactFiles;
    }

    /**
     * Getter for ShowContactNotes.
     * If set to true will show 'Notes' tab on Contact
     * @return Returns the Boolean
     */
    @JsonGetter("show_contact_notes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getShowContactNotes() {
        return showContactNotes;
    }

    /**
     * Setter for ShowContactNotes.
     * If set to true will show 'Notes' tab on Contact
     * @param showContactNotes Value for Boolean
     */
    @JsonSetter("show_contact_notes")
    public void setShowContactNotes(Boolean showContactNotes) {
        this.showContactNotes = showContactNotes;
    }

    /**
     * Getter for State.
     * State name
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * State name
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for TicketHashKey.
     * Ticket hash key
     * @return Returns the String
     */
    @JsonGetter("ticket_hash_key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTicketHashKey() {
        return ticketHashKey;
    }

    /**
     * Setter for TicketHashKey.
     * Ticket hash key
     * @param ticketHashKey Value for String
     */
    @JsonSetter("ticket_hash_key")
    public void setTicketHashKey(String ticketHashKey) {
        this.ticketHashKey = ticketHashKey;
    }

    /**
     * Getter for Tz.
     * Time zone
     * @return Returns the String
     */
    @JsonGetter("tz")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTz() {
        return tz;
    }

    /**
     * Setter for Tz.
     * Time zone
     * @param tz Value for String
     */
    @JsonSetter("tz")
    public void setTz(String tz) {
        this.tz = tz;
    }

    /**
     * Getter for ZipCode.
     * Zip code of the city
     * @return Returns the String
     */
    @JsonGetter("zip_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZipCode() {
        return zipCode;
    }

    /**
     * Setter for ZipCode.
     * Zip code of the city
     * @param zipCode Value for String
     */
    @JsonSetter("zip_code")
    public void setZipCode(String zipCode) {
        this.zipCode = zipCode;
    }

    /**
     * Getter for BrandingDomain.
     * Branding domain array
     * @return Returns the Object
     */
    @JsonGetter("branding_domain")
    public Object getBrandingDomain() {
        return brandingDomain;
    }

    /**
     * Setter for BrandingDomain.
     * Branding domain array
     * @param brandingDomain Value for Object
     */
    @JsonSetter("branding_domain")
    public void setBrandingDomain(Object brandingDomain) {
        this.brandingDomain = brandingDomain;
    }

    /**
     * Getter for ProductTransactions.
     * Product Transactions array
     * @return Returns the List of Object
     */
    @JsonGetter("product_transactions")
    public List<Object> getProductTransactions() {
        return productTransactions;
    }

    /**
     * Setter for ProductTransactions.
     * Product Transactions array
     * @param productTransactions Value for List of Object
     */
    @JsonSetter("product_transactions")
    public void setProductTransactions(List<Object> productTransactions) {
        this.productTransactions = productTransactions;
    }

    /**
     * Getter for ProductFile.
     * Product file array
     * @return Returns the Object
     */
    @JsonGetter("product_file")
    public Object getProductFile() {
        return productFile;
    }

    /**
     * Setter for ProductFile.
     * Product file array
     * @param productFile Value for Object
     */
    @JsonSetter("product_file")
    public void setProductFile(Object productFile) {
        this.productFile = productFile;
    }

    /**
     * Getter for ProductAccountvault.
     * Product account vault array
     * @return Returns the Object
     */
    @JsonGetter("product_accountvault")
    public Object getProductAccountvault() {
        return productAccountvault;
    }

    /**
     * Setter for ProductAccountvault.
     * Product account vault array
     * @param productAccountvault Value for Object
     */
    @JsonSetter("product_accountvault")
    public void setProductAccountvault(Object productAccountvault) {
        this.productAccountvault = productAccountvault;
    }

    /**
     * Getter for ProductRecurring.
     * Product recurring array
     * @return Returns the Object
     */
    @JsonGetter("product_recurring")
    public Object getProductRecurring() {
        return productRecurring;
    }

    /**
     * Setter for ProductRecurring.
     * Product recurring array
     * @param productRecurring Value for Object
     */
    @JsonSetter("product_recurring")
    public void setProductRecurring(Object productRecurring) {
        this.productRecurring = productRecurring;
    }

    /**
     * Getter for Tags.
     * Tags array
     * @return Returns the List of Object
     */
    @JsonGetter("tags")
    public List<Object> getTags() {
        return tags;
    }

    /**
     * Setter for Tags.
     * Tags array
     * @param tags Value for List of Object
     */
    @JsonSetter("tags")
    public void setTags(List<Object> tags) {
        this.tags = tags;
    }

    /**
     * Getter for Terminals.
     * Terminals array
     * @return Returns the List of Object
     */
    @JsonGetter("terminals")
    public List<Object> getTerminals() {
        return terminals;
    }

    /**
     * Setter for Terminals.
     * Terminals array
     * @param terminals Value for List of Object
     */
    @JsonSetter("terminals")
    public void setTerminals(List<Object> terminals) {
        this.terminals = terminals;
    }

    /**
     * Converts this List3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "List3 [" + "createdTs=" + createdTs + ", id=" + id + ", modifiedTs=" + modifiedTs
                + ", name=" + name + ", parentId=" + parentId + ", brandingDomain=" + brandingDomain
                + ", productTransactions=" + productTransactions + ", productFile=" + productFile
                + ", productAccountvault=" + productAccountvault + ", productRecurring="
                + productRecurring + ", tags=" + tags + ", terminals=" + terminals
                + ", brandingDomainUrl=" + brandingDomainUrl + ", aba=" + aba + ", accountNumber="
                + accountNumber + ", address1=" + address1 + ", address2=" + address2
                + ", brandingDomainId=" + brandingDomainId + ", city=" + city
                + ", contactEmailTrxReceiptDefault=" + contactEmailTrxReceiptDefault + ", dda="
                + dda + ", defaultAch=" + defaultAch + ", defaultCc=" + defaultCc
                + ", developerCompanyId=" + developerCompanyId + ", emailReplyTo=" + emailReplyTo
                + ", fax=" + fax + ", locationApiId=" + locationApiId + ", locationApiKey="
                + locationApiKey + ", locationC1=" + locationC1 + ", locationC2=" + locationC2
                + ", locationC3=" + locationC3 + ", officePhone=" + officePhone
                + ", officeExtPhone=" + officeExtPhone + ", recurringNotificationDaysDefault="
                + recurringNotificationDaysDefault + ", showContactFiles=" + showContactFiles
                + ", showContactNotes=" + showContactNotes + ", state=" + state + ", ticketHashKey="
                + ticketHashKey + ", tz=" + tz + ", zipCode=" + zipCode + "]";
    }

    /**
     * Builds a new {@link List3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link List3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(createdTs, id, modifiedTs, name, parentId, brandingDomain,
                productTransactions, productFile, productAccountvault, productRecurring, tags,
                terminals)
                .brandingDomainUrl(getBrandingDomainUrl())
                .aba(getAba())
                .accountNumber(getAccountNumber())
                .address1(getAddress1())
                .address2(getAddress2())
                .brandingDomainId(getBrandingDomainId())
                .city(getCity())
                .contactEmailTrxReceiptDefault(getContactEmailTrxReceiptDefault())
                .dda(getDda())
                .defaultAch(getDefaultAch())
                .defaultCc(getDefaultCc())
                .developerCompanyId(getDeveloperCompanyId())
                .emailReplyTo(getEmailReplyTo())
                .fax(getFax())
                .locationApiId(getLocationApiId())
                .locationApiKey(getLocationApiKey())
                .locationC1(getLocationC1())
                .locationC2(getLocationC2())
                .locationC3(getLocationC3())
                .officePhone(getOfficePhone())
                .officeExtPhone(getOfficeExtPhone())
                .recurringNotificationDaysDefault(getRecurringNotificationDaysDefault())
                .showContactFiles(getShowContactFiles())
                .showContactNotes(getShowContactNotes())
                .state(getState())
                .ticketHashKey(getTicketHashKey())
                .tz(getTz())
                .zipCode(getZipCode());
        return builder;
    }

    /**
     * Class to build instances of {@link List3}.
     */
    public static class Builder {
        private LocalDateTime createdTs;
        private String id;
        private LocalDateTime modifiedTs;
        private String name;
        private String parentId;
        private Object brandingDomain;
        private List<Object> productTransactions;
        private Object productFile;
        private Object productAccountvault;
        private Object productRecurring;
        private List<Object> tags;
        private List<Object> terminals;
        private String brandingDomainUrl;
        private String aba;
        private String accountNumber;
        private String address1;
        private String address2;
        private String brandingDomainId;
        private String city;
        private Boolean contactEmailTrxReceiptDefault;
        private String dda;
        private String defaultAch;
        private String defaultCc;
        private String developerCompanyId;
        private String emailReplyTo;
        private String fax;
        private String locationApiId;
        private String locationApiKey;
        private String locationC1;
        private String locationC2;
        private String locationC3;
        private String officePhone;
        private String officeExtPhone;
        private Integer recurringNotificationDaysDefault;
        private Boolean showContactFiles;
        private Boolean showContactNotes;
        private String state;
        private String ticketHashKey;
        private String tz;
        private String zipCode;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @param  id  String value for id.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @param  name  String value for name.
         * @param  parentId  String value for parentId.
         * @param  brandingDomain  Object value for brandingDomain.
         * @param  productTransactions  List of Object value for productTransactions.
         * @param  productFile  Object value for productFile.
         * @param  productAccountvault  Object value for productAccountvault.
         * @param  productRecurring  Object value for productRecurring.
         * @param  tags  List of Object value for tags.
         * @param  terminals  List of Object value for terminals.
         */
        public Builder(LocalDateTime createdTs, String id, LocalDateTime modifiedTs, String name,
                String parentId, Object brandingDomain, List<Object> productTransactions,
                Object productFile, Object productAccountvault, Object productRecurring,
                List<Object> tags, List<Object> terminals) {
            this.createdTs = createdTs;
            this.id = id;
            this.modifiedTs = modifiedTs;
            this.name = name;
            this.parentId = parentId;
            this.brandingDomain = brandingDomain;
            this.productTransactions = productTransactions;
            this.productFile = productFile;
            this.productAccountvault = productAccountvault;
            this.productRecurring = productRecurring;
            this.tags = tags;
            this.terminals = terminals;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @return Builder
         */
        public Builder createdTs(LocalDateTime createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(LocalDateTime modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for parentId.
         * @param  parentId  String value for parentId.
         * @return Builder
         */
        public Builder parentId(String parentId) {
            this.parentId = parentId;
            return this;
        }

        /**
         * Setter for brandingDomain.
         * @param  brandingDomain  Object value for brandingDomain.
         * @return Builder
         */
        public Builder brandingDomain(Object brandingDomain) {
            this.brandingDomain = brandingDomain;
            return this;
        }

        /**
         * Setter for productTransactions.
         * @param  productTransactions  List of Object value for productTransactions.
         * @return Builder
         */
        public Builder productTransactions(List<Object> productTransactions) {
            this.productTransactions = productTransactions;
            return this;
        }

        /**
         * Setter for productFile.
         * @param  productFile  Object value for productFile.
         * @return Builder
         */
        public Builder productFile(Object productFile) {
            this.productFile = productFile;
            return this;
        }

        /**
         * Setter for productAccountvault.
         * @param  productAccountvault  Object value for productAccountvault.
         * @return Builder
         */
        public Builder productAccountvault(Object productAccountvault) {
            this.productAccountvault = productAccountvault;
            return this;
        }

        /**
         * Setter for productRecurring.
         * @param  productRecurring  Object value for productRecurring.
         * @return Builder
         */
        public Builder productRecurring(Object productRecurring) {
            this.productRecurring = productRecurring;
            return this;
        }

        /**
         * Setter for tags.
         * @param  tags  List of Object value for tags.
         * @return Builder
         */
        public Builder tags(List<Object> tags) {
            this.tags = tags;
            return this;
        }

        /**
         * Setter for terminals.
         * @param  terminals  List of Object value for terminals.
         * @return Builder
         */
        public Builder terminals(List<Object> terminals) {
            this.terminals = terminals;
            return this;
        }

        /**
         * Setter for brandingDomainUrl.
         * @param  brandingDomainUrl  String value for brandingDomainUrl.
         * @return Builder
         */
        public Builder brandingDomainUrl(String brandingDomainUrl) {
            this.brandingDomainUrl = brandingDomainUrl;
            return this;
        }

        /**
         * Setter for aba.
         * @param  aba  String value for aba.
         * @return Builder
         */
        public Builder aba(String aba) {
            this.aba = aba;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for address1.
         * @param  address1  String value for address1.
         * @return Builder
         */
        public Builder address1(String address1) {
            this.address1 = address1;
            return this;
        }

        /**
         * Setter for address2.
         * @param  address2  String value for address2.
         * @return Builder
         */
        public Builder address2(String address2) {
            this.address2 = address2;
            return this;
        }

        /**
         * Setter for brandingDomainId.
         * @param  brandingDomainId  String value for brandingDomainId.
         * @return Builder
         */
        public Builder brandingDomainId(String brandingDomainId) {
            this.brandingDomainId = brandingDomainId;
            return this;
        }

        /**
         * Setter for city.
         * @param  city  String value for city.
         * @return Builder
         */
        public Builder city(String city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for contactEmailTrxReceiptDefault.
         * @param  contactEmailTrxReceiptDefault  Boolean value for contactEmailTrxReceiptDefault.
         * @return Builder
         */
        public Builder contactEmailTrxReceiptDefault(Boolean contactEmailTrxReceiptDefault) {
            this.contactEmailTrxReceiptDefault = contactEmailTrxReceiptDefault;
            return this;
        }

        /**
         * Setter for dda.
         * @param  dda  String value for dda.
         * @return Builder
         */
        public Builder dda(String dda) {
            this.dda = dda;
            return this;
        }

        /**
         * Setter for defaultAch.
         * @param  defaultAch  String value for defaultAch.
         * @return Builder
         */
        public Builder defaultAch(String defaultAch) {
            this.defaultAch = defaultAch;
            return this;
        }

        /**
         * Setter for defaultCc.
         * @param  defaultCc  String value for defaultCc.
         * @return Builder
         */
        public Builder defaultCc(String defaultCc) {
            this.defaultCc = defaultCc;
            return this;
        }

        /**
         * Setter for developerCompanyId.
         * @param  developerCompanyId  String value for developerCompanyId.
         * @return Builder
         */
        public Builder developerCompanyId(String developerCompanyId) {
            this.developerCompanyId = developerCompanyId;
            return this;
        }

        /**
         * Setter for emailReplyTo.
         * @param  emailReplyTo  String value for emailReplyTo.
         * @return Builder
         */
        public Builder emailReplyTo(String emailReplyTo) {
            this.emailReplyTo = emailReplyTo;
            return this;
        }

        /**
         * Setter for fax.
         * @param  fax  String value for fax.
         * @return Builder
         */
        public Builder fax(String fax) {
            this.fax = fax;
            return this;
        }

        /**
         * Setter for locationApiId.
         * @param  locationApiId  String value for locationApiId.
         * @return Builder
         */
        public Builder locationApiId(String locationApiId) {
            this.locationApiId = locationApiId;
            return this;
        }

        /**
         * Setter for locationApiKey.
         * @param  locationApiKey  String value for locationApiKey.
         * @return Builder
         */
        public Builder locationApiKey(String locationApiKey) {
            this.locationApiKey = locationApiKey;
            return this;
        }

        /**
         * Setter for locationC1.
         * @param  locationC1  String value for locationC1.
         * @return Builder
         */
        public Builder locationC1(String locationC1) {
            this.locationC1 = locationC1;
            return this;
        }

        /**
         * Setter for locationC2.
         * @param  locationC2  String value for locationC2.
         * @return Builder
         */
        public Builder locationC2(String locationC2) {
            this.locationC2 = locationC2;
            return this;
        }

        /**
         * Setter for locationC3.
         * @param  locationC3  String value for locationC3.
         * @return Builder
         */
        public Builder locationC3(String locationC3) {
            this.locationC3 = locationC3;
            return this;
        }

        /**
         * Setter for officePhone.
         * @param  officePhone  String value for officePhone.
         * @return Builder
         */
        public Builder officePhone(String officePhone) {
            this.officePhone = officePhone;
            return this;
        }

        /**
         * Setter for officeExtPhone.
         * @param  officeExtPhone  String value for officeExtPhone.
         * @return Builder
         */
        public Builder officeExtPhone(String officeExtPhone) {
            this.officeExtPhone = officeExtPhone;
            return this;
        }

        /**
         * Setter for recurringNotificationDaysDefault.
         * @param  recurringNotificationDaysDefault  Integer value for
         *         recurringNotificationDaysDefault.
         * @return Builder
         */
        public Builder recurringNotificationDaysDefault(
                Integer recurringNotificationDaysDefault) {
            this.recurringNotificationDaysDefault = recurringNotificationDaysDefault;
            return this;
        }

        /**
         * Setter for showContactFiles.
         * @param  showContactFiles  Boolean value for showContactFiles.
         * @return Builder
         */
        public Builder showContactFiles(Boolean showContactFiles) {
            this.showContactFiles = showContactFiles;
            return this;
        }

        /**
         * Setter for showContactNotes.
         * @param  showContactNotes  Boolean value for showContactNotes.
         * @return Builder
         */
        public Builder showContactNotes(Boolean showContactNotes) {
            this.showContactNotes = showContactNotes;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for ticketHashKey.
         * @param  ticketHashKey  String value for ticketHashKey.
         * @return Builder
         */
        public Builder ticketHashKey(String ticketHashKey) {
            this.ticketHashKey = ticketHashKey;
            return this;
        }

        /**
         * Setter for tz.
         * @param  tz  String value for tz.
         * @return Builder
         */
        public Builder tz(String tz) {
            this.tz = tz;
            return this;
        }

        /**
         * Setter for zipCode.
         * @param  zipCode  String value for zipCode.
         * @return Builder
         */
        public Builder zipCode(String zipCode) {
            this.zipCode = zipCode;
            return this;
        }

        /**
         * Builds a new {@link List3} object using the set fields.
         * @return {@link List3}
         */
        public List3 build() {
            return new List3(createdTs, id, modifiedTs, name, parentId, brandingDomain,
                    productTransactions, productFile, productAccountvault, productRecurring, tags,
                    terminals, brandingDomainUrl, aba, accountNumber, address1, address2,
                    brandingDomainId, city, contactEmailTrxReceiptDefault, dda, defaultAch,
                    defaultCc, developerCompanyId, emailReplyTo, fax, locationApiId, locationApiKey,
                    locationC1, locationC2, locationC3, officePhone, officeExtPhone,
                    recurringNotificationDaysDefault, showContactFiles, showContactNotes, state,
                    ticketHashKey, tz, zipCode);
        }
    }
}
