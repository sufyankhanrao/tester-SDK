/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import tech.fortis.sandbox.api.DateTimeHelper;

/**
 * This is a model class for List9 type.
 */
public class List9 {
    private String accountHolderName;
    private String accountNumber;
    private String accountVaultApiId;
    private String accountvaultC1;
    private String accountvaultC2;
    private String accountvaultC3;
    private String achSecCode;
    private String billingAddress;
    private String billingCity;
    private String billingPhone;
    private String billingState;
    private String billingZip;
    private String contactId;
    private String customerId;
    private DriversLicense driversLicense;
    private String locationId;
    private String previousAccountVaultApiId;
    private String previousAccountVaultId;
    private String previousTransactionId;
    private String ssn4;
    private Boolean termsAgree;
    private String termsAgreeIp;
    private String title;
    private String accountType;
    private Active2Enum active;
    private double cauSummaryStatusId;
    private LocalDateTime createdTs;
    private String id;
    private String eSerialNumber;
    private String eTrackData;
    private String eFormat;
    private String eKeyedData;
    private Integer expiringInMonths;
    private double firstSix;
    private boolean hasRecurring;
    private double lastFour;
    private LocalDateTime modifiedTs;
    private PaymentMethod2Enum paymentMethod;
    private String ticket;
    private String trackData;

    /**
     * Default constructor.
     */
    public List9() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  String value for locationId.
     * @param  accountType  String value for accountType.
     * @param  active  Active2Enum value for active.
     * @param  cauSummaryStatusId  double value for cauSummaryStatusId.
     * @param  createdTs  LocalDateTime value for createdTs.
     * @param  id  String value for id.
     * @param  firstSix  double value for firstSix.
     * @param  hasRecurring  boolean value for hasRecurring.
     * @param  lastFour  double value for lastFour.
     * @param  modifiedTs  LocalDateTime value for modifiedTs.
     * @param  paymentMethod  PaymentMethod2Enum value for paymentMethod.
     * @param  accountHolderName  String value for accountHolderName.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountVaultApiId  String value for accountVaultApiId.
     * @param  accountvaultC1  String value for accountvaultC1.
     * @param  accountvaultC2  String value for accountvaultC2.
     * @param  accountvaultC3  String value for accountvaultC3.
     * @param  achSecCode  String value for achSecCode.
     * @param  billingAddress  String value for billingAddress.
     * @param  billingCity  String value for billingCity.
     * @param  billingPhone  String value for billingPhone.
     * @param  billingState  String value for billingState.
     * @param  billingZip  String value for billingZip.
     * @param  contactId  String value for contactId.
     * @param  customerId  String value for customerId.
     * @param  driversLicense  DriversLicense value for driversLicense.
     * @param  previousAccountVaultApiId  String value for previousAccountVaultApiId.
     * @param  previousAccountVaultId  String value for previousAccountVaultId.
     * @param  previousTransactionId  String value for previousTransactionId.
     * @param  ssn4  String value for ssn4.
     * @param  termsAgree  Boolean value for termsAgree.
     * @param  termsAgreeIp  String value for termsAgreeIp.
     * @param  title  String value for title.
     * @param  eSerialNumber  String value for eSerialNumber.
     * @param  eTrackData  String value for eTrackData.
     * @param  eFormat  String value for eFormat.
     * @param  eKeyedData  String value for eKeyedData.
     * @param  expiringInMonths  Integer value for expiringInMonths.
     * @param  ticket  String value for ticket.
     * @param  trackData  String value for trackData.
     */
    public List9(
            String locationId,
            String accountType,
            Active2Enum active,
            double cauSummaryStatusId,
            LocalDateTime createdTs,
            String id,
            double firstSix,
            boolean hasRecurring,
            double lastFour,
            LocalDateTime modifiedTs,
            PaymentMethod2Enum paymentMethod,
            String accountHolderName,
            String accountNumber,
            String accountVaultApiId,
            String accountvaultC1,
            String accountvaultC2,
            String accountvaultC3,
            String achSecCode,
            String billingAddress,
            String billingCity,
            String billingPhone,
            String billingState,
            String billingZip,
            String contactId,
            String customerId,
            DriversLicense driversLicense,
            String previousAccountVaultApiId,
            String previousAccountVaultId,
            String previousTransactionId,
            String ssn4,
            Boolean termsAgree,
            String termsAgreeIp,
            String title,
            String eSerialNumber,
            String eTrackData,
            String eFormat,
            String eKeyedData,
            Integer expiringInMonths,
            String ticket,
            String trackData) {
        this.accountHolderName = accountHolderName;
        this.accountNumber = accountNumber;
        this.accountVaultApiId = accountVaultApiId;
        this.accountvaultC1 = accountvaultC1;
        this.accountvaultC2 = accountvaultC2;
        this.accountvaultC3 = accountvaultC3;
        this.achSecCode = achSecCode;
        this.billingAddress = billingAddress;
        this.billingCity = billingCity;
        this.billingPhone = billingPhone;
        this.billingState = billingState;
        this.billingZip = billingZip;
        this.contactId = contactId;
        this.customerId = customerId;
        this.driversLicense = driversLicense;
        this.locationId = locationId;
        this.previousAccountVaultApiId = previousAccountVaultApiId;
        this.previousAccountVaultId = previousAccountVaultId;
        this.previousTransactionId = previousTransactionId;
        this.ssn4 = ssn4;
        this.termsAgree = termsAgree;
        this.termsAgreeIp = termsAgreeIp;
        this.title = title;
        this.accountType = accountType;
        this.active = active;
        this.cauSummaryStatusId = cauSummaryStatusId;
        this.createdTs = createdTs;
        this.id = id;
        this.eSerialNumber = eSerialNumber;
        this.eTrackData = eTrackData;
        this.eFormat = eFormat;
        this.eKeyedData = eKeyedData;
        this.expiringInMonths = expiringInMonths;
        this.firstSix = firstSix;
        this.hasRecurring = hasRecurring;
        this.lastFour = lastFour;
        this.modifiedTs = modifiedTs;
        this.paymentMethod = paymentMethod;
        this.ticket = ticket;
        this.trackData = trackData;
    }

    /**
     * Getter for AccountHolderName.
     * Account holder name
     * @return Returns the String
     */
    @JsonGetter("account_holder_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountHolderName() {
        return accountHolderName;
    }

    /**
     * Setter for AccountHolderName.
     * Account holder name
     * @param accountHolderName Value for String
     */
    @JsonSetter("account_holder_name")
    public void setAccountHolderName(String accountHolderName) {
        this.accountHolderName = accountHolderName;
    }

    /**
     * Getter for AccountNumber.
     * Account number
     * @return Returns the String
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account number
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for AccountVaultApiId.
     * This field can be used to correlate Account Vaults in our system to data within an outside
     * software integration
     * @return Returns the String
     */
    @JsonGetter("account_vault_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountVaultApiId() {
        return accountVaultApiId;
    }

    /**
     * Setter for AccountVaultApiId.
     * This field can be used to correlate Account Vaults in our system to data within an outside
     * software integration
     * @param accountVaultApiId Value for String
     */
    @JsonSetter("account_vault_api_id")
    public void setAccountVaultApiId(String accountVaultApiId) {
        this.accountVaultApiId = accountVaultApiId;
    }

    /**
     * Getter for AccountvaultC1.
     * Custom field 1 for API users to store custom data
     * @return Returns the String
     */
    @JsonGetter("accountvault_c1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountvaultC1() {
        return accountvaultC1;
    }

    /**
     * Setter for AccountvaultC1.
     * Custom field 1 for API users to store custom data
     * @param accountvaultC1 Value for String
     */
    @JsonSetter("accountvault_c1")
    public void setAccountvaultC1(String accountvaultC1) {
        this.accountvaultC1 = accountvaultC1;
    }

    /**
     * Getter for AccountvaultC2.
     * Custom field 2 for API users to store custom data
     * @return Returns the String
     */
    @JsonGetter("accountvault_c2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountvaultC2() {
        return accountvaultC2;
    }

    /**
     * Setter for AccountvaultC2.
     * Custom field 2 for API users to store custom data
     * @param accountvaultC2 Value for String
     */
    @JsonSetter("accountvault_c2")
    public void setAccountvaultC2(String accountvaultC2) {
        this.accountvaultC2 = accountvaultC2;
    }

    /**
     * Getter for AccountvaultC3.
     * Custom field 3 for API users to store custom data
     * @return Returns the String
     */
    @JsonGetter("accountvault_c3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountvaultC3() {
        return accountvaultC3;
    }

    /**
     * Setter for AccountvaultC3.
     * Custom field 3 for API users to store custom data
     * @param accountvaultC3 Value for String
     */
    @JsonSetter("accountvault_c3")
    public void setAccountvaultC3(String accountvaultC3) {
        this.accountvaultC3 = accountvaultC3;
    }

    /**
     * Getter for AchSecCode.
     * SEC code for the account
     * @return Returns the String
     */
    @JsonGetter("ach_sec_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAchSecCode() {
        return achSecCode;
    }

    /**
     * Setter for AchSecCode.
     * SEC code for the account
     * @param achSecCode Value for String
     */
    @JsonSetter("ach_sec_code")
    public void setAchSecCode(String achSecCode) {
        this.achSecCode = achSecCode;
    }

    /**
     * Getter for BillingAddress.
     * The Street portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingAddress() {
        return billingAddress;
    }

    /**
     * Setter for BillingAddress.
     * The Street portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @param billingAddress Value for String
     */
    @JsonSetter("billing_address")
    public void setBillingAddress(String billingAddress) {
        this.billingAddress = billingAddress;
    }

    /**
     * Getter for BillingCity.
     * The City portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingCity() {
        return billingCity;
    }

    /**
     * Setter for BillingCity.
     * The City portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @param billingCity Value for String
     */
    @JsonSetter("billing_city")
    public void setBillingCity(String billingCity) {
        this.billingCity = billingCity;
    }

    /**
     * Getter for BillingPhone.
     * The Phone # to be used to contact Payer if there are any issues processing a transaction.
     * @return Returns the String
     */
    @JsonGetter("billing_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingPhone() {
        return billingPhone;
    }

    /**
     * Setter for BillingPhone.
     * The Phone # to be used to contact Payer if there are any issues processing a transaction.
     * @param billingPhone Value for String
     */
    @JsonSetter("billing_phone")
    public void setBillingPhone(String billingPhone) {
        this.billingPhone = billingPhone;
    }

    /**
     * Getter for BillingState.
     * The State portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingState() {
        return billingState;
    }

    /**
     * Setter for BillingState.
     * The State portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @param billingState Value for String
     */
    @JsonSetter("billing_state")
    public void setBillingState(String billingState) {
        this.billingState = billingState;
    }

    /**
     * Getter for BillingZip.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card (CC) or Bank
     * Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_zip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingZip() {
        return billingZip;
    }

    /**
     * Setter for BillingZip.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card (CC) or Bank
     * Account (ACH).
     * @param billingZip Value for String
     */
    @JsonSetter("billing_zip")
    public void setBillingZip(String billingZip) {
        this.billingZip = billingZip;
    }

    /**
     * Getter for ContactId.
     * Used to associate the Account Vault with a Contact.
     * @return Returns the String
     */
    @JsonGetter("contact_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactId() {
        return contactId;
    }

    /**
     * Setter for ContactId.
     * Used to associate the Account Vault with a Contact.
     * @param contactId Value for String
     */
    @JsonSetter("contact_id")
    public void setContactId(String contactId) {
        this.contactId = contactId;
    }

    /**
     * Getter for CustomerId.
     * Used to store a customer identification number.
     * @return Returns the String
     */
    @JsonGetter("customer_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCustomerId() {
        return customerId;
    }

    /**
     * Setter for CustomerId.
     * Used to store a customer identification number.
     * @param customerId Value for String
     */
    @JsonSetter("customer_id")
    public void setCustomerId(String customerId) {
        this.customerId = customerId;
    }

    /**
     * Getter for DriversLicense.
     * Used for certain ACH transactions where Driver's License is required by the terminal being
     * used.
     * @return Returns the DriversLicense
     */
    @JsonGetter("drivers_license")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DriversLicense getDriversLicense() {
        return driversLicense;
    }

    /**
     * Setter for DriversLicense.
     * Used for certain ACH transactions where Driver's License is required by the terminal being
     * used.
     * @param driversLicense Value for DriversLicense
     */
    @JsonSetter("drivers_license")
    public void setDriversLicense(DriversLicense driversLicense) {
        this.driversLicense = driversLicense;
    }

    /**
     * Getter for LocationId.
     * A valid Location Id associated with the Contact for this Token
     * @return Returns the String
     */
    @JsonGetter("location_id")
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * A valid Location Id associated with the Contact for this Token
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for PreviousAccountVaultApiId.
     * Can be used to pull payment info from a previous account vault api id.
     * @return Returns the String
     */
    @JsonGetter("previous_account_vault_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousAccountVaultApiId() {
        return previousAccountVaultApiId;
    }

    /**
     * Setter for PreviousAccountVaultApiId.
     * Can be used to pull payment info from a previous account vault api id.
     * @param previousAccountVaultApiId Value for String
     */
    @JsonSetter("previous_account_vault_api_id")
    public void setPreviousAccountVaultApiId(String previousAccountVaultApiId) {
        this.previousAccountVaultApiId = previousAccountVaultApiId;
    }

    /**
     * Getter for PreviousAccountVaultId.
     * Can be used to pull payment info from a previous account vault.
     * @return Returns the String
     */
    @JsonGetter("previous_account_vault_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousAccountVaultId() {
        return previousAccountVaultId;
    }

    /**
     * Setter for PreviousAccountVaultId.
     * Can be used to pull payment info from a previous account vault.
     * @param previousAccountVaultId Value for String
     */
    @JsonSetter("previous_account_vault_id")
    public void setPreviousAccountVaultId(String previousAccountVaultId) {
        this.previousAccountVaultId = previousAccountVaultId;
    }

    /**
     * Getter for PreviousTransactionId.
     * Can be used to pull payment info from a previous transaction.
     * @return Returns the String
     */
    @JsonGetter("previous_transaction_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousTransactionId() {
        return previousTransactionId;
    }

    /**
     * Setter for PreviousTransactionId.
     * Can be used to pull payment info from a previous transaction.
     * @param previousTransactionId Value for String
     */
    @JsonSetter("previous_transaction_id")
    public void setPreviousTransactionId(String previousTransactionId) {
        this.previousTransactionId = previousTransactionId;
    }

    /**
     * Getter for Ssn4.
     * The last four of the account_holder social security number.
     * @return Returns the String
     */
    @JsonGetter("ssn4")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSsn4() {
        return ssn4;
    }

    /**
     * Setter for Ssn4.
     * The last four of the account_holder social security number.
     * @param ssn4 Value for String
     */
    @JsonSetter("ssn4")
    public void setSsn4(String ssn4) {
        this.ssn4 = ssn4;
    }

    /**
     * Getter for TermsAgree.
     * Terms agreement.
     * @return Returns the Boolean
     */
    @JsonGetter("terms_agree")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTermsAgree() {
        return termsAgree;
    }

    /**
     * Setter for TermsAgree.
     * Terms agreement.
     * @param termsAgree Value for Boolean
     */
    @JsonSetter("terms_agree")
    public void setTermsAgree(Boolean termsAgree) {
        this.termsAgree = termsAgree;
    }

    /**
     * Getter for TermsAgreeIp.
     * The ip address of the client that agreed to terms.
     * @return Returns the String
     */
    @JsonGetter("terms_agree_ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTermsAgreeIp() {
        return termsAgreeIp;
    }

    /**
     * Setter for TermsAgreeIp.
     * The ip address of the client that agreed to terms.
     * @param termsAgreeIp Value for String
     */
    @JsonSetter("terms_agree_ip")
    public void setTermsAgreeIp(String termsAgreeIp) {
        this.termsAgreeIp = termsAgreeIp;
    }

    /**
     * Getter for Title.
     * Used to describe the Token for easier identification within our UI.
     * @return Returns the String
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * Used to describe the Token for easier identification within our UI.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for AccountType.
     * Account type
     * @return Returns the String
     */
    @JsonGetter("account_type")
    public String getAccountType() {
        return accountType;
    }

    /**
     * Setter for AccountType.
     * Account type
     * @param accountType Value for String
     */
    @JsonSetter("account_type")
    public void setAccountType(String accountType) {
        this.accountType = accountType;
    }

    /**
     * Getter for Active.
     * Register is Active
     * @return Returns the Active2Enum
     */
    @JsonGetter("active")
    public Active2Enum getActive() {
        return active;
    }

    /**
     * Setter for Active.
     * Register is Active
     * @param active Value for Active2Enum
     */
    @JsonSetter("active")
    public void setActive(Active2Enum active) {
        this.active = active;
    }

    /**
     * Getter for CauSummaryStatusId.
     * CAU Summary Status ID.
     * @return Returns the double
     */
    @JsonGetter("cau_summary_status_id")
    public double getCauSummaryStatusId() {
        return cauSummaryStatusId;
    }

    /**
     * Setter for CauSummaryStatusId.
     * CAU Summary Status ID.
     * @param cauSummaryStatusId Value for double
     */
    @JsonSetter("cau_summary_status_id")
    public void setCauSummaryStatusId(double cauSummaryStatusId) {
        this.cauSummaryStatusId = cauSummaryStatusId;
    }

    /**
     * Getter for CreatedTs.
     * Created Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * Created Time Stamp
     * @param createdTs Value for LocalDateTime
     */
    @JsonSetter("created_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedTs(LocalDateTime createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for Id.
     * A unique, system-generated identifier for the Token.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * A unique, system-generated identifier for the Token.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for ESerialNumber.
     * E Serial Number
     * @return Returns the String
     */
    @JsonGetter("e_serial_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getESerialNumber() {
        return eSerialNumber;
    }

    /**
     * Setter for ESerialNumber.
     * E Serial Number
     * @param eSerialNumber Value for String
     */
    @JsonSetter("e_serial_number")
    public void setESerialNumber(String eSerialNumber) {
        this.eSerialNumber = eSerialNumber;
    }

    /**
     * Getter for ETrackData.
     * E Track Data
     * @return Returns the String
     */
    @JsonGetter("e_track_data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getETrackData() {
        return eTrackData;
    }

    /**
     * Setter for ETrackData.
     * E Track Data
     * @param eTrackData Value for String
     */
    @JsonSetter("e_track_data")
    public void setETrackData(String eTrackData) {
        this.eTrackData = eTrackData;
    }

    /**
     * Getter for EFormat.
     * E Format
     * @return Returns the String
     */
    @JsonGetter("e_format")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEFormat() {
        return eFormat;
    }

    /**
     * Setter for EFormat.
     * E Format
     * @param eFormat Value for String
     */
    @JsonSetter("e_format")
    public void setEFormat(String eFormat) {
        this.eFormat = eFormat;
    }

    /**
     * Getter for EKeyedData.
     * E Keyed Data
     * @return Returns the String
     */
    @JsonGetter("e_keyed_data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEKeyedData() {
        return eKeyedData;
    }

    /**
     * Setter for EKeyedData.
     * E Keyed Data
     * @param eKeyedData Value for String
     */
    @JsonSetter("e_keyed_data")
    public void setEKeyedData(String eKeyedData) {
        this.eKeyedData = eKeyedData;
    }

    /**
     * Getter for ExpiringInMonths.
     * Determined by API based on card exp_date.
     * @return Returns the Integer
     */
    @JsonGetter("expiring_in_months")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getExpiringInMonths() {
        return expiringInMonths;
    }

    /**
     * Setter for ExpiringInMonths.
     * Determined by API based on card exp_date.
     * @param expiringInMonths Value for Integer
     */
    @JsonSetter("expiring_in_months")
    public void setExpiringInMonths(Integer expiringInMonths) {
        this.expiringInMonths = expiringInMonths;
    }

    /**
     * Getter for FirstSix.
     * The first six numbers of an account number. System will generate a value for this field
     * automatically.
     * @return Returns the double
     */
    @JsonGetter("first_six")
    public double getFirstSix() {
        return firstSix;
    }

    /**
     * Setter for FirstSix.
     * The first six numbers of an account number. System will generate a value for this field
     * automatically.
     * @param firstSix Value for double
     */
    @JsonSetter("first_six")
    public void setFirstSix(double firstSix) {
        this.firstSix = firstSix;
    }

    /**
     * Getter for HasRecurring.
     * True indicates that this account vault is tied to a Recurring Payment
     * @return Returns the boolean
     */
    @JsonGetter("has_recurring")
    public boolean getHasRecurring() {
        return hasRecurring;
    }

    /**
     * Setter for HasRecurring.
     * True indicates that this account vault is tied to a Recurring Payment
     * @param hasRecurring Value for boolean
     */
    @JsonSetter("has_recurring")
    public void setHasRecurring(boolean hasRecurring) {
        this.hasRecurring = hasRecurring;
    }

    /**
     * Getter for LastFour.
     * The last four numbers of an account number. System will generate a value for this field
     * automatically.
     * @return Returns the double
     */
    @JsonGetter("last_four")
    public double getLastFour() {
        return lastFour;
    }

    /**
     * Setter for LastFour.
     * The last four numbers of an account number. System will generate a value for this field
     * automatically.
     * @param lastFour Value for double
     */
    @JsonSetter("last_four")
    public void setLastFour(double lastFour) {
        this.lastFour = lastFour;
    }

    /**
     * Getter for ModifiedTs.
     * Modified Time Stamp
     * @return Returns the LocalDateTime
     */
    @JsonGetter("modified_ts")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * Modified Time Stamp
     * @param modifiedTs Value for LocalDateTime
     */
    @JsonSetter("modified_ts")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setModifiedTs(LocalDateTime modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for PaymentMethod.
     * Must be provided as either 'cc' or 'ach'.
     * @return Returns the PaymentMethod2Enum
     */
    @JsonGetter("payment_method")
    public PaymentMethod2Enum getPaymentMethod() {
        return paymentMethod;
    }

    /**
     * Setter for PaymentMethod.
     * Must be provided as either 'cc' or 'ach'.
     * @param paymentMethod Value for PaymentMethod2Enum
     */
    @JsonSetter("payment_method")
    public void setPaymentMethod(PaymentMethod2Enum paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    /**
     * Getter for Ticket.
     * A valid ticket that was created to store the token.
     * @return Returns the String
     */
    @JsonGetter("ticket")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTicket() {
        return ticket;
    }

    /**
     * Setter for Ticket.
     * A valid ticket that was created to store the token.
     * @param ticket Value for String
     */
    @JsonSetter("ticket")
    public void setTicket(String ticket) {
        this.ticket = ticket;
    }

    /**
     * Getter for TrackData.
     * Track Data from a magnetic card swipe.
     * @return Returns the String
     */
    @JsonGetter("track_data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTrackData() {
        return trackData;
    }

    /**
     * Setter for TrackData.
     * Track Data from a magnetic card swipe.
     * @param trackData Value for String
     */
    @JsonSetter("track_data")
    public void setTrackData(String trackData) {
        this.trackData = trackData;
    }

    /**
     * Converts this List9 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "List9 [" + "locationId=" + locationId + ", accountType=" + accountType + ", active="
                + active + ", cauSummaryStatusId=" + cauSummaryStatusId + ", createdTs=" + createdTs
                + ", id=" + id + ", firstSix=" + firstSix + ", hasRecurring=" + hasRecurring
                + ", lastFour=" + lastFour + ", modifiedTs=" + modifiedTs + ", paymentMethod="
                + paymentMethod + ", accountHolderName=" + accountHolderName + ", accountNumber="
                + accountNumber + ", accountVaultApiId=" + accountVaultApiId + ", accountvaultC1="
                + accountvaultC1 + ", accountvaultC2=" + accountvaultC2 + ", accountvaultC3="
                + accountvaultC3 + ", achSecCode=" + achSecCode + ", billingAddress="
                + billingAddress + ", billingCity=" + billingCity + ", billingPhone=" + billingPhone
                + ", billingState=" + billingState + ", billingZip=" + billingZip + ", contactId="
                + contactId + ", customerId=" + customerId + ", driversLicense=" + driversLicense
                + ", previousAccountVaultApiId=" + previousAccountVaultApiId
                + ", previousAccountVaultId=" + previousAccountVaultId + ", previousTransactionId="
                + previousTransactionId + ", ssn4=" + ssn4 + ", termsAgree=" + termsAgree
                + ", termsAgreeIp=" + termsAgreeIp + ", title=" + title + ", eSerialNumber="
                + eSerialNumber + ", eTrackData=" + eTrackData + ", eFormat=" + eFormat
                + ", eKeyedData=" + eKeyedData + ", expiringInMonths=" + expiringInMonths
                + ", ticket=" + ticket + ", trackData=" + trackData + "]";
    }

    /**
     * Builds a new {@link List9.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link List9.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(locationId, accountType, active, cauSummaryStatusId,
                createdTs, id, firstSix, hasRecurring, lastFour, modifiedTs, paymentMethod)
                .accountHolderName(getAccountHolderName())
                .accountNumber(getAccountNumber())
                .accountVaultApiId(getAccountVaultApiId())
                .accountvaultC1(getAccountvaultC1())
                .accountvaultC2(getAccountvaultC2())
                .accountvaultC3(getAccountvaultC3())
                .achSecCode(getAchSecCode())
                .billingAddress(getBillingAddress())
                .billingCity(getBillingCity())
                .billingPhone(getBillingPhone())
                .billingState(getBillingState())
                .billingZip(getBillingZip())
                .contactId(getContactId())
                .customerId(getCustomerId())
                .driversLicense(getDriversLicense())
                .previousAccountVaultApiId(getPreviousAccountVaultApiId())
                .previousAccountVaultId(getPreviousAccountVaultId())
                .previousTransactionId(getPreviousTransactionId())
                .ssn4(getSsn4())
                .termsAgree(getTermsAgree())
                .termsAgreeIp(getTermsAgreeIp())
                .title(getTitle())
                .eSerialNumber(getESerialNumber())
                .eTrackData(getETrackData())
                .eFormat(getEFormat())
                .eKeyedData(getEKeyedData())
                .expiringInMonths(getExpiringInMonths())
                .ticket(getTicket())
                .trackData(getTrackData());
        return builder;
    }

    /**
     * Class to build instances of {@link List9}.
     */
    public static class Builder {
        private String locationId;
        private String accountType;
        private Active2Enum active;
        private double cauSummaryStatusId;
        private LocalDateTime createdTs;
        private String id;
        private double firstSix;
        private boolean hasRecurring;
        private double lastFour;
        private LocalDateTime modifiedTs;
        private PaymentMethod2Enum paymentMethod;
        private String accountHolderName;
        private String accountNumber;
        private String accountVaultApiId;
        private String accountvaultC1;
        private String accountvaultC2;
        private String accountvaultC3;
        private String achSecCode;
        private String billingAddress;
        private String billingCity;
        private String billingPhone;
        private String billingState;
        private String billingZip;
        private String contactId;
        private String customerId;
        private DriversLicense driversLicense;
        private String previousAccountVaultApiId;
        private String previousAccountVaultId;
        private String previousTransactionId;
        private String ssn4;
        private Boolean termsAgree;
        private String termsAgreeIp;
        private String title;
        private String eSerialNumber;
        private String eTrackData;
        private String eFormat;
        private String eKeyedData;
        private Integer expiringInMonths;
        private String ticket;
        private String trackData;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  locationId  String value for locationId.
         * @param  accountType  String value for accountType.
         * @param  active  Active2Enum value for active.
         * @param  cauSummaryStatusId  double value for cauSummaryStatusId.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @param  id  String value for id.
         * @param  firstSix  double value for firstSix.
         * @param  hasRecurring  boolean value for hasRecurring.
         * @param  lastFour  double value for lastFour.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @param  paymentMethod  PaymentMethod2Enum value for paymentMethod.
         */
        public Builder(String locationId, String accountType, Active2Enum active,
                double cauSummaryStatusId, LocalDateTime createdTs, String id, double firstSix,
                boolean hasRecurring, double lastFour, LocalDateTime modifiedTs,
                PaymentMethod2Enum paymentMethod) {
            this.locationId = locationId;
            this.accountType = accountType;
            this.active = active;
            this.cauSummaryStatusId = cauSummaryStatusId;
            this.createdTs = createdTs;
            this.id = id;
            this.firstSix = firstSix;
            this.hasRecurring = hasRecurring;
            this.lastFour = lastFour;
            this.modifiedTs = modifiedTs;
            this.paymentMethod = paymentMethod;
        }

        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for accountType.
         * @param  accountType  String value for accountType.
         * @return Builder
         */
        public Builder accountType(String accountType) {
            this.accountType = accountType;
            return this;
        }

        /**
         * Setter for active.
         * @param  active  Active2Enum value for active.
         * @return Builder
         */
        public Builder active(Active2Enum active) {
            this.active = active;
            return this;
        }

        /**
         * Setter for cauSummaryStatusId.
         * @param  cauSummaryStatusId  double value for cauSummaryStatusId.
         * @return Builder
         */
        public Builder cauSummaryStatusId(double cauSummaryStatusId) {
            this.cauSummaryStatusId = cauSummaryStatusId;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  LocalDateTime value for createdTs.
         * @return Builder
         */
        public Builder createdTs(LocalDateTime createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for firstSix.
         * @param  firstSix  double value for firstSix.
         * @return Builder
         */
        public Builder firstSix(double firstSix) {
            this.firstSix = firstSix;
            return this;
        }

        /**
         * Setter for hasRecurring.
         * @param  hasRecurring  boolean value for hasRecurring.
         * @return Builder
         */
        public Builder hasRecurring(boolean hasRecurring) {
            this.hasRecurring = hasRecurring;
            return this;
        }

        /**
         * Setter for lastFour.
         * @param  lastFour  double value for lastFour.
         * @return Builder
         */
        public Builder lastFour(double lastFour) {
            this.lastFour = lastFour;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  LocalDateTime value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(LocalDateTime modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for paymentMethod.
         * @param  paymentMethod  PaymentMethod2Enum value for paymentMethod.
         * @return Builder
         */
        public Builder paymentMethod(PaymentMethod2Enum paymentMethod) {
            this.paymentMethod = paymentMethod;
            return this;
        }

        /**
         * Setter for accountHolderName.
         * @param  accountHolderName  String value for accountHolderName.
         * @return Builder
         */
        public Builder accountHolderName(String accountHolderName) {
            this.accountHolderName = accountHolderName;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for accountVaultApiId.
         * @param  accountVaultApiId  String value for accountVaultApiId.
         * @return Builder
         */
        public Builder accountVaultApiId(String accountVaultApiId) {
            this.accountVaultApiId = accountVaultApiId;
            return this;
        }

        /**
         * Setter for accountvaultC1.
         * @param  accountvaultC1  String value for accountvaultC1.
         * @return Builder
         */
        public Builder accountvaultC1(String accountvaultC1) {
            this.accountvaultC1 = accountvaultC1;
            return this;
        }

        /**
         * Setter for accountvaultC2.
         * @param  accountvaultC2  String value for accountvaultC2.
         * @return Builder
         */
        public Builder accountvaultC2(String accountvaultC2) {
            this.accountvaultC2 = accountvaultC2;
            return this;
        }

        /**
         * Setter for accountvaultC3.
         * @param  accountvaultC3  String value for accountvaultC3.
         * @return Builder
         */
        public Builder accountvaultC3(String accountvaultC3) {
            this.accountvaultC3 = accountvaultC3;
            return this;
        }

        /**
         * Setter for achSecCode.
         * @param  achSecCode  String value for achSecCode.
         * @return Builder
         */
        public Builder achSecCode(String achSecCode) {
            this.achSecCode = achSecCode;
            return this;
        }

        /**
         * Setter for billingAddress.
         * @param  billingAddress  String value for billingAddress.
         * @return Builder
         */
        public Builder billingAddress(String billingAddress) {
            this.billingAddress = billingAddress;
            return this;
        }

        /**
         * Setter for billingCity.
         * @param  billingCity  String value for billingCity.
         * @return Builder
         */
        public Builder billingCity(String billingCity) {
            this.billingCity = billingCity;
            return this;
        }

        /**
         * Setter for billingPhone.
         * @param  billingPhone  String value for billingPhone.
         * @return Builder
         */
        public Builder billingPhone(String billingPhone) {
            this.billingPhone = billingPhone;
            return this;
        }

        /**
         * Setter for billingState.
         * @param  billingState  String value for billingState.
         * @return Builder
         */
        public Builder billingState(String billingState) {
            this.billingState = billingState;
            return this;
        }

        /**
         * Setter for billingZip.
         * @param  billingZip  String value for billingZip.
         * @return Builder
         */
        public Builder billingZip(String billingZip) {
            this.billingZip = billingZip;
            return this;
        }

        /**
         * Setter for contactId.
         * @param  contactId  String value for contactId.
         * @return Builder
         */
        public Builder contactId(String contactId) {
            this.contactId = contactId;
            return this;
        }

        /**
         * Setter for customerId.
         * @param  customerId  String value for customerId.
         * @return Builder
         */
        public Builder customerId(String customerId) {
            this.customerId = customerId;
            return this;
        }

        /**
         * Setter for driversLicense.
         * @param  driversLicense  DriversLicense value for driversLicense.
         * @return Builder
         */
        public Builder driversLicense(DriversLicense driversLicense) {
            this.driversLicense = driversLicense;
            return this;
        }

        /**
         * Setter for previousAccountVaultApiId.
         * @param  previousAccountVaultApiId  String value for previousAccountVaultApiId.
         * @return Builder
         */
        public Builder previousAccountVaultApiId(String previousAccountVaultApiId) {
            this.previousAccountVaultApiId = previousAccountVaultApiId;
            return this;
        }

        /**
         * Setter for previousAccountVaultId.
         * @param  previousAccountVaultId  String value for previousAccountVaultId.
         * @return Builder
         */
        public Builder previousAccountVaultId(String previousAccountVaultId) {
            this.previousAccountVaultId = previousAccountVaultId;
            return this;
        }

        /**
         * Setter for previousTransactionId.
         * @param  previousTransactionId  String value for previousTransactionId.
         * @return Builder
         */
        public Builder previousTransactionId(String previousTransactionId) {
            this.previousTransactionId = previousTransactionId;
            return this;
        }

        /**
         * Setter for ssn4.
         * @param  ssn4  String value for ssn4.
         * @return Builder
         */
        public Builder ssn4(String ssn4) {
            this.ssn4 = ssn4;
            return this;
        }

        /**
         * Setter for termsAgree.
         * @param  termsAgree  Boolean value for termsAgree.
         * @return Builder
         */
        public Builder termsAgree(Boolean termsAgree) {
            this.termsAgree = termsAgree;
            return this;
        }

        /**
         * Setter for termsAgreeIp.
         * @param  termsAgreeIp  String value for termsAgreeIp.
         * @return Builder
         */
        public Builder termsAgreeIp(String termsAgreeIp) {
            this.termsAgreeIp = termsAgreeIp;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for eSerialNumber.
         * @param  eSerialNumber  String value for eSerialNumber.
         * @return Builder
         */
        public Builder eSerialNumber(String eSerialNumber) {
            this.eSerialNumber = eSerialNumber;
            return this;
        }

        /**
         * Setter for eTrackData.
         * @param  eTrackData  String value for eTrackData.
         * @return Builder
         */
        public Builder eTrackData(String eTrackData) {
            this.eTrackData = eTrackData;
            return this;
        }

        /**
         * Setter for eFormat.
         * @param  eFormat  String value for eFormat.
         * @return Builder
         */
        public Builder eFormat(String eFormat) {
            this.eFormat = eFormat;
            return this;
        }

        /**
         * Setter for eKeyedData.
         * @param  eKeyedData  String value for eKeyedData.
         * @return Builder
         */
        public Builder eKeyedData(String eKeyedData) {
            this.eKeyedData = eKeyedData;
            return this;
        }

        /**
         * Setter for expiringInMonths.
         * @param  expiringInMonths  Integer value for expiringInMonths.
         * @return Builder
         */
        public Builder expiringInMonths(Integer expiringInMonths) {
            this.expiringInMonths = expiringInMonths;
            return this;
        }

        /**
         * Setter for ticket.
         * @param  ticket  String value for ticket.
         * @return Builder
         */
        public Builder ticket(String ticket) {
            this.ticket = ticket;
            return this;
        }

        /**
         * Setter for trackData.
         * @param  trackData  String value for trackData.
         * @return Builder
         */
        public Builder trackData(String trackData) {
            this.trackData = trackData;
            return this;
        }

        /**
         * Builds a new {@link List9} object using the set fields.
         * @return {@link List9}
         */
        public List9 build() {
            return new List9(locationId, accountType, active, cauSummaryStatusId, createdTs, id,
                    firstSix, hasRecurring, lastFour, modifiedTs, paymentMethod, accountHolderName,
                    accountNumber, accountVaultApiId, accountvaultC1, accountvaultC2,
                    accountvaultC3, achSecCode, billingAddress, billingCity, billingPhone,
                    billingState, billingZip, contactId, customerId, driversLicense,
                    previousAccountVaultApiId, previousAccountVaultId, previousTransactionId, ssn4,
                    termsAgree, termsAgreeIp, title, eSerialNumber, eTrackData, eFormat, eKeyedData,
                    expiringInMonths, ticket, trackData);
        }
    }
}
