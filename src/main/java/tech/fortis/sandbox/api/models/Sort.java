/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Sort type.
 */
public class Sort {
    private IdEnum id;
    private CreatedTsEnum createdTs;
    private ModifiedTsEnum modifiedTs;
    private ProductTransactionIdEnum productTransactionId;
    private ProcessingStatusIdEnum processingStatusId;
    private BatchNumEnum batchNum;
    private IsOpenEnum isOpen;
    private SettlementFileNameEnum settlementFileName;
    private BatchCloseTsEnum batchCloseTs;
    private BatchCloseDetailEnum batchCloseDetail;
    private TotalSaleAmountEnum totalSaleAmount;
    private TotalSaleCountEnum totalSaleCount;
    private TotalRefundAmountEnum totalRefundAmount;
    private TotalRefundCountEnum totalRefundCount;
    private TotalVoidAmountEnum totalVoidAmount;
    private TotalVoidCountEnum totalVoidCount;

    /**
     * Default constructor.
     */
    public Sort() {
    }

    /**
     * Initialization constructor.
     * @param  id  IdEnum value for id.
     * @param  createdTs  CreatedTsEnum value for createdTs.
     * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
     * @param  productTransactionId  ProductTransactionIdEnum value for productTransactionId.
     * @param  processingStatusId  ProcessingStatusIdEnum value for processingStatusId.
     * @param  batchNum  BatchNumEnum value for batchNum.
     * @param  isOpen  IsOpenEnum value for isOpen.
     * @param  settlementFileName  SettlementFileNameEnum value for settlementFileName.
     * @param  batchCloseTs  BatchCloseTsEnum value for batchCloseTs.
     * @param  batchCloseDetail  BatchCloseDetailEnum value for batchCloseDetail.
     * @param  totalSaleAmount  TotalSaleAmountEnum value for totalSaleAmount.
     * @param  totalSaleCount  TotalSaleCountEnum value for totalSaleCount.
     * @param  totalRefundAmount  TotalRefundAmountEnum value for totalRefundAmount.
     * @param  totalRefundCount  TotalRefundCountEnum value for totalRefundCount.
     * @param  totalVoidAmount  TotalVoidAmountEnum value for totalVoidAmount.
     * @param  totalVoidCount  TotalVoidCountEnum value for totalVoidCount.
     */
    public Sort(
            IdEnum id,
            CreatedTsEnum createdTs,
            ModifiedTsEnum modifiedTs,
            ProductTransactionIdEnum productTransactionId,
            ProcessingStatusIdEnum processingStatusId,
            BatchNumEnum batchNum,
            IsOpenEnum isOpen,
            SettlementFileNameEnum settlementFileName,
            BatchCloseTsEnum batchCloseTs,
            BatchCloseDetailEnum batchCloseDetail,
            TotalSaleAmountEnum totalSaleAmount,
            TotalSaleCountEnum totalSaleCount,
            TotalRefundAmountEnum totalRefundAmount,
            TotalRefundCountEnum totalRefundCount,
            TotalVoidAmountEnum totalVoidAmount,
            TotalVoidCountEnum totalVoidCount) {
        this.id = id;
        this.createdTs = createdTs;
        this.modifiedTs = modifiedTs;
        this.productTransactionId = productTransactionId;
        this.processingStatusId = processingStatusId;
        this.batchNum = batchNum;
        this.isOpen = isOpen;
        this.settlementFileName = settlementFileName;
        this.batchCloseTs = batchCloseTs;
        this.batchCloseDetail = batchCloseDetail;
        this.totalSaleAmount = totalSaleAmount;
        this.totalSaleCount = totalSaleCount;
        this.totalRefundAmount = totalRefundAmount;
        this.totalRefundCount = totalRefundCount;
        this.totalVoidAmount = totalVoidAmount;
        this.totalVoidCount = totalVoidCount;
    }

    /**
     * Getter for Id.
     * @return Returns the IdEnum
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdEnum getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for IdEnum
     */
    @JsonSetter("id")
    public void setId(IdEnum id) {
        this.id = id;
    }

    /**
     * Getter for CreatedTs.
     * @return Returns the CreatedTsEnum
     */
    @JsonGetter("created_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedTsEnum getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * @param createdTs Value for CreatedTsEnum
     */
    @JsonSetter("created_ts")
    public void setCreatedTs(CreatedTsEnum createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for ModifiedTs.
     * @return Returns the ModifiedTsEnum
     */
    @JsonGetter("modified_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ModifiedTsEnum getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * @param modifiedTs Value for ModifiedTsEnum
     */
    @JsonSetter("modified_ts")
    public void setModifiedTs(ModifiedTsEnum modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for ProductTransactionId.
     * @return Returns the ProductTransactionIdEnum
     */
    @JsonGetter("product_transaction_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ProductTransactionIdEnum getProductTransactionId() {
        return productTransactionId;
    }

    /**
     * Setter for ProductTransactionId.
     * @param productTransactionId Value for ProductTransactionIdEnum
     */
    @JsonSetter("product_transaction_id")
    public void setProductTransactionId(ProductTransactionIdEnum productTransactionId) {
        this.productTransactionId = productTransactionId;
    }

    /**
     * Getter for ProcessingStatusId.
     * @return Returns the ProcessingStatusIdEnum
     */
    @JsonGetter("processing_status_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ProcessingStatusIdEnum getProcessingStatusId() {
        return processingStatusId;
    }

    /**
     * Setter for ProcessingStatusId.
     * @param processingStatusId Value for ProcessingStatusIdEnum
     */
    @JsonSetter("processing_status_id")
    public void setProcessingStatusId(ProcessingStatusIdEnum processingStatusId) {
        this.processingStatusId = processingStatusId;
    }

    /**
     * Getter for BatchNum.
     * @return Returns the BatchNumEnum
     */
    @JsonGetter("batch_num")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BatchNumEnum getBatchNum() {
        return batchNum;
    }

    /**
     * Setter for BatchNum.
     * @param batchNum Value for BatchNumEnum
     */
    @JsonSetter("batch_num")
    public void setBatchNum(BatchNumEnum batchNum) {
        this.batchNum = batchNum;
    }

    /**
     * Getter for IsOpen.
     * @return Returns the IsOpenEnum
     */
    @JsonGetter("is_open")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IsOpenEnum getIsOpen() {
        return isOpen;
    }

    /**
     * Setter for IsOpen.
     * @param isOpen Value for IsOpenEnum
     */
    @JsonSetter("is_open")
    public void setIsOpen(IsOpenEnum isOpen) {
        this.isOpen = isOpen;
    }

    /**
     * Getter for SettlementFileName.
     * @return Returns the SettlementFileNameEnum
     */
    @JsonGetter("settlement_file_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SettlementFileNameEnum getSettlementFileName() {
        return settlementFileName;
    }

    /**
     * Setter for SettlementFileName.
     * @param settlementFileName Value for SettlementFileNameEnum
     */
    @JsonSetter("settlement_file_name")
    public void setSettlementFileName(SettlementFileNameEnum settlementFileName) {
        this.settlementFileName = settlementFileName;
    }

    /**
     * Getter for BatchCloseTs.
     * @return Returns the BatchCloseTsEnum
     */
    @JsonGetter("batch_close_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BatchCloseTsEnum getBatchCloseTs() {
        return batchCloseTs;
    }

    /**
     * Setter for BatchCloseTs.
     * @param batchCloseTs Value for BatchCloseTsEnum
     */
    @JsonSetter("batch_close_ts")
    public void setBatchCloseTs(BatchCloseTsEnum batchCloseTs) {
        this.batchCloseTs = batchCloseTs;
    }

    /**
     * Getter for BatchCloseDetail.
     * @return Returns the BatchCloseDetailEnum
     */
    @JsonGetter("batch_close_detail")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BatchCloseDetailEnum getBatchCloseDetail() {
        return batchCloseDetail;
    }

    /**
     * Setter for BatchCloseDetail.
     * @param batchCloseDetail Value for BatchCloseDetailEnum
     */
    @JsonSetter("batch_close_detail")
    public void setBatchCloseDetail(BatchCloseDetailEnum batchCloseDetail) {
        this.batchCloseDetail = batchCloseDetail;
    }

    /**
     * Getter for TotalSaleAmount.
     * @return Returns the TotalSaleAmountEnum
     */
    @JsonGetter("total_sale_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TotalSaleAmountEnum getTotalSaleAmount() {
        return totalSaleAmount;
    }

    /**
     * Setter for TotalSaleAmount.
     * @param totalSaleAmount Value for TotalSaleAmountEnum
     */
    @JsonSetter("total_sale_amount")
    public void setTotalSaleAmount(TotalSaleAmountEnum totalSaleAmount) {
        this.totalSaleAmount = totalSaleAmount;
    }

    /**
     * Getter for TotalSaleCount.
     * @return Returns the TotalSaleCountEnum
     */
    @JsonGetter("total_sale_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TotalSaleCountEnum getTotalSaleCount() {
        return totalSaleCount;
    }

    /**
     * Setter for TotalSaleCount.
     * @param totalSaleCount Value for TotalSaleCountEnum
     */
    @JsonSetter("total_sale_count")
    public void setTotalSaleCount(TotalSaleCountEnum totalSaleCount) {
        this.totalSaleCount = totalSaleCount;
    }

    /**
     * Getter for TotalRefundAmount.
     * @return Returns the TotalRefundAmountEnum
     */
    @JsonGetter("total_refund_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TotalRefundAmountEnum getTotalRefundAmount() {
        return totalRefundAmount;
    }

    /**
     * Setter for TotalRefundAmount.
     * @param totalRefundAmount Value for TotalRefundAmountEnum
     */
    @JsonSetter("total_refund_amount")
    public void setTotalRefundAmount(TotalRefundAmountEnum totalRefundAmount) {
        this.totalRefundAmount = totalRefundAmount;
    }

    /**
     * Getter for TotalRefundCount.
     * @return Returns the TotalRefundCountEnum
     */
    @JsonGetter("total_refund_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TotalRefundCountEnum getTotalRefundCount() {
        return totalRefundCount;
    }

    /**
     * Setter for TotalRefundCount.
     * @param totalRefundCount Value for TotalRefundCountEnum
     */
    @JsonSetter("total_refund_count")
    public void setTotalRefundCount(TotalRefundCountEnum totalRefundCount) {
        this.totalRefundCount = totalRefundCount;
    }

    /**
     * Getter for TotalVoidAmount.
     * @return Returns the TotalVoidAmountEnum
     */
    @JsonGetter("total_void_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TotalVoidAmountEnum getTotalVoidAmount() {
        return totalVoidAmount;
    }

    /**
     * Setter for TotalVoidAmount.
     * @param totalVoidAmount Value for TotalVoidAmountEnum
     */
    @JsonSetter("total_void_amount")
    public void setTotalVoidAmount(TotalVoidAmountEnum totalVoidAmount) {
        this.totalVoidAmount = totalVoidAmount;
    }

    /**
     * Getter for TotalVoidCount.
     * @return Returns the TotalVoidCountEnum
     */
    @JsonGetter("total_void_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TotalVoidCountEnum getTotalVoidCount() {
        return totalVoidCount;
    }

    /**
     * Setter for TotalVoidCount.
     * @param totalVoidCount Value for TotalVoidCountEnum
     */
    @JsonSetter("total_void_count")
    public void setTotalVoidCount(TotalVoidCountEnum totalVoidCount) {
        this.totalVoidCount = totalVoidCount;
    }

    /**
     * Converts this Sort into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Sort [" + "id=" + id + ", createdTs=" + createdTs + ", modifiedTs=" + modifiedTs
                + ", productTransactionId=" + productTransactionId + ", processingStatusId="
                + processingStatusId + ", batchNum=" + batchNum + ", isOpen=" + isOpen
                + ", settlementFileName=" + settlementFileName + ", batchCloseTs=" + batchCloseTs
                + ", batchCloseDetail=" + batchCloseDetail + ", totalSaleAmount=" + totalSaleAmount
                + ", totalSaleCount=" + totalSaleCount + ", totalRefundAmount=" + totalRefundAmount
                + ", totalRefundCount=" + totalRefundCount + ", totalVoidAmount=" + totalVoidAmount
                + ", totalVoidCount=" + totalVoidCount + "]";
    }

    /**
     * Builds a new {@link Sort.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Sort.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .createdTs(getCreatedTs())
                .modifiedTs(getModifiedTs())
                .productTransactionId(getProductTransactionId())
                .processingStatusId(getProcessingStatusId())
                .batchNum(getBatchNum())
                .isOpen(getIsOpen())
                .settlementFileName(getSettlementFileName())
                .batchCloseTs(getBatchCloseTs())
                .batchCloseDetail(getBatchCloseDetail())
                .totalSaleAmount(getTotalSaleAmount())
                .totalSaleCount(getTotalSaleCount())
                .totalRefundAmount(getTotalRefundAmount())
                .totalRefundCount(getTotalRefundCount())
                .totalVoidAmount(getTotalVoidAmount())
                .totalVoidCount(getTotalVoidCount());
        return builder;
    }

    /**
     * Class to build instances of {@link Sort}.
     */
    public static class Builder {
        private IdEnum id;
        private CreatedTsEnum createdTs;
        private ModifiedTsEnum modifiedTs;
        private ProductTransactionIdEnum productTransactionId;
        private ProcessingStatusIdEnum processingStatusId;
        private BatchNumEnum batchNum;
        private IsOpenEnum isOpen;
        private SettlementFileNameEnum settlementFileName;
        private BatchCloseTsEnum batchCloseTs;
        private BatchCloseDetailEnum batchCloseDetail;
        private TotalSaleAmountEnum totalSaleAmount;
        private TotalSaleCountEnum totalSaleCount;
        private TotalRefundAmountEnum totalRefundAmount;
        private TotalRefundCountEnum totalRefundCount;
        private TotalVoidAmountEnum totalVoidAmount;
        private TotalVoidCountEnum totalVoidCount;



        /**
         * Setter for id.
         * @param  id  IdEnum value for id.
         * @return Builder
         */
        public Builder id(IdEnum id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  CreatedTsEnum value for createdTs.
         * @return Builder
         */
        public Builder createdTs(CreatedTsEnum createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(ModifiedTsEnum modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for productTransactionId.
         * @param  productTransactionId  ProductTransactionIdEnum value for productTransactionId.
         * @return Builder
         */
        public Builder productTransactionId(ProductTransactionIdEnum productTransactionId) {
            this.productTransactionId = productTransactionId;
            return this;
        }

        /**
         * Setter for processingStatusId.
         * @param  processingStatusId  ProcessingStatusIdEnum value for processingStatusId.
         * @return Builder
         */
        public Builder processingStatusId(ProcessingStatusIdEnum processingStatusId) {
            this.processingStatusId = processingStatusId;
            return this;
        }

        /**
         * Setter for batchNum.
         * @param  batchNum  BatchNumEnum value for batchNum.
         * @return Builder
         */
        public Builder batchNum(BatchNumEnum batchNum) {
            this.batchNum = batchNum;
            return this;
        }

        /**
         * Setter for isOpen.
         * @param  isOpen  IsOpenEnum value for isOpen.
         * @return Builder
         */
        public Builder isOpen(IsOpenEnum isOpen) {
            this.isOpen = isOpen;
            return this;
        }

        /**
         * Setter for settlementFileName.
         * @param  settlementFileName  SettlementFileNameEnum value for settlementFileName.
         * @return Builder
         */
        public Builder settlementFileName(SettlementFileNameEnum settlementFileName) {
            this.settlementFileName = settlementFileName;
            return this;
        }

        /**
         * Setter for batchCloseTs.
         * @param  batchCloseTs  BatchCloseTsEnum value for batchCloseTs.
         * @return Builder
         */
        public Builder batchCloseTs(BatchCloseTsEnum batchCloseTs) {
            this.batchCloseTs = batchCloseTs;
            return this;
        }

        /**
         * Setter for batchCloseDetail.
         * @param  batchCloseDetail  BatchCloseDetailEnum value for batchCloseDetail.
         * @return Builder
         */
        public Builder batchCloseDetail(BatchCloseDetailEnum batchCloseDetail) {
            this.batchCloseDetail = batchCloseDetail;
            return this;
        }

        /**
         * Setter for totalSaleAmount.
         * @param  totalSaleAmount  TotalSaleAmountEnum value for totalSaleAmount.
         * @return Builder
         */
        public Builder totalSaleAmount(TotalSaleAmountEnum totalSaleAmount) {
            this.totalSaleAmount = totalSaleAmount;
            return this;
        }

        /**
         * Setter for totalSaleCount.
         * @param  totalSaleCount  TotalSaleCountEnum value for totalSaleCount.
         * @return Builder
         */
        public Builder totalSaleCount(TotalSaleCountEnum totalSaleCount) {
            this.totalSaleCount = totalSaleCount;
            return this;
        }

        /**
         * Setter for totalRefundAmount.
         * @param  totalRefundAmount  TotalRefundAmountEnum value for totalRefundAmount.
         * @return Builder
         */
        public Builder totalRefundAmount(TotalRefundAmountEnum totalRefundAmount) {
            this.totalRefundAmount = totalRefundAmount;
            return this;
        }

        /**
         * Setter for totalRefundCount.
         * @param  totalRefundCount  TotalRefundCountEnum value for totalRefundCount.
         * @return Builder
         */
        public Builder totalRefundCount(TotalRefundCountEnum totalRefundCount) {
            this.totalRefundCount = totalRefundCount;
            return this;
        }

        /**
         * Setter for totalVoidAmount.
         * @param  totalVoidAmount  TotalVoidAmountEnum value for totalVoidAmount.
         * @return Builder
         */
        public Builder totalVoidAmount(TotalVoidAmountEnum totalVoidAmount) {
            this.totalVoidAmount = totalVoidAmount;
            return this;
        }

        /**
         * Setter for totalVoidCount.
         * @param  totalVoidCount  TotalVoidCountEnum value for totalVoidCount.
         * @return Builder
         */
        public Builder totalVoidCount(TotalVoidCountEnum totalVoidCount) {
            this.totalVoidCount = totalVoidCount;
            return this;
        }

        /**
         * Builds a new {@link Sort} object using the set fields.
         * @return {@link Sort}
         */
        public Sort build() {
            return new Sort(id, createdTs, modifiedTs, productTransactionId, processingStatusId,
                    batchNum, isOpen, settlementFileName, batchCloseTs, batchCloseDetail,
                    totalSaleAmount, totalSaleCount, totalRefundAmount, totalRefundCount,
                    totalVoidAmount, totalVoidCount);
        }
    }
}
