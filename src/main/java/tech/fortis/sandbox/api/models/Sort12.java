/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Sort12 type.
 */
public class Sort12 {
    private AccountNumberEnum accountNumber;
    private AddressEnum address;
    private BrandingDomainUrlEnum brandingDomainUrl;
    private CellPhoneEnum cellPhone;
    private CityEnum city;
    private CompanyNameEnum companyName;
    private ContactIdEnum contactId;
    private DateOfBirthEnum dateOfBirth;
    private DomainIdEnum domainId;
    private EmailEnum email;
    private EmailTrxReceiptEnum emailTrxReceipt;
    private HomePhoneEnum homePhone;
    private FirstNameEnum firstName;
    private LastNameEnum lastName;
    private LocaleEnum locale;
    private OfficePhoneEnum officePhone;
    private OfficeExtPhoneEnum officeExtPhone;
    private PrimaryLocationIdEnum primaryLocationId;
    private RequiresNewPasswordEnum requiresNewPassword;
    private StateEnum state;
    private TermsConditionIdEnum termsConditionId;
    private TzEnum tz;
    private UiPrefs3Enum uiPrefs;
    private UsernameEnum username;
    private UserApiKeyEnum userApiKey;
    private UserHashKeyEnum userHashKey;
    private UserTypeId3Enum userTypeId;
    private PasswordEnum password;
    private ZipEnum zip;
    private LocationIdEnum locationId;
    private ContactApiIdEnum contactApiId;
    private PrimaryLocationApiIdEnum primaryLocationApiId;
    private StatusIdEnum statusId;
    private IdEnum id;
    private Status3Enum status;
    private LoginAttemptsEnum loginAttempts;
    private LastLoginTsEnum lastLoginTs;
    private CreatedTsEnum createdTs;
    private ModifiedTsEnum modifiedTs;
    private CreatedUserIdEnum createdUserId;
    private TermsAcceptedTsEnum termsAcceptedTs;
    private TermsAgreeIpEnum termsAgreeIp;
    private CurrentDateTimeEnum currentDateTime;

    /**
     * Default constructor.
     */
    public Sort12() {
    }

    /**
     * Initialization constructor.
     * @param  accountNumber  AccountNumberEnum value for accountNumber.
     * @param  address  AddressEnum value for address.
     * @param  brandingDomainUrl  BrandingDomainUrlEnum value for brandingDomainUrl.
     * @param  cellPhone  CellPhoneEnum value for cellPhone.
     * @param  city  CityEnum value for city.
     * @param  companyName  CompanyNameEnum value for companyName.
     * @param  contactId  ContactIdEnum value for contactId.
     * @param  dateOfBirth  DateOfBirthEnum value for dateOfBirth.
     * @param  domainId  DomainIdEnum value for domainId.
     * @param  email  EmailEnum value for email.
     * @param  emailTrxReceipt  EmailTrxReceiptEnum value for emailTrxReceipt.
     * @param  homePhone  HomePhoneEnum value for homePhone.
     * @param  firstName  FirstNameEnum value for firstName.
     * @param  lastName  LastNameEnum value for lastName.
     * @param  locale  LocaleEnum value for locale.
     * @param  officePhone  OfficePhoneEnum value for officePhone.
     * @param  officeExtPhone  OfficeExtPhoneEnum value for officeExtPhone.
     * @param  primaryLocationId  PrimaryLocationIdEnum value for primaryLocationId.
     * @param  requiresNewPassword  RequiresNewPasswordEnum value for requiresNewPassword.
     * @param  state  StateEnum value for state.
     * @param  termsConditionId  TermsConditionIdEnum value for termsConditionId.
     * @param  tz  TzEnum value for tz.
     * @param  uiPrefs  UiPrefs3Enum value for uiPrefs.
     * @param  username  UsernameEnum value for username.
     * @param  userApiKey  UserApiKeyEnum value for userApiKey.
     * @param  userHashKey  UserHashKeyEnum value for userHashKey.
     * @param  userTypeId  UserTypeId3Enum value for userTypeId.
     * @param  password  PasswordEnum value for password.
     * @param  zip  ZipEnum value for zip.
     * @param  locationId  LocationIdEnum value for locationId.
     * @param  contactApiId  ContactApiIdEnum value for contactApiId.
     * @param  primaryLocationApiId  PrimaryLocationApiIdEnum value for primaryLocationApiId.
     * @param  statusId  StatusIdEnum value for statusId.
     * @param  id  IdEnum value for id.
     * @param  status  Status3Enum value for status.
     * @param  loginAttempts  LoginAttemptsEnum value for loginAttempts.
     * @param  lastLoginTs  LastLoginTsEnum value for lastLoginTs.
     * @param  createdTs  CreatedTsEnum value for createdTs.
     * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
     * @param  createdUserId  CreatedUserIdEnum value for createdUserId.
     * @param  termsAcceptedTs  TermsAcceptedTsEnum value for termsAcceptedTs.
     * @param  termsAgreeIp  TermsAgreeIpEnum value for termsAgreeIp.
     * @param  currentDateTime  CurrentDateTimeEnum value for currentDateTime.
     */
    public Sort12(
            AccountNumberEnum accountNumber,
            AddressEnum address,
            BrandingDomainUrlEnum brandingDomainUrl,
            CellPhoneEnum cellPhone,
            CityEnum city,
            CompanyNameEnum companyName,
            ContactIdEnum contactId,
            DateOfBirthEnum dateOfBirth,
            DomainIdEnum domainId,
            EmailEnum email,
            EmailTrxReceiptEnum emailTrxReceipt,
            HomePhoneEnum homePhone,
            FirstNameEnum firstName,
            LastNameEnum lastName,
            LocaleEnum locale,
            OfficePhoneEnum officePhone,
            OfficeExtPhoneEnum officeExtPhone,
            PrimaryLocationIdEnum primaryLocationId,
            RequiresNewPasswordEnum requiresNewPassword,
            StateEnum state,
            TermsConditionIdEnum termsConditionId,
            TzEnum tz,
            UiPrefs3Enum uiPrefs,
            UsernameEnum username,
            UserApiKeyEnum userApiKey,
            UserHashKeyEnum userHashKey,
            UserTypeId3Enum userTypeId,
            PasswordEnum password,
            ZipEnum zip,
            LocationIdEnum locationId,
            ContactApiIdEnum contactApiId,
            PrimaryLocationApiIdEnum primaryLocationApiId,
            StatusIdEnum statusId,
            IdEnum id,
            Status3Enum status,
            LoginAttemptsEnum loginAttempts,
            LastLoginTsEnum lastLoginTs,
            CreatedTsEnum createdTs,
            ModifiedTsEnum modifiedTs,
            CreatedUserIdEnum createdUserId,
            TermsAcceptedTsEnum termsAcceptedTs,
            TermsAgreeIpEnum termsAgreeIp,
            CurrentDateTimeEnum currentDateTime) {
        this.accountNumber = accountNumber;
        this.address = address;
        this.brandingDomainUrl = brandingDomainUrl;
        this.cellPhone = cellPhone;
        this.city = city;
        this.companyName = companyName;
        this.contactId = contactId;
        this.dateOfBirth = dateOfBirth;
        this.domainId = domainId;
        this.email = email;
        this.emailTrxReceipt = emailTrxReceipt;
        this.homePhone = homePhone;
        this.firstName = firstName;
        this.lastName = lastName;
        this.locale = locale;
        this.officePhone = officePhone;
        this.officeExtPhone = officeExtPhone;
        this.primaryLocationId = primaryLocationId;
        this.requiresNewPassword = requiresNewPassword;
        this.state = state;
        this.termsConditionId = termsConditionId;
        this.tz = tz;
        this.uiPrefs = uiPrefs;
        this.username = username;
        this.userApiKey = userApiKey;
        this.userHashKey = userHashKey;
        this.userTypeId = userTypeId;
        this.password = password;
        this.zip = zip;
        this.locationId = locationId;
        this.contactApiId = contactApiId;
        this.primaryLocationApiId = primaryLocationApiId;
        this.statusId = statusId;
        this.id = id;
        this.status = status;
        this.loginAttempts = loginAttempts;
        this.lastLoginTs = lastLoginTs;
        this.createdTs = createdTs;
        this.modifiedTs = modifiedTs;
        this.createdUserId = createdUserId;
        this.termsAcceptedTs = termsAcceptedTs;
        this.termsAgreeIp = termsAgreeIp;
        this.currentDateTime = currentDateTime;
    }

    /**
     * Getter for AccountNumber.
     * @return Returns the AccountNumberEnum
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccountNumberEnum getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * @param accountNumber Value for AccountNumberEnum
     */
    @JsonSetter("account_number")
    public void setAccountNumber(AccountNumberEnum accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for Address.
     * @return Returns the AddressEnum
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AddressEnum getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * @param address Value for AddressEnum
     */
    @JsonSetter("address")
    public void setAddress(AddressEnum address) {
        this.address = address;
    }

    /**
     * Getter for BrandingDomainUrl.
     * @return Returns the BrandingDomainUrlEnum
     */
    @JsonGetter("branding_domain_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BrandingDomainUrlEnum getBrandingDomainUrl() {
        return brandingDomainUrl;
    }

    /**
     * Setter for BrandingDomainUrl.
     * @param brandingDomainUrl Value for BrandingDomainUrlEnum
     */
    @JsonSetter("branding_domain_url")
    public void setBrandingDomainUrl(BrandingDomainUrlEnum brandingDomainUrl) {
        this.brandingDomainUrl = brandingDomainUrl;
    }

    /**
     * Getter for CellPhone.
     * @return Returns the CellPhoneEnum
     */
    @JsonGetter("cell_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CellPhoneEnum getCellPhone() {
        return cellPhone;
    }

    /**
     * Setter for CellPhone.
     * @param cellPhone Value for CellPhoneEnum
     */
    @JsonSetter("cell_phone")
    public void setCellPhone(CellPhoneEnum cellPhone) {
        this.cellPhone = cellPhone;
    }

    /**
     * Getter for City.
     * @return Returns the CityEnum
     */
    @JsonGetter("city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CityEnum getCity() {
        return city;
    }

    /**
     * Setter for City.
     * @param city Value for CityEnum
     */
    @JsonSetter("city")
    public void setCity(CityEnum city) {
        this.city = city;
    }

    /**
     * Getter for CompanyName.
     * @return Returns the CompanyNameEnum
     */
    @JsonGetter("company_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CompanyNameEnum getCompanyName() {
        return companyName;
    }

    /**
     * Setter for CompanyName.
     * @param companyName Value for CompanyNameEnum
     */
    @JsonSetter("company_name")
    public void setCompanyName(CompanyNameEnum companyName) {
        this.companyName = companyName;
    }

    /**
     * Getter for ContactId.
     * @return Returns the ContactIdEnum
     */
    @JsonGetter("contact_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ContactIdEnum getContactId() {
        return contactId;
    }

    /**
     * Setter for ContactId.
     * @param contactId Value for ContactIdEnum
     */
    @JsonSetter("contact_id")
    public void setContactId(ContactIdEnum contactId) {
        this.contactId = contactId;
    }

    /**
     * Getter for DateOfBirth.
     * @return Returns the DateOfBirthEnum
     */
    @JsonGetter("date_of_birth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DateOfBirthEnum getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * Setter for DateOfBirth.
     * @param dateOfBirth Value for DateOfBirthEnum
     */
    @JsonSetter("date_of_birth")
    public void setDateOfBirth(DateOfBirthEnum dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Getter for DomainId.
     * @return Returns the DomainIdEnum
     */
    @JsonGetter("domain_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DomainIdEnum getDomainId() {
        return domainId;
    }

    /**
     * Setter for DomainId.
     * @param domainId Value for DomainIdEnum
     */
    @JsonSetter("domain_id")
    public void setDomainId(DomainIdEnum domainId) {
        this.domainId = domainId;
    }

    /**
     * Getter for Email.
     * @return Returns the EmailEnum
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EmailEnum getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * @param email Value for EmailEnum
     */
    @JsonSetter("email")
    public void setEmail(EmailEnum email) {
        this.email = email;
    }

    /**
     * Getter for EmailTrxReceipt.
     * @return Returns the EmailTrxReceiptEnum
     */
    @JsonGetter("email_trx_receipt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EmailTrxReceiptEnum getEmailTrxReceipt() {
        return emailTrxReceipt;
    }

    /**
     * Setter for EmailTrxReceipt.
     * @param emailTrxReceipt Value for EmailTrxReceiptEnum
     */
    @JsonSetter("email_trx_receipt")
    public void setEmailTrxReceipt(EmailTrxReceiptEnum emailTrxReceipt) {
        this.emailTrxReceipt = emailTrxReceipt;
    }

    /**
     * Getter for HomePhone.
     * @return Returns the HomePhoneEnum
     */
    @JsonGetter("home_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public HomePhoneEnum getHomePhone() {
        return homePhone;
    }

    /**
     * Setter for HomePhone.
     * @param homePhone Value for HomePhoneEnum
     */
    @JsonSetter("home_phone")
    public void setHomePhone(HomePhoneEnum homePhone) {
        this.homePhone = homePhone;
    }

    /**
     * Getter for FirstName.
     * @return Returns the FirstNameEnum
     */
    @JsonGetter("first_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FirstNameEnum getFirstName() {
        return firstName;
    }

    /**
     * Setter for FirstName.
     * @param firstName Value for FirstNameEnum
     */
    @JsonSetter("first_name")
    public void setFirstName(FirstNameEnum firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for LastName.
     * @return Returns the LastNameEnum
     */
    @JsonGetter("last_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LastNameEnum getLastName() {
        return lastName;
    }

    /**
     * Setter for LastName.
     * @param lastName Value for LastNameEnum
     */
    @JsonSetter("last_name")
    public void setLastName(LastNameEnum lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for Locale.
     * @return Returns the LocaleEnum
     */
    @JsonGetter("locale")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocaleEnum getLocale() {
        return locale;
    }

    /**
     * Setter for Locale.
     * @param locale Value for LocaleEnum
     */
    @JsonSetter("locale")
    public void setLocale(LocaleEnum locale) {
        this.locale = locale;
    }

    /**
     * Getter for OfficePhone.
     * @return Returns the OfficePhoneEnum
     */
    @JsonGetter("office_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OfficePhoneEnum getOfficePhone() {
        return officePhone;
    }

    /**
     * Setter for OfficePhone.
     * @param officePhone Value for OfficePhoneEnum
     */
    @JsonSetter("office_phone")
    public void setOfficePhone(OfficePhoneEnum officePhone) {
        this.officePhone = officePhone;
    }

    /**
     * Getter for OfficeExtPhone.
     * @return Returns the OfficeExtPhoneEnum
     */
    @JsonGetter("office_ext_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OfficeExtPhoneEnum getOfficeExtPhone() {
        return officeExtPhone;
    }

    /**
     * Setter for OfficeExtPhone.
     * @param officeExtPhone Value for OfficeExtPhoneEnum
     */
    @JsonSetter("office_ext_phone")
    public void setOfficeExtPhone(OfficeExtPhoneEnum officeExtPhone) {
        this.officeExtPhone = officeExtPhone;
    }

    /**
     * Getter for PrimaryLocationId.
     * @return Returns the PrimaryLocationIdEnum
     */
    @JsonGetter("primary_location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PrimaryLocationIdEnum getPrimaryLocationId() {
        return primaryLocationId;
    }

    /**
     * Setter for PrimaryLocationId.
     * @param primaryLocationId Value for PrimaryLocationIdEnum
     */
    @JsonSetter("primary_location_id")
    public void setPrimaryLocationId(PrimaryLocationIdEnum primaryLocationId) {
        this.primaryLocationId = primaryLocationId;
    }

    /**
     * Getter for RequiresNewPassword.
     * @return Returns the RequiresNewPasswordEnum
     */
    @JsonGetter("requires_new_password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RequiresNewPasswordEnum getRequiresNewPassword() {
        return requiresNewPassword;
    }

    /**
     * Setter for RequiresNewPassword.
     * @param requiresNewPassword Value for RequiresNewPasswordEnum
     */
    @JsonSetter("requires_new_password")
    public void setRequiresNewPassword(RequiresNewPasswordEnum requiresNewPassword) {
        this.requiresNewPassword = requiresNewPassword;
    }

    /**
     * Getter for State.
     * @return Returns the StateEnum
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public StateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for StateEnum
     */
    @JsonSetter("state")
    public void setState(StateEnum state) {
        this.state = state;
    }

    /**
     * Getter for TermsConditionId.
     * @return Returns the TermsConditionIdEnum
     */
    @JsonGetter("terms_condition_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TermsConditionIdEnum getTermsConditionId() {
        return termsConditionId;
    }

    /**
     * Setter for TermsConditionId.
     * @param termsConditionId Value for TermsConditionIdEnum
     */
    @JsonSetter("terms_condition_id")
    public void setTermsConditionId(TermsConditionIdEnum termsConditionId) {
        this.termsConditionId = termsConditionId;
    }

    /**
     * Getter for Tz.
     * @return Returns the TzEnum
     */
    @JsonGetter("tz")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TzEnum getTz() {
        return tz;
    }

    /**
     * Setter for Tz.
     * @param tz Value for TzEnum
     */
    @JsonSetter("tz")
    public void setTz(TzEnum tz) {
        this.tz = tz;
    }

    /**
     * Getter for UiPrefs.
     * @return Returns the UiPrefs3Enum
     */
    @JsonGetter("ui_prefs")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UiPrefs3Enum getUiPrefs() {
        return uiPrefs;
    }

    /**
     * Setter for UiPrefs.
     * @param uiPrefs Value for UiPrefs3Enum
     */
    @JsonSetter("ui_prefs")
    public void setUiPrefs(UiPrefs3Enum uiPrefs) {
        this.uiPrefs = uiPrefs;
    }

    /**
     * Getter for Username.
     * @return Returns the UsernameEnum
     */
    @JsonGetter("username")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsernameEnum getUsername() {
        return username;
    }

    /**
     * Setter for Username.
     * @param username Value for UsernameEnum
     */
    @JsonSetter("username")
    public void setUsername(UsernameEnum username) {
        this.username = username;
    }

    /**
     * Getter for UserApiKey.
     * @return Returns the UserApiKeyEnum
     */
    @JsonGetter("user_api_key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UserApiKeyEnum getUserApiKey() {
        return userApiKey;
    }

    /**
     * Setter for UserApiKey.
     * @param userApiKey Value for UserApiKeyEnum
     */
    @JsonSetter("user_api_key")
    public void setUserApiKey(UserApiKeyEnum userApiKey) {
        this.userApiKey = userApiKey;
    }

    /**
     * Getter for UserHashKey.
     * @return Returns the UserHashKeyEnum
     */
    @JsonGetter("user_hash_key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UserHashKeyEnum getUserHashKey() {
        return userHashKey;
    }

    /**
     * Setter for UserHashKey.
     * @param userHashKey Value for UserHashKeyEnum
     */
    @JsonSetter("user_hash_key")
    public void setUserHashKey(UserHashKeyEnum userHashKey) {
        this.userHashKey = userHashKey;
    }

    /**
     * Getter for UserTypeId.
     * @return Returns the UserTypeId3Enum
     */
    @JsonGetter("user_type_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UserTypeId3Enum getUserTypeId() {
        return userTypeId;
    }

    /**
     * Setter for UserTypeId.
     * @param userTypeId Value for UserTypeId3Enum
     */
    @JsonSetter("user_type_id")
    public void setUserTypeId(UserTypeId3Enum userTypeId) {
        this.userTypeId = userTypeId;
    }

    /**
     * Getter for Password.
     * @return Returns the PasswordEnum
     */
    @JsonGetter("password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PasswordEnum getPassword() {
        return password;
    }

    /**
     * Setter for Password.
     * @param password Value for PasswordEnum
     */
    @JsonSetter("password")
    public void setPassword(PasswordEnum password) {
        this.password = password;
    }

    /**
     * Getter for Zip.
     * @return Returns the ZipEnum
     */
    @JsonGetter("zip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ZipEnum getZip() {
        return zip;
    }

    /**
     * Setter for Zip.
     * @param zip Value for ZipEnum
     */
    @JsonSetter("zip")
    public void setZip(ZipEnum zip) {
        this.zip = zip;
    }

    /**
     * Getter for LocationId.
     * @return Returns the LocationIdEnum
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationIdEnum getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * @param locationId Value for LocationIdEnum
     */
    @JsonSetter("location_id")
    public void setLocationId(LocationIdEnum locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for ContactApiId.
     * @return Returns the ContactApiIdEnum
     */
    @JsonGetter("contact_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ContactApiIdEnum getContactApiId() {
        return contactApiId;
    }

    /**
     * Setter for ContactApiId.
     * @param contactApiId Value for ContactApiIdEnum
     */
    @JsonSetter("contact_api_id")
    public void setContactApiId(ContactApiIdEnum contactApiId) {
        this.contactApiId = contactApiId;
    }

    /**
     * Getter for PrimaryLocationApiId.
     * @return Returns the PrimaryLocationApiIdEnum
     */
    @JsonGetter("primary_location_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PrimaryLocationApiIdEnum getPrimaryLocationApiId() {
        return primaryLocationApiId;
    }

    /**
     * Setter for PrimaryLocationApiId.
     * @param primaryLocationApiId Value for PrimaryLocationApiIdEnum
     */
    @JsonSetter("primary_location_api_id")
    public void setPrimaryLocationApiId(PrimaryLocationApiIdEnum primaryLocationApiId) {
        this.primaryLocationApiId = primaryLocationApiId;
    }

    /**
     * Getter for StatusId.
     * @return Returns the StatusIdEnum
     */
    @JsonGetter("status_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public StatusIdEnum getStatusId() {
        return statusId;
    }

    /**
     * Setter for StatusId.
     * @param statusId Value for StatusIdEnum
     */
    @JsonSetter("status_id")
    public void setStatusId(StatusIdEnum statusId) {
        this.statusId = statusId;
    }

    /**
     * Getter for Id.
     * @return Returns the IdEnum
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdEnum getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for IdEnum
     */
    @JsonSetter("id")
    public void setId(IdEnum id) {
        this.id = id;
    }

    /**
     * Getter for Status.
     * @return Returns the Status3Enum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Status3Enum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for Status3Enum
     */
    @JsonSetter("status")
    public void setStatus(Status3Enum status) {
        this.status = status;
    }

    /**
     * Getter for LoginAttempts.
     * @return Returns the LoginAttemptsEnum
     */
    @JsonGetter("login_attempts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LoginAttemptsEnum getLoginAttempts() {
        return loginAttempts;
    }

    /**
     * Setter for LoginAttempts.
     * @param loginAttempts Value for LoginAttemptsEnum
     */
    @JsonSetter("login_attempts")
    public void setLoginAttempts(LoginAttemptsEnum loginAttempts) {
        this.loginAttempts = loginAttempts;
    }

    /**
     * Getter for LastLoginTs.
     * @return Returns the LastLoginTsEnum
     */
    @JsonGetter("last_login_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LastLoginTsEnum getLastLoginTs() {
        return lastLoginTs;
    }

    /**
     * Setter for LastLoginTs.
     * @param lastLoginTs Value for LastLoginTsEnum
     */
    @JsonSetter("last_login_ts")
    public void setLastLoginTs(LastLoginTsEnum lastLoginTs) {
        this.lastLoginTs = lastLoginTs;
    }

    /**
     * Getter for CreatedTs.
     * @return Returns the CreatedTsEnum
     */
    @JsonGetter("created_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedTsEnum getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * @param createdTs Value for CreatedTsEnum
     */
    @JsonSetter("created_ts")
    public void setCreatedTs(CreatedTsEnum createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for ModifiedTs.
     * @return Returns the ModifiedTsEnum
     */
    @JsonGetter("modified_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ModifiedTsEnum getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * @param modifiedTs Value for ModifiedTsEnum
     */
    @JsonSetter("modified_ts")
    public void setModifiedTs(ModifiedTsEnum modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for CreatedUserId.
     * @return Returns the CreatedUserIdEnum
     */
    @JsonGetter("created_user_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedUserIdEnum getCreatedUserId() {
        return createdUserId;
    }

    /**
     * Setter for CreatedUserId.
     * @param createdUserId Value for CreatedUserIdEnum
     */
    @JsonSetter("created_user_id")
    public void setCreatedUserId(CreatedUserIdEnum createdUserId) {
        this.createdUserId = createdUserId;
    }

    /**
     * Getter for TermsAcceptedTs.
     * @return Returns the TermsAcceptedTsEnum
     */
    @JsonGetter("terms_accepted_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TermsAcceptedTsEnum getTermsAcceptedTs() {
        return termsAcceptedTs;
    }

    /**
     * Setter for TermsAcceptedTs.
     * @param termsAcceptedTs Value for TermsAcceptedTsEnum
     */
    @JsonSetter("terms_accepted_ts")
    public void setTermsAcceptedTs(TermsAcceptedTsEnum termsAcceptedTs) {
        this.termsAcceptedTs = termsAcceptedTs;
    }

    /**
     * Getter for TermsAgreeIp.
     * @return Returns the TermsAgreeIpEnum
     */
    @JsonGetter("terms_agree_ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TermsAgreeIpEnum getTermsAgreeIp() {
        return termsAgreeIp;
    }

    /**
     * Setter for TermsAgreeIp.
     * @param termsAgreeIp Value for TermsAgreeIpEnum
     */
    @JsonSetter("terms_agree_ip")
    public void setTermsAgreeIp(TermsAgreeIpEnum termsAgreeIp) {
        this.termsAgreeIp = termsAgreeIp;
    }

    /**
     * Getter for CurrentDateTime.
     * @return Returns the CurrentDateTimeEnum
     */
    @JsonGetter("current_date_time")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CurrentDateTimeEnum getCurrentDateTime() {
        return currentDateTime;
    }

    /**
     * Setter for CurrentDateTime.
     * @param currentDateTime Value for CurrentDateTimeEnum
     */
    @JsonSetter("current_date_time")
    public void setCurrentDateTime(CurrentDateTimeEnum currentDateTime) {
        this.currentDateTime = currentDateTime;
    }

    /**
     * Converts this Sort12 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Sort12 [" + "accountNumber=" + accountNumber + ", address=" + address
                + ", brandingDomainUrl=" + brandingDomainUrl + ", cellPhone=" + cellPhone
                + ", city=" + city + ", companyName=" + companyName + ", contactId=" + contactId
                + ", dateOfBirth=" + dateOfBirth + ", domainId=" + domainId + ", email=" + email
                + ", emailTrxReceipt=" + emailTrxReceipt + ", homePhone=" + homePhone
                + ", firstName=" + firstName + ", lastName=" + lastName + ", locale=" + locale
                + ", officePhone=" + officePhone + ", officeExtPhone=" + officeExtPhone
                + ", primaryLocationId=" + primaryLocationId + ", requiresNewPassword="
                + requiresNewPassword + ", state=" + state + ", termsConditionId="
                + termsConditionId + ", tz=" + tz + ", uiPrefs=" + uiPrefs + ", username="
                + username + ", userApiKey=" + userApiKey + ", userHashKey=" + userHashKey
                + ", userTypeId=" + userTypeId + ", password=" + password + ", zip=" + zip
                + ", locationId=" + locationId + ", contactApiId=" + contactApiId
                + ", primaryLocationApiId=" + primaryLocationApiId + ", statusId=" + statusId
                + ", id=" + id + ", status=" + status + ", loginAttempts=" + loginAttempts
                + ", lastLoginTs=" + lastLoginTs + ", createdTs=" + createdTs + ", modifiedTs="
                + modifiedTs + ", createdUserId=" + createdUserId + ", termsAcceptedTs="
                + termsAcceptedTs + ", termsAgreeIp=" + termsAgreeIp + ", currentDateTime="
                + currentDateTime + "]";
    }

    /**
     * Builds a new {@link Sort12.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Sort12.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountNumber(getAccountNumber())
                .address(getAddress())
                .brandingDomainUrl(getBrandingDomainUrl())
                .cellPhone(getCellPhone())
                .city(getCity())
                .companyName(getCompanyName())
                .contactId(getContactId())
                .dateOfBirth(getDateOfBirth())
                .domainId(getDomainId())
                .email(getEmail())
                .emailTrxReceipt(getEmailTrxReceipt())
                .homePhone(getHomePhone())
                .firstName(getFirstName())
                .lastName(getLastName())
                .locale(getLocale())
                .officePhone(getOfficePhone())
                .officeExtPhone(getOfficeExtPhone())
                .primaryLocationId(getPrimaryLocationId())
                .requiresNewPassword(getRequiresNewPassword())
                .state(getState())
                .termsConditionId(getTermsConditionId())
                .tz(getTz())
                .uiPrefs(getUiPrefs())
                .username(getUsername())
                .userApiKey(getUserApiKey())
                .userHashKey(getUserHashKey())
                .userTypeId(getUserTypeId())
                .password(getPassword())
                .zip(getZip())
                .locationId(getLocationId())
                .contactApiId(getContactApiId())
                .primaryLocationApiId(getPrimaryLocationApiId())
                .statusId(getStatusId())
                .id(getId())
                .status(getStatus())
                .loginAttempts(getLoginAttempts())
                .lastLoginTs(getLastLoginTs())
                .createdTs(getCreatedTs())
                .modifiedTs(getModifiedTs())
                .createdUserId(getCreatedUserId())
                .termsAcceptedTs(getTermsAcceptedTs())
                .termsAgreeIp(getTermsAgreeIp())
                .currentDateTime(getCurrentDateTime());
        return builder;
    }

    /**
     * Class to build instances of {@link Sort12}.
     */
    public static class Builder {
        private AccountNumberEnum accountNumber;
        private AddressEnum address;
        private BrandingDomainUrlEnum brandingDomainUrl;
        private CellPhoneEnum cellPhone;
        private CityEnum city;
        private CompanyNameEnum companyName;
        private ContactIdEnum contactId;
        private DateOfBirthEnum dateOfBirth;
        private DomainIdEnum domainId;
        private EmailEnum email;
        private EmailTrxReceiptEnum emailTrxReceipt;
        private HomePhoneEnum homePhone;
        private FirstNameEnum firstName;
        private LastNameEnum lastName;
        private LocaleEnum locale;
        private OfficePhoneEnum officePhone;
        private OfficeExtPhoneEnum officeExtPhone;
        private PrimaryLocationIdEnum primaryLocationId;
        private RequiresNewPasswordEnum requiresNewPassword;
        private StateEnum state;
        private TermsConditionIdEnum termsConditionId;
        private TzEnum tz;
        private UiPrefs3Enum uiPrefs;
        private UsernameEnum username;
        private UserApiKeyEnum userApiKey;
        private UserHashKeyEnum userHashKey;
        private UserTypeId3Enum userTypeId;
        private PasswordEnum password;
        private ZipEnum zip;
        private LocationIdEnum locationId;
        private ContactApiIdEnum contactApiId;
        private PrimaryLocationApiIdEnum primaryLocationApiId;
        private StatusIdEnum statusId;
        private IdEnum id;
        private Status3Enum status;
        private LoginAttemptsEnum loginAttempts;
        private LastLoginTsEnum lastLoginTs;
        private CreatedTsEnum createdTs;
        private ModifiedTsEnum modifiedTs;
        private CreatedUserIdEnum createdUserId;
        private TermsAcceptedTsEnum termsAcceptedTs;
        private TermsAgreeIpEnum termsAgreeIp;
        private CurrentDateTimeEnum currentDateTime;



        /**
         * Setter for accountNumber.
         * @param  accountNumber  AccountNumberEnum value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(AccountNumberEnum accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  AddressEnum value for address.
         * @return Builder
         */
        public Builder address(AddressEnum address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for brandingDomainUrl.
         * @param  brandingDomainUrl  BrandingDomainUrlEnum value for brandingDomainUrl.
         * @return Builder
         */
        public Builder brandingDomainUrl(BrandingDomainUrlEnum brandingDomainUrl) {
            this.brandingDomainUrl = brandingDomainUrl;
            return this;
        }

        /**
         * Setter for cellPhone.
         * @param  cellPhone  CellPhoneEnum value for cellPhone.
         * @return Builder
         */
        public Builder cellPhone(CellPhoneEnum cellPhone) {
            this.cellPhone = cellPhone;
            return this;
        }

        /**
         * Setter for city.
         * @param  city  CityEnum value for city.
         * @return Builder
         */
        public Builder city(CityEnum city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for companyName.
         * @param  companyName  CompanyNameEnum value for companyName.
         * @return Builder
         */
        public Builder companyName(CompanyNameEnum companyName) {
            this.companyName = companyName;
            return this;
        }

        /**
         * Setter for contactId.
         * @param  contactId  ContactIdEnum value for contactId.
         * @return Builder
         */
        public Builder contactId(ContactIdEnum contactId) {
            this.contactId = contactId;
            return this;
        }

        /**
         * Setter for dateOfBirth.
         * @param  dateOfBirth  DateOfBirthEnum value for dateOfBirth.
         * @return Builder
         */
        public Builder dateOfBirth(DateOfBirthEnum dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        /**
         * Setter for domainId.
         * @param  domainId  DomainIdEnum value for domainId.
         * @return Builder
         */
        public Builder domainId(DomainIdEnum domainId) {
            this.domainId = domainId;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  EmailEnum value for email.
         * @return Builder
         */
        public Builder email(EmailEnum email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for emailTrxReceipt.
         * @param  emailTrxReceipt  EmailTrxReceiptEnum value for emailTrxReceipt.
         * @return Builder
         */
        public Builder emailTrxReceipt(EmailTrxReceiptEnum emailTrxReceipt) {
            this.emailTrxReceipt = emailTrxReceipt;
            return this;
        }

        /**
         * Setter for homePhone.
         * @param  homePhone  HomePhoneEnum value for homePhone.
         * @return Builder
         */
        public Builder homePhone(HomePhoneEnum homePhone) {
            this.homePhone = homePhone;
            return this;
        }

        /**
         * Setter for firstName.
         * @param  firstName  FirstNameEnum value for firstName.
         * @return Builder
         */
        public Builder firstName(FirstNameEnum firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * Setter for lastName.
         * @param  lastName  LastNameEnum value for lastName.
         * @return Builder
         */
        public Builder lastName(LastNameEnum lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * Setter for locale.
         * @param  locale  LocaleEnum value for locale.
         * @return Builder
         */
        public Builder locale(LocaleEnum locale) {
            this.locale = locale;
            return this;
        }

        /**
         * Setter for officePhone.
         * @param  officePhone  OfficePhoneEnum value for officePhone.
         * @return Builder
         */
        public Builder officePhone(OfficePhoneEnum officePhone) {
            this.officePhone = officePhone;
            return this;
        }

        /**
         * Setter for officeExtPhone.
         * @param  officeExtPhone  OfficeExtPhoneEnum value for officeExtPhone.
         * @return Builder
         */
        public Builder officeExtPhone(OfficeExtPhoneEnum officeExtPhone) {
            this.officeExtPhone = officeExtPhone;
            return this;
        }

        /**
         * Setter for primaryLocationId.
         * @param  primaryLocationId  PrimaryLocationIdEnum value for primaryLocationId.
         * @return Builder
         */
        public Builder primaryLocationId(PrimaryLocationIdEnum primaryLocationId) {
            this.primaryLocationId = primaryLocationId;
            return this;
        }

        /**
         * Setter for requiresNewPassword.
         * @param  requiresNewPassword  RequiresNewPasswordEnum value for requiresNewPassword.
         * @return Builder
         */
        public Builder requiresNewPassword(RequiresNewPasswordEnum requiresNewPassword) {
            this.requiresNewPassword = requiresNewPassword;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  StateEnum value for state.
         * @return Builder
         */
        public Builder state(StateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for termsConditionId.
         * @param  termsConditionId  TermsConditionIdEnum value for termsConditionId.
         * @return Builder
         */
        public Builder termsConditionId(TermsConditionIdEnum termsConditionId) {
            this.termsConditionId = termsConditionId;
            return this;
        }

        /**
         * Setter for tz.
         * @param  tz  TzEnum value for tz.
         * @return Builder
         */
        public Builder tz(TzEnum tz) {
            this.tz = tz;
            return this;
        }

        /**
         * Setter for uiPrefs.
         * @param  uiPrefs  UiPrefs3Enum value for uiPrefs.
         * @return Builder
         */
        public Builder uiPrefs(UiPrefs3Enum uiPrefs) {
            this.uiPrefs = uiPrefs;
            return this;
        }

        /**
         * Setter for username.
         * @param  username  UsernameEnum value for username.
         * @return Builder
         */
        public Builder username(UsernameEnum username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for userApiKey.
         * @param  userApiKey  UserApiKeyEnum value for userApiKey.
         * @return Builder
         */
        public Builder userApiKey(UserApiKeyEnum userApiKey) {
            this.userApiKey = userApiKey;
            return this;
        }

        /**
         * Setter for userHashKey.
         * @param  userHashKey  UserHashKeyEnum value for userHashKey.
         * @return Builder
         */
        public Builder userHashKey(UserHashKeyEnum userHashKey) {
            this.userHashKey = userHashKey;
            return this;
        }

        /**
         * Setter for userTypeId.
         * @param  userTypeId  UserTypeId3Enum value for userTypeId.
         * @return Builder
         */
        public Builder userTypeId(UserTypeId3Enum userTypeId) {
            this.userTypeId = userTypeId;
            return this;
        }

        /**
         * Setter for password.
         * @param  password  PasswordEnum value for password.
         * @return Builder
         */
        public Builder password(PasswordEnum password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for zip.
         * @param  zip  ZipEnum value for zip.
         * @return Builder
         */
        public Builder zip(ZipEnum zip) {
            this.zip = zip;
            return this;
        }

        /**
         * Setter for locationId.
         * @param  locationId  LocationIdEnum value for locationId.
         * @return Builder
         */
        public Builder locationId(LocationIdEnum locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for contactApiId.
         * @param  contactApiId  ContactApiIdEnum value for contactApiId.
         * @return Builder
         */
        public Builder contactApiId(ContactApiIdEnum contactApiId) {
            this.contactApiId = contactApiId;
            return this;
        }

        /**
         * Setter for primaryLocationApiId.
         * @param  primaryLocationApiId  PrimaryLocationApiIdEnum value for primaryLocationApiId.
         * @return Builder
         */
        public Builder primaryLocationApiId(PrimaryLocationApiIdEnum primaryLocationApiId) {
            this.primaryLocationApiId = primaryLocationApiId;
            return this;
        }

        /**
         * Setter for statusId.
         * @param  statusId  StatusIdEnum value for statusId.
         * @return Builder
         */
        public Builder statusId(StatusIdEnum statusId) {
            this.statusId = statusId;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  IdEnum value for id.
         * @return Builder
         */
        public Builder id(IdEnum id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  Status3Enum value for status.
         * @return Builder
         */
        public Builder status(Status3Enum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for loginAttempts.
         * @param  loginAttempts  LoginAttemptsEnum value for loginAttempts.
         * @return Builder
         */
        public Builder loginAttempts(LoginAttemptsEnum loginAttempts) {
            this.loginAttempts = loginAttempts;
            return this;
        }

        /**
         * Setter for lastLoginTs.
         * @param  lastLoginTs  LastLoginTsEnum value for lastLoginTs.
         * @return Builder
         */
        public Builder lastLoginTs(LastLoginTsEnum lastLoginTs) {
            this.lastLoginTs = lastLoginTs;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  CreatedTsEnum value for createdTs.
         * @return Builder
         */
        public Builder createdTs(CreatedTsEnum createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(ModifiedTsEnum modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for createdUserId.
         * @param  createdUserId  CreatedUserIdEnum value for createdUserId.
         * @return Builder
         */
        public Builder createdUserId(CreatedUserIdEnum createdUserId) {
            this.createdUserId = createdUserId;
            return this;
        }

        /**
         * Setter for termsAcceptedTs.
         * @param  termsAcceptedTs  TermsAcceptedTsEnum value for termsAcceptedTs.
         * @return Builder
         */
        public Builder termsAcceptedTs(TermsAcceptedTsEnum termsAcceptedTs) {
            this.termsAcceptedTs = termsAcceptedTs;
            return this;
        }

        /**
         * Setter for termsAgreeIp.
         * @param  termsAgreeIp  TermsAgreeIpEnum value for termsAgreeIp.
         * @return Builder
         */
        public Builder termsAgreeIp(TermsAgreeIpEnum termsAgreeIp) {
            this.termsAgreeIp = termsAgreeIp;
            return this;
        }

        /**
         * Setter for currentDateTime.
         * @param  currentDateTime  CurrentDateTimeEnum value for currentDateTime.
         * @return Builder
         */
        public Builder currentDateTime(CurrentDateTimeEnum currentDateTime) {
            this.currentDateTime = currentDateTime;
            return this;
        }

        /**
         * Builds a new {@link Sort12} object using the set fields.
         * @return {@link Sort12}
         */
        public Sort12 build() {
            return new Sort12(accountNumber, address, brandingDomainUrl, cellPhone, city,
                    companyName, contactId, dateOfBirth, domainId, email, emailTrxReceipt,
                    homePhone, firstName, lastName, locale, officePhone, officeExtPhone,
                    primaryLocationId, requiresNewPassword, state, termsConditionId, tz, uiPrefs,
                    username, userApiKey, userHashKey, userTypeId, password, zip, locationId,
                    contactApiId, primaryLocationApiId, statusId, id, status, loginAttempts,
                    lastLoginTs, createdTs, modifiedTs, createdUserId, termsAcceptedTs,
                    termsAgreeIp, currentDateTime);
        }
    }
}
