/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Sort2 type.
 */
public class Sort2 {
    private LocationIdEnum locationId;
    private TerminalIdEnum terminalId;
    private RequireSignatureEnum requireSignature;
    private DeviceTermApiIdEnum deviceTermApiId;
    private TermsConditionsEnum termsConditions;
    private CreatedTsEnum createdTs;
    private CreatedUserIdEnum createdUserId;
    private IdEnum id;
    private ModifiedTsEnum modifiedTs;
    private ReasonCodeIdEnum reasonCodeId;
    private SignatureEnum signature;

    /**
     * Default constructor.
     */
    public Sort2() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  LocationIdEnum value for locationId.
     * @param  terminalId  TerminalIdEnum value for terminalId.
     * @param  requireSignature  RequireSignatureEnum value for requireSignature.
     * @param  deviceTermApiId  DeviceTermApiIdEnum value for deviceTermApiId.
     * @param  termsConditions  TermsConditionsEnum value for termsConditions.
     * @param  createdTs  CreatedTsEnum value for createdTs.
     * @param  createdUserId  CreatedUserIdEnum value for createdUserId.
     * @param  id  IdEnum value for id.
     * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
     * @param  reasonCodeId  ReasonCodeIdEnum value for reasonCodeId.
     * @param  signature  SignatureEnum value for signature.
     */
    public Sort2(
            LocationIdEnum locationId,
            TerminalIdEnum terminalId,
            RequireSignatureEnum requireSignature,
            DeviceTermApiIdEnum deviceTermApiId,
            TermsConditionsEnum termsConditions,
            CreatedTsEnum createdTs,
            CreatedUserIdEnum createdUserId,
            IdEnum id,
            ModifiedTsEnum modifiedTs,
            ReasonCodeIdEnum reasonCodeId,
            SignatureEnum signature) {
        this.locationId = locationId;
        this.terminalId = terminalId;
        this.requireSignature = requireSignature;
        this.deviceTermApiId = deviceTermApiId;
        this.termsConditions = termsConditions;
        this.createdTs = createdTs;
        this.createdUserId = createdUserId;
        this.id = id;
        this.modifiedTs = modifiedTs;
        this.reasonCodeId = reasonCodeId;
        this.signature = signature;
    }

    /**
     * Getter for LocationId.
     * @return Returns the LocationIdEnum
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationIdEnum getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * @param locationId Value for LocationIdEnum
     */
    @JsonSetter("location_id")
    public void setLocationId(LocationIdEnum locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for TerminalId.
     * @return Returns the TerminalIdEnum
     */
    @JsonGetter("terminal_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TerminalIdEnum getTerminalId() {
        return terminalId;
    }

    /**
     * Setter for TerminalId.
     * @param terminalId Value for TerminalIdEnum
     */
    @JsonSetter("terminal_id")
    public void setTerminalId(TerminalIdEnum terminalId) {
        this.terminalId = terminalId;
    }

    /**
     * Getter for RequireSignature.
     * @return Returns the RequireSignatureEnum
     */
    @JsonGetter("require_signature")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RequireSignatureEnum getRequireSignature() {
        return requireSignature;
    }

    /**
     * Setter for RequireSignature.
     * @param requireSignature Value for RequireSignatureEnum
     */
    @JsonSetter("require_signature")
    public void setRequireSignature(RequireSignatureEnum requireSignature) {
        this.requireSignature = requireSignature;
    }

    /**
     * Getter for DeviceTermApiId.
     * @return Returns the DeviceTermApiIdEnum
     */
    @JsonGetter("device_term_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeviceTermApiIdEnum getDeviceTermApiId() {
        return deviceTermApiId;
    }

    /**
     * Setter for DeviceTermApiId.
     * @param deviceTermApiId Value for DeviceTermApiIdEnum
     */
    @JsonSetter("device_term_api_id")
    public void setDeviceTermApiId(DeviceTermApiIdEnum deviceTermApiId) {
        this.deviceTermApiId = deviceTermApiId;
    }

    /**
     * Getter for TermsConditions.
     * @return Returns the TermsConditionsEnum
     */
    @JsonGetter("terms_conditions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TermsConditionsEnum getTermsConditions() {
        return termsConditions;
    }

    /**
     * Setter for TermsConditions.
     * @param termsConditions Value for TermsConditionsEnum
     */
    @JsonSetter("terms_conditions")
    public void setTermsConditions(TermsConditionsEnum termsConditions) {
        this.termsConditions = termsConditions;
    }

    /**
     * Getter for CreatedTs.
     * @return Returns the CreatedTsEnum
     */
    @JsonGetter("created_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedTsEnum getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * @param createdTs Value for CreatedTsEnum
     */
    @JsonSetter("created_ts")
    public void setCreatedTs(CreatedTsEnum createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for CreatedUserId.
     * @return Returns the CreatedUserIdEnum
     */
    @JsonGetter("created_user_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedUserIdEnum getCreatedUserId() {
        return createdUserId;
    }

    /**
     * Setter for CreatedUserId.
     * @param createdUserId Value for CreatedUserIdEnum
     */
    @JsonSetter("created_user_id")
    public void setCreatedUserId(CreatedUserIdEnum createdUserId) {
        this.createdUserId = createdUserId;
    }

    /**
     * Getter for Id.
     * @return Returns the IdEnum
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdEnum getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for IdEnum
     */
    @JsonSetter("id")
    public void setId(IdEnum id) {
        this.id = id;
    }

    /**
     * Getter for ModifiedTs.
     * @return Returns the ModifiedTsEnum
     */
    @JsonGetter("modified_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ModifiedTsEnum getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * @param modifiedTs Value for ModifiedTsEnum
     */
    @JsonSetter("modified_ts")
    public void setModifiedTs(ModifiedTsEnum modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for ReasonCodeId.
     * @return Returns the ReasonCodeIdEnum
     */
    @JsonGetter("reason_code_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ReasonCodeIdEnum getReasonCodeId() {
        return reasonCodeId;
    }

    /**
     * Setter for ReasonCodeId.
     * @param reasonCodeId Value for ReasonCodeIdEnum
     */
    @JsonSetter("reason_code_id")
    public void setReasonCodeId(ReasonCodeIdEnum reasonCodeId) {
        this.reasonCodeId = reasonCodeId;
    }

    /**
     * Getter for Signature.
     * @return Returns the SignatureEnum
     */
    @JsonGetter("signature")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SignatureEnum getSignature() {
        return signature;
    }

    /**
     * Setter for Signature.
     * @param signature Value for SignatureEnum
     */
    @JsonSetter("signature")
    public void setSignature(SignatureEnum signature) {
        this.signature = signature;
    }

    /**
     * Converts this Sort2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Sort2 [" + "locationId=" + locationId + ", terminalId=" + terminalId
                + ", requireSignature=" + requireSignature + ", deviceTermApiId=" + deviceTermApiId
                + ", termsConditions=" + termsConditions + ", createdTs=" + createdTs
                + ", createdUserId=" + createdUserId + ", id=" + id + ", modifiedTs=" + modifiedTs
                + ", reasonCodeId=" + reasonCodeId + ", signature=" + signature + "]";
    }

    /**
     * Builds a new {@link Sort2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Sort2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .locationId(getLocationId())
                .terminalId(getTerminalId())
                .requireSignature(getRequireSignature())
                .deviceTermApiId(getDeviceTermApiId())
                .termsConditions(getTermsConditions())
                .createdTs(getCreatedTs())
                .createdUserId(getCreatedUserId())
                .id(getId())
                .modifiedTs(getModifiedTs())
                .reasonCodeId(getReasonCodeId())
                .signature(getSignature());
        return builder;
    }

    /**
     * Class to build instances of {@link Sort2}.
     */
    public static class Builder {
        private LocationIdEnum locationId;
        private TerminalIdEnum terminalId;
        private RequireSignatureEnum requireSignature;
        private DeviceTermApiIdEnum deviceTermApiId;
        private TermsConditionsEnum termsConditions;
        private CreatedTsEnum createdTs;
        private CreatedUserIdEnum createdUserId;
        private IdEnum id;
        private ModifiedTsEnum modifiedTs;
        private ReasonCodeIdEnum reasonCodeId;
        private SignatureEnum signature;



        /**
         * Setter for locationId.
         * @param  locationId  LocationIdEnum value for locationId.
         * @return Builder
         */
        public Builder locationId(LocationIdEnum locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for terminalId.
         * @param  terminalId  TerminalIdEnum value for terminalId.
         * @return Builder
         */
        public Builder terminalId(TerminalIdEnum terminalId) {
            this.terminalId = terminalId;
            return this;
        }

        /**
         * Setter for requireSignature.
         * @param  requireSignature  RequireSignatureEnum value for requireSignature.
         * @return Builder
         */
        public Builder requireSignature(RequireSignatureEnum requireSignature) {
            this.requireSignature = requireSignature;
            return this;
        }

        /**
         * Setter for deviceTermApiId.
         * @param  deviceTermApiId  DeviceTermApiIdEnum value for deviceTermApiId.
         * @return Builder
         */
        public Builder deviceTermApiId(DeviceTermApiIdEnum deviceTermApiId) {
            this.deviceTermApiId = deviceTermApiId;
            return this;
        }

        /**
         * Setter for termsConditions.
         * @param  termsConditions  TermsConditionsEnum value for termsConditions.
         * @return Builder
         */
        public Builder termsConditions(TermsConditionsEnum termsConditions) {
            this.termsConditions = termsConditions;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  CreatedTsEnum value for createdTs.
         * @return Builder
         */
        public Builder createdTs(CreatedTsEnum createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for createdUserId.
         * @param  createdUserId  CreatedUserIdEnum value for createdUserId.
         * @return Builder
         */
        public Builder createdUserId(CreatedUserIdEnum createdUserId) {
            this.createdUserId = createdUserId;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  IdEnum value for id.
         * @return Builder
         */
        public Builder id(IdEnum id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(ModifiedTsEnum modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for reasonCodeId.
         * @param  reasonCodeId  ReasonCodeIdEnum value for reasonCodeId.
         * @return Builder
         */
        public Builder reasonCodeId(ReasonCodeIdEnum reasonCodeId) {
            this.reasonCodeId = reasonCodeId;
            return this;
        }

        /**
         * Setter for signature.
         * @param  signature  SignatureEnum value for signature.
         * @return Builder
         */
        public Builder signature(SignatureEnum signature) {
            this.signature = signature;
            return this;
        }

        /**
         * Builds a new {@link Sort2} object using the set fields.
         * @return {@link Sort2}
         */
        public Sort2 build() {
            return new Sort2(locationId, terminalId, requireSignature, deviceTermApiId,
                    termsConditions, createdTs, createdUserId, id, modifiedTs, reasonCodeId,
                    signature);
        }
    }
}
