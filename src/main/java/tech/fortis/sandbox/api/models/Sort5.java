/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Sort5 type.
 */
public class Sort5 {
    private LocationIdEnum locationId;
    private TitleEnum title;
    private CcProductTransactionIdEnum ccProductTransactionId;
    private AchProductTransactionIdEnum achProductTransactionId;
    private DueDateEnum dueDate;
    private ItemList3Enum itemList;
    private AllowOverpaymentEnum allowOverpayment;
    private EmailEnum email;
    private ContactIdEnum contactId;
    private ContactApiIdEnum contactApiId;
    private CustomerIdEnum customerId;
    private ExpireDateEnum expireDate;
    private AllowPartialPayEnum allowPartialPay;
    private AttachFilesToEmailEnum attachFilesToEmail;
    private SendEmailEnum sendEmail;
    private InvoiceNumberEnum invoiceNumber;
    private ItemHeaderEnum itemHeader;
    private ItemFooterEnum itemFooter;
    private AmountDueEnum amountDue;
    private NotificationEmailEnum notificationEmail;
    private PaymentStatusIdEnum paymentStatusId;
    private StatusIdEnum statusId;
    private NoteEnum note;
    private NotificationDaysBeforeDueDateEnum notificationDaysBeforeDueDate;
    private NotificationDaysAfterDueDateEnum notificationDaysAfterDueDate;
    private NotificationOnDueDateEnum notificationOnDueDate;
    private SendTextToPayEnum sendTextToPay;
    private FilesEnum files;
    private RemainingBalanceEnum remainingBalance;
    private SinglePaymentMinAmountEnum singlePaymentMinAmount;
    private SinglePaymentMaxAmountEnum singlePaymentMaxAmount;
    private CellPhoneEnum cellPhone;
    private IdEnum id;
    private CreatedTsEnum createdTs;
    private ModifiedTsEnum modifiedTs;
    private CreatedUserIdEnum createdUserId;
    private ModifiedUserIdEnum modifiedUserId;
    private Active4Enum active;
    private IsActiveEnum isActive;

    /**
     * Default constructor.
     */
    public Sort5() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  LocationIdEnum value for locationId.
     * @param  title  TitleEnum value for title.
     * @param  ccProductTransactionId  CcProductTransactionIdEnum value for ccProductTransactionId.
     * @param  achProductTransactionId  AchProductTransactionIdEnum value for
     *         achProductTransactionId.
     * @param  dueDate  DueDateEnum value for dueDate.
     * @param  itemList  ItemList3Enum value for itemList.
     * @param  allowOverpayment  AllowOverpaymentEnum value for allowOverpayment.
     * @param  email  EmailEnum value for email.
     * @param  contactId  ContactIdEnum value for contactId.
     * @param  contactApiId  ContactApiIdEnum value for contactApiId.
     * @param  customerId  CustomerIdEnum value for customerId.
     * @param  expireDate  ExpireDateEnum value for expireDate.
     * @param  allowPartialPay  AllowPartialPayEnum value for allowPartialPay.
     * @param  attachFilesToEmail  AttachFilesToEmailEnum value for attachFilesToEmail.
     * @param  sendEmail  SendEmailEnum value for sendEmail.
     * @param  invoiceNumber  InvoiceNumberEnum value for invoiceNumber.
     * @param  itemHeader  ItemHeaderEnum value for itemHeader.
     * @param  itemFooter  ItemFooterEnum value for itemFooter.
     * @param  amountDue  AmountDueEnum value for amountDue.
     * @param  notificationEmail  NotificationEmailEnum value for notificationEmail.
     * @param  paymentStatusId  PaymentStatusIdEnum value for paymentStatusId.
     * @param  statusId  StatusIdEnum value for statusId.
     * @param  note  NoteEnum value for note.
     * @param  notificationDaysBeforeDueDate  NotificationDaysBeforeDueDateEnum value for
     *         notificationDaysBeforeDueDate.
     * @param  notificationDaysAfterDueDate  NotificationDaysAfterDueDateEnum value for
     *         notificationDaysAfterDueDate.
     * @param  notificationOnDueDate  NotificationOnDueDateEnum value for notificationOnDueDate.
     * @param  sendTextToPay  SendTextToPayEnum value for sendTextToPay.
     * @param  files  FilesEnum value for files.
     * @param  remainingBalance  RemainingBalanceEnum value for remainingBalance.
     * @param  singlePaymentMinAmount  SinglePaymentMinAmountEnum value for singlePaymentMinAmount.
     * @param  singlePaymentMaxAmount  SinglePaymentMaxAmountEnum value for singlePaymentMaxAmount.
     * @param  cellPhone  CellPhoneEnum value for cellPhone.
     * @param  id  IdEnum value for id.
     * @param  createdTs  CreatedTsEnum value for createdTs.
     * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
     * @param  createdUserId  CreatedUserIdEnum value for createdUserId.
     * @param  modifiedUserId  ModifiedUserIdEnum value for modifiedUserId.
     * @param  active  Active4Enum value for active.
     * @param  isActive  IsActiveEnum value for isActive.
     */
    public Sort5(
            LocationIdEnum locationId,
            TitleEnum title,
            CcProductTransactionIdEnum ccProductTransactionId,
            AchProductTransactionIdEnum achProductTransactionId,
            DueDateEnum dueDate,
            ItemList3Enum itemList,
            AllowOverpaymentEnum allowOverpayment,
            EmailEnum email,
            ContactIdEnum contactId,
            ContactApiIdEnum contactApiId,
            CustomerIdEnum customerId,
            ExpireDateEnum expireDate,
            AllowPartialPayEnum allowPartialPay,
            AttachFilesToEmailEnum attachFilesToEmail,
            SendEmailEnum sendEmail,
            InvoiceNumberEnum invoiceNumber,
            ItemHeaderEnum itemHeader,
            ItemFooterEnum itemFooter,
            AmountDueEnum amountDue,
            NotificationEmailEnum notificationEmail,
            PaymentStatusIdEnum paymentStatusId,
            StatusIdEnum statusId,
            NoteEnum note,
            NotificationDaysBeforeDueDateEnum notificationDaysBeforeDueDate,
            NotificationDaysAfterDueDateEnum notificationDaysAfterDueDate,
            NotificationOnDueDateEnum notificationOnDueDate,
            SendTextToPayEnum sendTextToPay,
            FilesEnum files,
            RemainingBalanceEnum remainingBalance,
            SinglePaymentMinAmountEnum singlePaymentMinAmount,
            SinglePaymentMaxAmountEnum singlePaymentMaxAmount,
            CellPhoneEnum cellPhone,
            IdEnum id,
            CreatedTsEnum createdTs,
            ModifiedTsEnum modifiedTs,
            CreatedUserIdEnum createdUserId,
            ModifiedUserIdEnum modifiedUserId,
            Active4Enum active,
            IsActiveEnum isActive) {
        this.locationId = locationId;
        this.title = title;
        this.ccProductTransactionId = ccProductTransactionId;
        this.achProductTransactionId = achProductTransactionId;
        this.dueDate = dueDate;
        this.itemList = itemList;
        this.allowOverpayment = allowOverpayment;
        this.email = email;
        this.contactId = contactId;
        this.contactApiId = contactApiId;
        this.customerId = customerId;
        this.expireDate = expireDate;
        this.allowPartialPay = allowPartialPay;
        this.attachFilesToEmail = attachFilesToEmail;
        this.sendEmail = sendEmail;
        this.invoiceNumber = invoiceNumber;
        this.itemHeader = itemHeader;
        this.itemFooter = itemFooter;
        this.amountDue = amountDue;
        this.notificationEmail = notificationEmail;
        this.paymentStatusId = paymentStatusId;
        this.statusId = statusId;
        this.note = note;
        this.notificationDaysBeforeDueDate = notificationDaysBeforeDueDate;
        this.notificationDaysAfterDueDate = notificationDaysAfterDueDate;
        this.notificationOnDueDate = notificationOnDueDate;
        this.sendTextToPay = sendTextToPay;
        this.files = files;
        this.remainingBalance = remainingBalance;
        this.singlePaymentMinAmount = singlePaymentMinAmount;
        this.singlePaymentMaxAmount = singlePaymentMaxAmount;
        this.cellPhone = cellPhone;
        this.id = id;
        this.createdTs = createdTs;
        this.modifiedTs = modifiedTs;
        this.createdUserId = createdUserId;
        this.modifiedUserId = modifiedUserId;
        this.active = active;
        this.isActive = isActive;
    }

    /**
     * Getter for LocationId.
     * @return Returns the LocationIdEnum
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LocationIdEnum getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * @param locationId Value for LocationIdEnum
     */
    @JsonSetter("location_id")
    public void setLocationId(LocationIdEnum locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for Title.
     * @return Returns the TitleEnum
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TitleEnum getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for TitleEnum
     */
    @JsonSetter("title")
    public void setTitle(TitleEnum title) {
        this.title = title;
    }

    /**
     * Getter for CcProductTransactionId.
     * @return Returns the CcProductTransactionIdEnum
     */
    @JsonGetter("cc_product_transaction_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CcProductTransactionIdEnum getCcProductTransactionId() {
        return ccProductTransactionId;
    }

    /**
     * Setter for CcProductTransactionId.
     * @param ccProductTransactionId Value for CcProductTransactionIdEnum
     */
    @JsonSetter("cc_product_transaction_id")
    public void setCcProductTransactionId(CcProductTransactionIdEnum ccProductTransactionId) {
        this.ccProductTransactionId = ccProductTransactionId;
    }

    /**
     * Getter for AchProductTransactionId.
     * @return Returns the AchProductTransactionIdEnum
     */
    @JsonGetter("ach_product_transaction_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AchProductTransactionIdEnum getAchProductTransactionId() {
        return achProductTransactionId;
    }

    /**
     * Setter for AchProductTransactionId.
     * @param achProductTransactionId Value for AchProductTransactionIdEnum
     */
    @JsonSetter("ach_product_transaction_id")
    public void setAchProductTransactionId(AchProductTransactionIdEnum achProductTransactionId) {
        this.achProductTransactionId = achProductTransactionId;
    }

    /**
     * Getter for DueDate.
     * @return Returns the DueDateEnum
     */
    @JsonGetter("due_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DueDateEnum getDueDate() {
        return dueDate;
    }

    /**
     * Setter for DueDate.
     * @param dueDate Value for DueDateEnum
     */
    @JsonSetter("due_date")
    public void setDueDate(DueDateEnum dueDate) {
        this.dueDate = dueDate;
    }

    /**
     * Getter for ItemList.
     * @return Returns the ItemList3Enum
     */
    @JsonGetter("item_list")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ItemList3Enum getItemList() {
        return itemList;
    }

    /**
     * Setter for ItemList.
     * @param itemList Value for ItemList3Enum
     */
    @JsonSetter("item_list")
    public void setItemList(ItemList3Enum itemList) {
        this.itemList = itemList;
    }

    /**
     * Getter for AllowOverpayment.
     * @return Returns the AllowOverpaymentEnum
     */
    @JsonGetter("allow_overpayment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowOverpaymentEnum getAllowOverpayment() {
        return allowOverpayment;
    }

    /**
     * Setter for AllowOverpayment.
     * @param allowOverpayment Value for AllowOverpaymentEnum
     */
    @JsonSetter("allow_overpayment")
    public void setAllowOverpayment(AllowOverpaymentEnum allowOverpayment) {
        this.allowOverpayment = allowOverpayment;
    }

    /**
     * Getter for Email.
     * @return Returns the EmailEnum
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EmailEnum getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * @param email Value for EmailEnum
     */
    @JsonSetter("email")
    public void setEmail(EmailEnum email) {
        this.email = email;
    }

    /**
     * Getter for ContactId.
     * @return Returns the ContactIdEnum
     */
    @JsonGetter("contact_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ContactIdEnum getContactId() {
        return contactId;
    }

    /**
     * Setter for ContactId.
     * @param contactId Value for ContactIdEnum
     */
    @JsonSetter("contact_id")
    public void setContactId(ContactIdEnum contactId) {
        this.contactId = contactId;
    }

    /**
     * Getter for ContactApiId.
     * @return Returns the ContactApiIdEnum
     */
    @JsonGetter("contact_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ContactApiIdEnum getContactApiId() {
        return contactApiId;
    }

    /**
     * Setter for ContactApiId.
     * @param contactApiId Value for ContactApiIdEnum
     */
    @JsonSetter("contact_api_id")
    public void setContactApiId(ContactApiIdEnum contactApiId) {
        this.contactApiId = contactApiId;
    }

    /**
     * Getter for CustomerId.
     * @return Returns the CustomerIdEnum
     */
    @JsonGetter("customer_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CustomerIdEnum getCustomerId() {
        return customerId;
    }

    /**
     * Setter for CustomerId.
     * @param customerId Value for CustomerIdEnum
     */
    @JsonSetter("customer_id")
    public void setCustomerId(CustomerIdEnum customerId) {
        this.customerId = customerId;
    }

    /**
     * Getter for ExpireDate.
     * @return Returns the ExpireDateEnum
     */
    @JsonGetter("expire_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ExpireDateEnum getExpireDate() {
        return expireDate;
    }

    /**
     * Setter for ExpireDate.
     * @param expireDate Value for ExpireDateEnum
     */
    @JsonSetter("expire_date")
    public void setExpireDate(ExpireDateEnum expireDate) {
        this.expireDate = expireDate;
    }

    /**
     * Getter for AllowPartialPay.
     * @return Returns the AllowPartialPayEnum
     */
    @JsonGetter("allow_partial_pay")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowPartialPayEnum getAllowPartialPay() {
        return allowPartialPay;
    }

    /**
     * Setter for AllowPartialPay.
     * @param allowPartialPay Value for AllowPartialPayEnum
     */
    @JsonSetter("allow_partial_pay")
    public void setAllowPartialPay(AllowPartialPayEnum allowPartialPay) {
        this.allowPartialPay = allowPartialPay;
    }

    /**
     * Getter for AttachFilesToEmail.
     * @return Returns the AttachFilesToEmailEnum
     */
    @JsonGetter("attach_files_to_email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AttachFilesToEmailEnum getAttachFilesToEmail() {
        return attachFilesToEmail;
    }

    /**
     * Setter for AttachFilesToEmail.
     * @param attachFilesToEmail Value for AttachFilesToEmailEnum
     */
    @JsonSetter("attach_files_to_email")
    public void setAttachFilesToEmail(AttachFilesToEmailEnum attachFilesToEmail) {
        this.attachFilesToEmail = attachFilesToEmail;
    }

    /**
     * Getter for SendEmail.
     * @return Returns the SendEmailEnum
     */
    @JsonGetter("send_email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SendEmailEnum getSendEmail() {
        return sendEmail;
    }

    /**
     * Setter for SendEmail.
     * @param sendEmail Value for SendEmailEnum
     */
    @JsonSetter("send_email")
    public void setSendEmail(SendEmailEnum sendEmail) {
        this.sendEmail = sendEmail;
    }

    /**
     * Getter for InvoiceNumber.
     * @return Returns the InvoiceNumberEnum
     */
    @JsonGetter("invoice_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public InvoiceNumberEnum getInvoiceNumber() {
        return invoiceNumber;
    }

    /**
     * Setter for InvoiceNumber.
     * @param invoiceNumber Value for InvoiceNumberEnum
     */
    @JsonSetter("invoice_number")
    public void setInvoiceNumber(InvoiceNumberEnum invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
    }

    /**
     * Getter for ItemHeader.
     * @return Returns the ItemHeaderEnum
     */
    @JsonGetter("item_header")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ItemHeaderEnum getItemHeader() {
        return itemHeader;
    }

    /**
     * Setter for ItemHeader.
     * @param itemHeader Value for ItemHeaderEnum
     */
    @JsonSetter("item_header")
    public void setItemHeader(ItemHeaderEnum itemHeader) {
        this.itemHeader = itemHeader;
    }

    /**
     * Getter for ItemFooter.
     * @return Returns the ItemFooterEnum
     */
    @JsonGetter("item_footer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ItemFooterEnum getItemFooter() {
        return itemFooter;
    }

    /**
     * Setter for ItemFooter.
     * @param itemFooter Value for ItemFooterEnum
     */
    @JsonSetter("item_footer")
    public void setItemFooter(ItemFooterEnum itemFooter) {
        this.itemFooter = itemFooter;
    }

    /**
     * Getter for AmountDue.
     * @return Returns the AmountDueEnum
     */
    @JsonGetter("amount_due")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AmountDueEnum getAmountDue() {
        return amountDue;
    }

    /**
     * Setter for AmountDue.
     * @param amountDue Value for AmountDueEnum
     */
    @JsonSetter("amount_due")
    public void setAmountDue(AmountDueEnum amountDue) {
        this.amountDue = amountDue;
    }

    /**
     * Getter for NotificationEmail.
     * @return Returns the NotificationEmailEnum
     */
    @JsonGetter("notification_email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NotificationEmailEnum getNotificationEmail() {
        return notificationEmail;
    }

    /**
     * Setter for NotificationEmail.
     * @param notificationEmail Value for NotificationEmailEnum
     */
    @JsonSetter("notification_email")
    public void setNotificationEmail(NotificationEmailEnum notificationEmail) {
        this.notificationEmail = notificationEmail;
    }

    /**
     * Getter for PaymentStatusId.
     * @return Returns the PaymentStatusIdEnum
     */
    @JsonGetter("payment_status_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PaymentStatusIdEnum getPaymentStatusId() {
        return paymentStatusId;
    }

    /**
     * Setter for PaymentStatusId.
     * @param paymentStatusId Value for PaymentStatusIdEnum
     */
    @JsonSetter("payment_status_id")
    public void setPaymentStatusId(PaymentStatusIdEnum paymentStatusId) {
        this.paymentStatusId = paymentStatusId;
    }

    /**
     * Getter for StatusId.
     * @return Returns the StatusIdEnum
     */
    @JsonGetter("status_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public StatusIdEnum getStatusId() {
        return statusId;
    }

    /**
     * Setter for StatusId.
     * @param statusId Value for StatusIdEnum
     */
    @JsonSetter("status_id")
    public void setStatusId(StatusIdEnum statusId) {
        this.statusId = statusId;
    }

    /**
     * Getter for Note.
     * @return Returns the NoteEnum
     */
    @JsonGetter("note")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NoteEnum getNote() {
        return note;
    }

    /**
     * Setter for Note.
     * @param note Value for NoteEnum
     */
    @JsonSetter("note")
    public void setNote(NoteEnum note) {
        this.note = note;
    }

    /**
     * Getter for NotificationDaysBeforeDueDate.
     * @return Returns the NotificationDaysBeforeDueDateEnum
     */
    @JsonGetter("notification_days_before_due_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NotificationDaysBeforeDueDateEnum getNotificationDaysBeforeDueDate() {
        return notificationDaysBeforeDueDate;
    }

    /**
     * Setter for NotificationDaysBeforeDueDate.
     * @param notificationDaysBeforeDueDate Value for NotificationDaysBeforeDueDateEnum
     */
    @JsonSetter("notification_days_before_due_date")
    public void setNotificationDaysBeforeDueDate(NotificationDaysBeforeDueDateEnum notificationDaysBeforeDueDate) {
        this.notificationDaysBeforeDueDate = notificationDaysBeforeDueDate;
    }

    /**
     * Getter for NotificationDaysAfterDueDate.
     * @return Returns the NotificationDaysAfterDueDateEnum
     */
    @JsonGetter("notification_days_after_due_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NotificationDaysAfterDueDateEnum getNotificationDaysAfterDueDate() {
        return notificationDaysAfterDueDate;
    }

    /**
     * Setter for NotificationDaysAfterDueDate.
     * @param notificationDaysAfterDueDate Value for NotificationDaysAfterDueDateEnum
     */
    @JsonSetter("notification_days_after_due_date")
    public void setNotificationDaysAfterDueDate(NotificationDaysAfterDueDateEnum notificationDaysAfterDueDate) {
        this.notificationDaysAfterDueDate = notificationDaysAfterDueDate;
    }

    /**
     * Getter for NotificationOnDueDate.
     * @return Returns the NotificationOnDueDateEnum
     */
    @JsonGetter("notification_on_due_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public NotificationOnDueDateEnum getNotificationOnDueDate() {
        return notificationOnDueDate;
    }

    /**
     * Setter for NotificationOnDueDate.
     * @param notificationOnDueDate Value for NotificationOnDueDateEnum
     */
    @JsonSetter("notification_on_due_date")
    public void setNotificationOnDueDate(NotificationOnDueDateEnum notificationOnDueDate) {
        this.notificationOnDueDate = notificationOnDueDate;
    }

    /**
     * Getter for SendTextToPay.
     * @return Returns the SendTextToPayEnum
     */
    @JsonGetter("send_text_to_pay")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SendTextToPayEnum getSendTextToPay() {
        return sendTextToPay;
    }

    /**
     * Setter for SendTextToPay.
     * @param sendTextToPay Value for SendTextToPayEnum
     */
    @JsonSetter("send_text_to_pay")
    public void setSendTextToPay(SendTextToPayEnum sendTextToPay) {
        this.sendTextToPay = sendTextToPay;
    }

    /**
     * Getter for Files.
     * @return Returns the FilesEnum
     */
    @JsonGetter("files")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FilesEnum getFiles() {
        return files;
    }

    /**
     * Setter for Files.
     * @param files Value for FilesEnum
     */
    @JsonSetter("files")
    public void setFiles(FilesEnum files) {
        this.files = files;
    }

    /**
     * Getter for RemainingBalance.
     * @return Returns the RemainingBalanceEnum
     */
    @JsonGetter("remaining_balance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RemainingBalanceEnum getRemainingBalance() {
        return remainingBalance;
    }

    /**
     * Setter for RemainingBalance.
     * @param remainingBalance Value for RemainingBalanceEnum
     */
    @JsonSetter("remaining_balance")
    public void setRemainingBalance(RemainingBalanceEnum remainingBalance) {
        this.remainingBalance = remainingBalance;
    }

    /**
     * Getter for SinglePaymentMinAmount.
     * @return Returns the SinglePaymentMinAmountEnum
     */
    @JsonGetter("single_payment_min_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SinglePaymentMinAmountEnum getSinglePaymentMinAmount() {
        return singlePaymentMinAmount;
    }

    /**
     * Setter for SinglePaymentMinAmount.
     * @param singlePaymentMinAmount Value for SinglePaymentMinAmountEnum
     */
    @JsonSetter("single_payment_min_amount")
    public void setSinglePaymentMinAmount(SinglePaymentMinAmountEnum singlePaymentMinAmount) {
        this.singlePaymentMinAmount = singlePaymentMinAmount;
    }

    /**
     * Getter for SinglePaymentMaxAmount.
     * @return Returns the SinglePaymentMaxAmountEnum
     */
    @JsonGetter("single_payment_max_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SinglePaymentMaxAmountEnum getSinglePaymentMaxAmount() {
        return singlePaymentMaxAmount;
    }

    /**
     * Setter for SinglePaymentMaxAmount.
     * @param singlePaymentMaxAmount Value for SinglePaymentMaxAmountEnum
     */
    @JsonSetter("single_payment_max_amount")
    public void setSinglePaymentMaxAmount(SinglePaymentMaxAmountEnum singlePaymentMaxAmount) {
        this.singlePaymentMaxAmount = singlePaymentMaxAmount;
    }

    /**
     * Getter for CellPhone.
     * @return Returns the CellPhoneEnum
     */
    @JsonGetter("cell_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CellPhoneEnum getCellPhone() {
        return cellPhone;
    }

    /**
     * Setter for CellPhone.
     * @param cellPhone Value for CellPhoneEnum
     */
    @JsonSetter("cell_phone")
    public void setCellPhone(CellPhoneEnum cellPhone) {
        this.cellPhone = cellPhone;
    }

    /**
     * Getter for Id.
     * @return Returns the IdEnum
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdEnum getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for IdEnum
     */
    @JsonSetter("id")
    public void setId(IdEnum id) {
        this.id = id;
    }

    /**
     * Getter for CreatedTs.
     * @return Returns the CreatedTsEnum
     */
    @JsonGetter("created_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedTsEnum getCreatedTs() {
        return createdTs;
    }

    /**
     * Setter for CreatedTs.
     * @param createdTs Value for CreatedTsEnum
     */
    @JsonSetter("created_ts")
    public void setCreatedTs(CreatedTsEnum createdTs) {
        this.createdTs = createdTs;
    }

    /**
     * Getter for ModifiedTs.
     * @return Returns the ModifiedTsEnum
     */
    @JsonGetter("modified_ts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ModifiedTsEnum getModifiedTs() {
        return modifiedTs;
    }

    /**
     * Setter for ModifiedTs.
     * @param modifiedTs Value for ModifiedTsEnum
     */
    @JsonSetter("modified_ts")
    public void setModifiedTs(ModifiedTsEnum modifiedTs) {
        this.modifiedTs = modifiedTs;
    }

    /**
     * Getter for CreatedUserId.
     * @return Returns the CreatedUserIdEnum
     */
    @JsonGetter("created_user_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatedUserIdEnum getCreatedUserId() {
        return createdUserId;
    }

    /**
     * Setter for CreatedUserId.
     * @param createdUserId Value for CreatedUserIdEnum
     */
    @JsonSetter("created_user_id")
    public void setCreatedUserId(CreatedUserIdEnum createdUserId) {
        this.createdUserId = createdUserId;
    }

    /**
     * Getter for ModifiedUserId.
     * @return Returns the ModifiedUserIdEnum
     */
    @JsonGetter("modified_user_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ModifiedUserIdEnum getModifiedUserId() {
        return modifiedUserId;
    }

    /**
     * Setter for ModifiedUserId.
     * @param modifiedUserId Value for ModifiedUserIdEnum
     */
    @JsonSetter("modified_user_id")
    public void setModifiedUserId(ModifiedUserIdEnum modifiedUserId) {
        this.modifiedUserId = modifiedUserId;
    }

    /**
     * Getter for Active.
     * @return Returns the Active4Enum
     */
    @JsonGetter("active")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Active4Enum getActive() {
        return active;
    }

    /**
     * Setter for Active.
     * @param active Value for Active4Enum
     */
    @JsonSetter("active")
    public void setActive(Active4Enum active) {
        this.active = active;
    }

    /**
     * Getter for IsActive.
     * @return Returns the IsActiveEnum
     */
    @JsonGetter("is_active")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IsActiveEnum getIsActive() {
        return isActive;
    }

    /**
     * Setter for IsActive.
     * @param isActive Value for IsActiveEnum
     */
    @JsonSetter("is_active")
    public void setIsActive(IsActiveEnum isActive) {
        this.isActive = isActive;
    }

    /**
     * Converts this Sort5 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Sort5 [" + "locationId=" + locationId + ", title=" + title
                + ", ccProductTransactionId=" + ccProductTransactionId
                + ", achProductTransactionId=" + achProductTransactionId + ", dueDate=" + dueDate
                + ", itemList=" + itemList + ", allowOverpayment=" + allowOverpayment + ", email="
                + email + ", contactId=" + contactId + ", contactApiId=" + contactApiId
                + ", customerId=" + customerId + ", expireDate=" + expireDate + ", allowPartialPay="
                + allowPartialPay + ", attachFilesToEmail=" + attachFilesToEmail + ", sendEmail="
                + sendEmail + ", invoiceNumber=" + invoiceNumber + ", itemHeader=" + itemHeader
                + ", itemFooter=" + itemFooter + ", amountDue=" + amountDue + ", notificationEmail="
                + notificationEmail + ", paymentStatusId=" + paymentStatusId + ", statusId="
                + statusId + ", note=" + note + ", notificationDaysBeforeDueDate="
                + notificationDaysBeforeDueDate + ", notificationDaysAfterDueDate="
                + notificationDaysAfterDueDate + ", notificationOnDueDate=" + notificationOnDueDate
                + ", sendTextToPay=" + sendTextToPay + ", files=" + files + ", remainingBalance="
                + remainingBalance + ", singlePaymentMinAmount=" + singlePaymentMinAmount
                + ", singlePaymentMaxAmount=" + singlePaymentMaxAmount + ", cellPhone=" + cellPhone
                + ", id=" + id + ", createdTs=" + createdTs + ", modifiedTs=" + modifiedTs
                + ", createdUserId=" + createdUserId + ", modifiedUserId=" + modifiedUserId
                + ", active=" + active + ", isActive=" + isActive + "]";
    }

    /**
     * Builds a new {@link Sort5.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Sort5.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .locationId(getLocationId())
                .title(getTitle())
                .ccProductTransactionId(getCcProductTransactionId())
                .achProductTransactionId(getAchProductTransactionId())
                .dueDate(getDueDate())
                .itemList(getItemList())
                .allowOverpayment(getAllowOverpayment())
                .email(getEmail())
                .contactId(getContactId())
                .contactApiId(getContactApiId())
                .customerId(getCustomerId())
                .expireDate(getExpireDate())
                .allowPartialPay(getAllowPartialPay())
                .attachFilesToEmail(getAttachFilesToEmail())
                .sendEmail(getSendEmail())
                .invoiceNumber(getInvoiceNumber())
                .itemHeader(getItemHeader())
                .itemFooter(getItemFooter())
                .amountDue(getAmountDue())
                .notificationEmail(getNotificationEmail())
                .paymentStatusId(getPaymentStatusId())
                .statusId(getStatusId())
                .note(getNote())
                .notificationDaysBeforeDueDate(getNotificationDaysBeforeDueDate())
                .notificationDaysAfterDueDate(getNotificationDaysAfterDueDate())
                .notificationOnDueDate(getNotificationOnDueDate())
                .sendTextToPay(getSendTextToPay())
                .files(getFiles())
                .remainingBalance(getRemainingBalance())
                .singlePaymentMinAmount(getSinglePaymentMinAmount())
                .singlePaymentMaxAmount(getSinglePaymentMaxAmount())
                .cellPhone(getCellPhone())
                .id(getId())
                .createdTs(getCreatedTs())
                .modifiedTs(getModifiedTs())
                .createdUserId(getCreatedUserId())
                .modifiedUserId(getModifiedUserId())
                .active(getActive())
                .isActive(getIsActive());
        return builder;
    }

    /**
     * Class to build instances of {@link Sort5}.
     */
    public static class Builder {
        private LocationIdEnum locationId;
        private TitleEnum title;
        private CcProductTransactionIdEnum ccProductTransactionId;
        private AchProductTransactionIdEnum achProductTransactionId;
        private DueDateEnum dueDate;
        private ItemList3Enum itemList;
        private AllowOverpaymentEnum allowOverpayment;
        private EmailEnum email;
        private ContactIdEnum contactId;
        private ContactApiIdEnum contactApiId;
        private CustomerIdEnum customerId;
        private ExpireDateEnum expireDate;
        private AllowPartialPayEnum allowPartialPay;
        private AttachFilesToEmailEnum attachFilesToEmail;
        private SendEmailEnum sendEmail;
        private InvoiceNumberEnum invoiceNumber;
        private ItemHeaderEnum itemHeader;
        private ItemFooterEnum itemFooter;
        private AmountDueEnum amountDue;
        private NotificationEmailEnum notificationEmail;
        private PaymentStatusIdEnum paymentStatusId;
        private StatusIdEnum statusId;
        private NoteEnum note;
        private NotificationDaysBeforeDueDateEnum notificationDaysBeforeDueDate;
        private NotificationDaysAfterDueDateEnum notificationDaysAfterDueDate;
        private NotificationOnDueDateEnum notificationOnDueDate;
        private SendTextToPayEnum sendTextToPay;
        private FilesEnum files;
        private RemainingBalanceEnum remainingBalance;
        private SinglePaymentMinAmountEnum singlePaymentMinAmount;
        private SinglePaymentMaxAmountEnum singlePaymentMaxAmount;
        private CellPhoneEnum cellPhone;
        private IdEnum id;
        private CreatedTsEnum createdTs;
        private ModifiedTsEnum modifiedTs;
        private CreatedUserIdEnum createdUserId;
        private ModifiedUserIdEnum modifiedUserId;
        private Active4Enum active;
        private IsActiveEnum isActive;



        /**
         * Setter for locationId.
         * @param  locationId  LocationIdEnum value for locationId.
         * @return Builder
         */
        public Builder locationId(LocationIdEnum locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  TitleEnum value for title.
         * @return Builder
         */
        public Builder title(TitleEnum title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for ccProductTransactionId.
         * @param  ccProductTransactionId  CcProductTransactionIdEnum value for
         *         ccProductTransactionId.
         * @return Builder
         */
        public Builder ccProductTransactionId(CcProductTransactionIdEnum ccProductTransactionId) {
            this.ccProductTransactionId = ccProductTransactionId;
            return this;
        }

        /**
         * Setter for achProductTransactionId.
         * @param  achProductTransactionId  AchProductTransactionIdEnum value for
         *         achProductTransactionId.
         * @return Builder
         */
        public Builder achProductTransactionId(
                AchProductTransactionIdEnum achProductTransactionId) {
            this.achProductTransactionId = achProductTransactionId;
            return this;
        }

        /**
         * Setter for dueDate.
         * @param  dueDate  DueDateEnum value for dueDate.
         * @return Builder
         */
        public Builder dueDate(DueDateEnum dueDate) {
            this.dueDate = dueDate;
            return this;
        }

        /**
         * Setter for itemList.
         * @param  itemList  ItemList3Enum value for itemList.
         * @return Builder
         */
        public Builder itemList(ItemList3Enum itemList) {
            this.itemList = itemList;
            return this;
        }

        /**
         * Setter for allowOverpayment.
         * @param  allowOverpayment  AllowOverpaymentEnum value for allowOverpayment.
         * @return Builder
         */
        public Builder allowOverpayment(AllowOverpaymentEnum allowOverpayment) {
            this.allowOverpayment = allowOverpayment;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  EmailEnum value for email.
         * @return Builder
         */
        public Builder email(EmailEnum email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for contactId.
         * @param  contactId  ContactIdEnum value for contactId.
         * @return Builder
         */
        public Builder contactId(ContactIdEnum contactId) {
            this.contactId = contactId;
            return this;
        }

        /**
         * Setter for contactApiId.
         * @param  contactApiId  ContactApiIdEnum value for contactApiId.
         * @return Builder
         */
        public Builder contactApiId(ContactApiIdEnum contactApiId) {
            this.contactApiId = contactApiId;
            return this;
        }

        /**
         * Setter for customerId.
         * @param  customerId  CustomerIdEnum value for customerId.
         * @return Builder
         */
        public Builder customerId(CustomerIdEnum customerId) {
            this.customerId = customerId;
            return this;
        }

        /**
         * Setter for expireDate.
         * @param  expireDate  ExpireDateEnum value for expireDate.
         * @return Builder
         */
        public Builder expireDate(ExpireDateEnum expireDate) {
            this.expireDate = expireDate;
            return this;
        }

        /**
         * Setter for allowPartialPay.
         * @param  allowPartialPay  AllowPartialPayEnum value for allowPartialPay.
         * @return Builder
         */
        public Builder allowPartialPay(AllowPartialPayEnum allowPartialPay) {
            this.allowPartialPay = allowPartialPay;
            return this;
        }

        /**
         * Setter for attachFilesToEmail.
         * @param  attachFilesToEmail  AttachFilesToEmailEnum value for attachFilesToEmail.
         * @return Builder
         */
        public Builder attachFilesToEmail(AttachFilesToEmailEnum attachFilesToEmail) {
            this.attachFilesToEmail = attachFilesToEmail;
            return this;
        }

        /**
         * Setter for sendEmail.
         * @param  sendEmail  SendEmailEnum value for sendEmail.
         * @return Builder
         */
        public Builder sendEmail(SendEmailEnum sendEmail) {
            this.sendEmail = sendEmail;
            return this;
        }

        /**
         * Setter for invoiceNumber.
         * @param  invoiceNumber  InvoiceNumberEnum value for invoiceNumber.
         * @return Builder
         */
        public Builder invoiceNumber(InvoiceNumberEnum invoiceNumber) {
            this.invoiceNumber = invoiceNumber;
            return this;
        }

        /**
         * Setter for itemHeader.
         * @param  itemHeader  ItemHeaderEnum value for itemHeader.
         * @return Builder
         */
        public Builder itemHeader(ItemHeaderEnum itemHeader) {
            this.itemHeader = itemHeader;
            return this;
        }

        /**
         * Setter for itemFooter.
         * @param  itemFooter  ItemFooterEnum value for itemFooter.
         * @return Builder
         */
        public Builder itemFooter(ItemFooterEnum itemFooter) {
            this.itemFooter = itemFooter;
            return this;
        }

        /**
         * Setter for amountDue.
         * @param  amountDue  AmountDueEnum value for amountDue.
         * @return Builder
         */
        public Builder amountDue(AmountDueEnum amountDue) {
            this.amountDue = amountDue;
            return this;
        }

        /**
         * Setter for notificationEmail.
         * @param  notificationEmail  NotificationEmailEnum value for notificationEmail.
         * @return Builder
         */
        public Builder notificationEmail(NotificationEmailEnum notificationEmail) {
            this.notificationEmail = notificationEmail;
            return this;
        }

        /**
         * Setter for paymentStatusId.
         * @param  paymentStatusId  PaymentStatusIdEnum value for paymentStatusId.
         * @return Builder
         */
        public Builder paymentStatusId(PaymentStatusIdEnum paymentStatusId) {
            this.paymentStatusId = paymentStatusId;
            return this;
        }

        /**
         * Setter for statusId.
         * @param  statusId  StatusIdEnum value for statusId.
         * @return Builder
         */
        public Builder statusId(StatusIdEnum statusId) {
            this.statusId = statusId;
            return this;
        }

        /**
         * Setter for note.
         * @param  note  NoteEnum value for note.
         * @return Builder
         */
        public Builder note(NoteEnum note) {
            this.note = note;
            return this;
        }

        /**
         * Setter for notificationDaysBeforeDueDate.
         * @param  notificationDaysBeforeDueDate  NotificationDaysBeforeDueDateEnum value for
         *         notificationDaysBeforeDueDate.
         * @return Builder
         */
        public Builder notificationDaysBeforeDueDate(
                NotificationDaysBeforeDueDateEnum notificationDaysBeforeDueDate) {
            this.notificationDaysBeforeDueDate = notificationDaysBeforeDueDate;
            return this;
        }

        /**
         * Setter for notificationDaysAfterDueDate.
         * @param  notificationDaysAfterDueDate  NotificationDaysAfterDueDateEnum value for
         *         notificationDaysAfterDueDate.
         * @return Builder
         */
        public Builder notificationDaysAfterDueDate(
                NotificationDaysAfterDueDateEnum notificationDaysAfterDueDate) {
            this.notificationDaysAfterDueDate = notificationDaysAfterDueDate;
            return this;
        }

        /**
         * Setter for notificationOnDueDate.
         * @param  notificationOnDueDate  NotificationOnDueDateEnum value for notificationOnDueDate.
         * @return Builder
         */
        public Builder notificationOnDueDate(NotificationOnDueDateEnum notificationOnDueDate) {
            this.notificationOnDueDate = notificationOnDueDate;
            return this;
        }

        /**
         * Setter for sendTextToPay.
         * @param  sendTextToPay  SendTextToPayEnum value for sendTextToPay.
         * @return Builder
         */
        public Builder sendTextToPay(SendTextToPayEnum sendTextToPay) {
            this.sendTextToPay = sendTextToPay;
            return this;
        }

        /**
         * Setter for files.
         * @param  files  FilesEnum value for files.
         * @return Builder
         */
        public Builder files(FilesEnum files) {
            this.files = files;
            return this;
        }

        /**
         * Setter for remainingBalance.
         * @param  remainingBalance  RemainingBalanceEnum value for remainingBalance.
         * @return Builder
         */
        public Builder remainingBalance(RemainingBalanceEnum remainingBalance) {
            this.remainingBalance = remainingBalance;
            return this;
        }

        /**
         * Setter for singlePaymentMinAmount.
         * @param  singlePaymentMinAmount  SinglePaymentMinAmountEnum value for
         *         singlePaymentMinAmount.
         * @return Builder
         */
        public Builder singlePaymentMinAmount(SinglePaymentMinAmountEnum singlePaymentMinAmount) {
            this.singlePaymentMinAmount = singlePaymentMinAmount;
            return this;
        }

        /**
         * Setter for singlePaymentMaxAmount.
         * @param  singlePaymentMaxAmount  SinglePaymentMaxAmountEnum value for
         *         singlePaymentMaxAmount.
         * @return Builder
         */
        public Builder singlePaymentMaxAmount(SinglePaymentMaxAmountEnum singlePaymentMaxAmount) {
            this.singlePaymentMaxAmount = singlePaymentMaxAmount;
            return this;
        }

        /**
         * Setter for cellPhone.
         * @param  cellPhone  CellPhoneEnum value for cellPhone.
         * @return Builder
         */
        public Builder cellPhone(CellPhoneEnum cellPhone) {
            this.cellPhone = cellPhone;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  IdEnum value for id.
         * @return Builder
         */
        public Builder id(IdEnum id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for createdTs.
         * @param  createdTs  CreatedTsEnum value for createdTs.
         * @return Builder
         */
        public Builder createdTs(CreatedTsEnum createdTs) {
            this.createdTs = createdTs;
            return this;
        }

        /**
         * Setter for modifiedTs.
         * @param  modifiedTs  ModifiedTsEnum value for modifiedTs.
         * @return Builder
         */
        public Builder modifiedTs(ModifiedTsEnum modifiedTs) {
            this.modifiedTs = modifiedTs;
            return this;
        }

        /**
         * Setter for createdUserId.
         * @param  createdUserId  CreatedUserIdEnum value for createdUserId.
         * @return Builder
         */
        public Builder createdUserId(CreatedUserIdEnum createdUserId) {
            this.createdUserId = createdUserId;
            return this;
        }

        /**
         * Setter for modifiedUserId.
         * @param  modifiedUserId  ModifiedUserIdEnum value for modifiedUserId.
         * @return Builder
         */
        public Builder modifiedUserId(ModifiedUserIdEnum modifiedUserId) {
            this.modifiedUserId = modifiedUserId;
            return this;
        }

        /**
         * Setter for active.
         * @param  active  Active4Enum value for active.
         * @return Builder
         */
        public Builder active(Active4Enum active) {
            this.active = active;
            return this;
        }

        /**
         * Setter for isActive.
         * @param  isActive  IsActiveEnum value for isActive.
         * @return Builder
         */
        public Builder isActive(IsActiveEnum isActive) {
            this.isActive = isActive;
            return this;
        }

        /**
         * Builds a new {@link Sort5} object using the set fields.
         * @return {@link Sort5}
         */
        public Sort5 build() {
            return new Sort5(locationId, title, ccProductTransactionId, achProductTransactionId,
                    dueDate, itemList, allowOverpayment, email, contactId, contactApiId, customerId,
                    expireDate, allowPartialPay, attachFilesToEmail, sendEmail, invoiceNumber,
                    itemHeader, itemFooter, amountDue, notificationEmail, paymentStatusId, statusId,
                    note, notificationDaysBeforeDueDate, notificationDaysAfterDueDate,
                    notificationOnDueDate, sendTextToPay, files, remainingBalance,
                    singlePaymentMinAmount, singlePaymentMaxAmount, cellPhone, id, createdTs,
                    modifiedTs, createdUserId, modifiedUserId, active, isActive);
        }
    }
}
