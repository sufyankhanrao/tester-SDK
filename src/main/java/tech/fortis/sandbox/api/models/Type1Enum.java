/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * Type1Enum to be used.
 */
public enum Type1Enum {
    CASHBACK,

    SURCHARGE,

    HEALTHCARE,

    TRANSIT,

    RX,

    VISION,

    CLINICAL,

    COPAY,

    DENTAL,

    TAX,

    FEE;


    private static TreeMap<String, Type1Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        CASHBACK.value = "cashback";
        SURCHARGE.value = "surcharge";
        HEALTHCARE.value = "healthcare";
        TRANSIT.value = "transit";
        RX.value = "RX";
        VISION.value = "vision";
        CLINICAL.value = "clinical";
        COPAY.value = "copay";
        DENTAL.value = "dental";
        TAX.value = "tax";
        FEE.value = "fee";

        valueMap.put("cashback", CASHBACK);
        valueMap.put("surcharge", SURCHARGE);
        valueMap.put("healthcare", HEALTHCARE);
        valueMap.put("transit", TRANSIT);
        valueMap.put("RX", RX);
        valueMap.put("vision", VISION);
        valueMap.put("clinical", CLINICAL);
        valueMap.put("copay", COPAY);
        valueMap.put("dental", DENTAL);
        valueMap.put("tax", TAX);
        valueMap.put("fee", FEE);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static Type1Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Type1Enum values to list of string values.
     * @param toConvert The list of Type1Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<Type1Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (Type1Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 