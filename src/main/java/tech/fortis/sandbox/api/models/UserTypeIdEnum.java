/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * UserTypeIdEnum to be used.
 */
public enum UserTypeIdEnum {
    ENUM_200,

    ENUM_250,

    ENUM_300,

    ENUM_400,

    ENUM_500,

    ENUM_600,

    ENUM_700,

    ENUM_800,

    ENUM_900,

    ENUM_1000,

    ENUM_100;


    private static TreeMap<Integer, UserTypeIdEnum> valueMap = new TreeMap<>();
    private Integer value;

    static {
        ENUM_200.value = 200;
        ENUM_250.value = 250;
        ENUM_300.value = 300;
        ENUM_400.value = 400;
        ENUM_500.value = 500;
        ENUM_600.value = 600;
        ENUM_700.value = 700;
        ENUM_800.value = 800;
        ENUM_900.value = 900;
        ENUM_1000.value = 1000;
        ENUM_100.value = 100;

        valueMap.put(200, ENUM_200);
        valueMap.put(250, ENUM_250);
        valueMap.put(300, ENUM_300);
        valueMap.put(400, ENUM_400);
        valueMap.put(500, ENUM_500);
        valueMap.put(600, ENUM_600);
        valueMap.put(700, ENUM_700);
        valueMap.put(800, ENUM_800);
        valueMap.put(900, ENUM_900);
        valueMap.put(1000, ENUM_1000);
        valueMap.put(100, ENUM_100);
    }

    /**
     * Returns the enum member associated with the given integer value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given integer value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static UserTypeIdEnum fromInteger(Integer toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the integer value associated with the enum member.
     * @return The integer value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public Integer value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of UserTypeIdEnum values to list of integer values.
     * @param toConvert The list of UserTypeIdEnum values to convert.
     * @return List of representative integer values.
     */
    public static List<Integer> toValue(List<UserTypeIdEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<Integer> convertedValues = new ArrayList<>();
        for (UserTypeIdEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 