/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for V1ContactsRequest1 type.
 */
public class V1ContactsRequest1 {
    private String locationId;
    private String accountNumber;
    private String contactApiId;
    private String firstName;
    private String lastName;
    private String cellPhone;
    private Double contactBalance;
    private String address;
    private String city;
    private String state;
    private String companyName;
    private String headerMessage;
    private String dateOfBirth;
    private Boolean emailTrxReceipt;
    private String homePhone;
    private String officePhone;
    private String officeExtPhone;
    private Integer headerMessageType;
    private UpdateIfExistsEnum updateIfExists;
    private String zip;
    private String contactC1;
    private String contactC2;
    private String contactC3;
    private String parentId;
    private String email;

    /**
     * Default constructor.
     */
    public V1ContactsRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  String value for locationId.
     * @param  accountNumber  String value for accountNumber.
     * @param  contactApiId  String value for contactApiId.
     * @param  firstName  String value for firstName.
     * @param  lastName  String value for lastName.
     * @param  cellPhone  String value for cellPhone.
     * @param  contactBalance  Double value for contactBalance.
     * @param  address  String value for address.
     * @param  city  String value for city.
     * @param  state  String value for state.
     * @param  companyName  String value for companyName.
     * @param  headerMessage  String value for headerMessage.
     * @param  dateOfBirth  String value for dateOfBirth.
     * @param  emailTrxReceipt  Boolean value for emailTrxReceipt.
     * @param  homePhone  String value for homePhone.
     * @param  officePhone  String value for officePhone.
     * @param  officeExtPhone  String value for officeExtPhone.
     * @param  headerMessageType  Integer value for headerMessageType.
     * @param  updateIfExists  UpdateIfExistsEnum value for updateIfExists.
     * @param  zip  String value for zip.
     * @param  contactC1  String value for contactC1.
     * @param  contactC2  String value for contactC2.
     * @param  contactC3  String value for contactC3.
     * @param  parentId  String value for parentId.
     * @param  email  String value for email.
     */
    public V1ContactsRequest1(
            String locationId,
            String accountNumber,
            String contactApiId,
            String firstName,
            String lastName,
            String cellPhone,
            Double contactBalance,
            String address,
            String city,
            String state,
            String companyName,
            String headerMessage,
            String dateOfBirth,
            Boolean emailTrxReceipt,
            String homePhone,
            String officePhone,
            String officeExtPhone,
            Integer headerMessageType,
            UpdateIfExistsEnum updateIfExists,
            String zip,
            String contactC1,
            String contactC2,
            String contactC3,
            String parentId,
            String email) {
        this.locationId = locationId;
        this.accountNumber = accountNumber;
        this.contactApiId = contactApiId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.cellPhone = cellPhone;
        this.contactBalance = contactBalance;
        this.address = address;
        this.city = city;
        this.state = state;
        this.companyName = companyName;
        this.headerMessage = headerMessage;
        this.dateOfBirth = dateOfBirth;
        this.emailTrxReceipt = emailTrxReceipt;
        this.homePhone = homePhone;
        this.officePhone = officePhone;
        this.officeExtPhone = officeExtPhone;
        this.headerMessageType = headerMessageType;
        this.updateIfExists = updateIfExists;
        this.zip = zip;
        this.contactC1 = contactC1;
        this.contactC2 = contactC2;
        this.contactC3 = contactC3;
        this.parentId = parentId;
        this.email = email;
    }

    /**
     * Getter for LocationId.
     * Location ID
     * @return Returns the String
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * Location ID
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for AccountNumber.
     * Contact Account Number
     * @return Returns the String
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Contact Account Number
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for ContactApiId.
     * Contact API Id
     * @return Returns the String
     */
    @JsonGetter("contact_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactApiId() {
        return contactApiId;
    }

    /**
     * Setter for ContactApiId.
     * Contact API Id
     * @param contactApiId Value for String
     */
    @JsonSetter("contact_api_id")
    public void setContactApiId(String contactApiId) {
        this.contactApiId = contactApiId;
    }

    /**
     * Getter for FirstName.
     * First Name
     * @return Returns the String
     */
    @JsonGetter("first_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirstName() {
        return firstName;
    }

    /**
     * Setter for FirstName.
     * First Name
     * @param firstName Value for String
     */
    @JsonSetter("first_name")
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for LastName.
     * Last Name
     * @return Returns the String
     */
    @JsonGetter("last_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastName() {
        return lastName;
    }

    /**
     * Setter for LastName.
     * Last Name
     * @param lastName Value for String
     */
    @JsonSetter("last_name")
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for CellPhone.
     * Cell phone of contact
     * @return Returns the String
     */
    @JsonGetter("cell_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCellPhone() {
        return cellPhone;
    }

    /**
     * Setter for CellPhone.
     * Cell phone of contact
     * @param cellPhone Value for String
     */
    @JsonSetter("cell_phone")
    public void setCellPhone(String cellPhone) {
        this.cellPhone = cellPhone;
    }

    /**
     * Getter for ContactBalance.
     * Contact Balance
     * @return Returns the Double
     */
    @JsonGetter("contact_balance")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getContactBalance() {
        return contactBalance;
    }

    /**
     * Setter for ContactBalance.
     * Contact Balance
     * @param contactBalance Value for Double
     */
    @JsonSetter("contact_balance")
    public void setContactBalance(Double contactBalance) {
        this.contactBalance = contactBalance;
    }

    /**
     * Getter for Address.
     * Address of contact
     * @return Returns the String
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * Address of contact
     * @param address Value for String
     */
    @JsonSetter("address")
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for City.
     * City of contact
     * @return Returns the String
     */
    @JsonGetter("city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCity() {
        return city;
    }

    /**
     * Setter for City.
     * City of contact
     * @param city Value for String
     */
    @JsonSetter("city")
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for State.
     * State of contact
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * State of contact
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for CompanyName.
     * Company Name
     * @return Returns the String
     */
    @JsonGetter("company_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompanyName() {
        return companyName;
    }

    /**
     * Setter for CompanyName.
     * Company Name
     * @param companyName Value for String
     */
    @JsonSetter("company_name")
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    /**
     * Getter for HeaderMessage.
     * Header Message
     * @return Returns the String
     */
    @JsonGetter("header_message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHeaderMessage() {
        return headerMessage;
    }

    /**
     * Setter for HeaderMessage.
     * Header Message
     * @param headerMessage Value for String
     */
    @JsonSetter("header_message")
    public void setHeaderMessage(String headerMessage) {
        this.headerMessage = headerMessage;
    }

    /**
     * Getter for DateOfBirth.
     * Contacts DOB, Format: yyyy-MM-dd
     * @return Returns the String
     */
    @JsonGetter("date_of_birth")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * Setter for DateOfBirth.
     * Contacts DOB, Format: yyyy-MM-dd
     * @param dateOfBirth Value for String
     */
    @JsonSetter("date_of_birth")
    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Getter for EmailTrxReceipt.
     * Whether or not to email all transactions receipts to contact (1 or 0)
     * @return Returns the Boolean
     */
    @JsonGetter("email_trx_receipt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getEmailTrxReceipt() {
        return emailTrxReceipt;
    }

    /**
     * Setter for EmailTrxReceipt.
     * Whether or not to email all transactions receipts to contact (1 or 0)
     * @param emailTrxReceipt Value for Boolean
     */
    @JsonSetter("email_trx_receipt")
    public void setEmailTrxReceipt(Boolean emailTrxReceipt) {
        this.emailTrxReceipt = emailTrxReceipt;
    }

    /**
     * Getter for HomePhone.
     * Contacts home phone
     * @return Returns the String
     */
    @JsonGetter("home_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHomePhone() {
        return homePhone;
    }

    /**
     * Setter for HomePhone.
     * Contacts home phone
     * @param homePhone Value for String
     */
    @JsonSetter("home_phone")
    public void setHomePhone(String homePhone) {
        this.homePhone = homePhone;
    }

    /**
     * Getter for OfficePhone.
     * Contacts office phone
     * @return Returns the String
     */
    @JsonGetter("office_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficePhone() {
        return officePhone;
    }

    /**
     * Setter for OfficePhone.
     * Contacts office phone
     * @param officePhone Value for String
     */
    @JsonSetter("office_phone")
    public void setOfficePhone(String officePhone) {
        this.officePhone = officePhone;
    }

    /**
     * Getter for OfficeExtPhone.
     * Optional phone extension for office phone
     * @return Returns the String
     */
    @JsonGetter("office_ext_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOfficeExtPhone() {
        return officeExtPhone;
    }

    /**
     * Setter for OfficeExtPhone.
     * Optional phone extension for office phone
     * @param officeExtPhone Value for String
     */
    @JsonSetter("office_ext_phone")
    public void setOfficeExtPhone(String officeExtPhone) {
        this.officeExtPhone = officeExtPhone;
    }

    /**
     * Getter for HeaderMessageType.
     * Header Message Type
     * @return Returns the Integer
     */
    @JsonGetter("header_message_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getHeaderMessageType() {
        return headerMessageType;
    }

    /**
     * Setter for HeaderMessageType.
     * Header Message Type
     * @param headerMessageType Value for Integer
     */
    @JsonSetter("header_message_type")
    public void setHeaderMessageType(Integer headerMessageType) {
        this.headerMessageType = headerMessageType;
    }

    /**
     * Getter for UpdateIfExists.
     * Update If Exists
     * @return Returns the UpdateIfExistsEnum
     */
    @JsonGetter("update_if_exists")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UpdateIfExistsEnum getUpdateIfExists() {
        return updateIfExists;
    }

    /**
     * Setter for UpdateIfExists.
     * Update If Exists
     * @param updateIfExists Value for UpdateIfExistsEnum
     */
    @JsonSetter("update_if_exists")
    public void setUpdateIfExists(UpdateIfExistsEnum updateIfExists) {
        this.updateIfExists = updateIfExists;
    }

    /**
     * Getter for Zip.
     * Zip of contact
     * @return Returns the String
     */
    @JsonGetter("zip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getZip() {
        return zip;
    }

    /**
     * Setter for Zip.
     * Zip of contact
     * @param zip Value for String
     */
    @JsonSetter("zip")
    public void setZip(String zip) {
        this.zip = zip;
    }

    /**
     * Getter for ContactC1.
     * Custom field 1 for api users to store custom data
     * @return Returns the String
     */
    @JsonGetter("contact_c1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactC1() {
        return contactC1;
    }

    /**
     * Setter for ContactC1.
     * Custom field 1 for api users to store custom data
     * @param contactC1 Value for String
     */
    @JsonSetter("contact_c1")
    public void setContactC1(String contactC1) {
        this.contactC1 = contactC1;
    }

    /**
     * Getter for ContactC2.
     * Custom field 2 for api users to store custom data
     * @return Returns the String
     */
    @JsonGetter("contact_c2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactC2() {
        return contactC2;
    }

    /**
     * Setter for ContactC2.
     * Custom field 2 for api users to store custom data
     * @param contactC2 Value for String
     */
    @JsonSetter("contact_c2")
    public void setContactC2(String contactC2) {
        this.contactC2 = contactC2;
    }

    /**
     * Getter for ContactC3.
     * Custom field 3 for api users to store custom data
     * @return Returns the String
     */
    @JsonGetter("contact_c3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactC3() {
        return contactC3;
    }

    /**
     * Setter for ContactC3.
     * Custom field 3 for api users to store custom data
     * @param contactC3 Value for String
     */
    @JsonSetter("contact_c3")
    public void setContactC3(String contactC3) {
        this.contactC3 = contactC3;
    }

    /**
     * Getter for ParentId.
     * Parent Id
     * @return Returns the String
     */
    @JsonGetter("parent_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentId() {
        return parentId;
    }

    /**
     * Setter for ParentId.
     * Parent Id
     * @param parentId Value for String
     */
    @JsonSetter("parent_id")
    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    /**
     * Getter for Email.
     * Email of contact
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * Email of contact
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Converts this V1ContactsRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V1ContactsRequest1 [" + "locationId=" + locationId + ", accountNumber="
                + accountNumber + ", contactApiId=" + contactApiId + ", firstName=" + firstName
                + ", lastName=" + lastName + ", cellPhone=" + cellPhone + ", contactBalance="
                + contactBalance + ", address=" + address + ", city=" + city + ", state=" + state
                + ", companyName=" + companyName + ", headerMessage=" + headerMessage
                + ", dateOfBirth=" + dateOfBirth + ", emailTrxReceipt=" + emailTrxReceipt
                + ", homePhone=" + homePhone + ", officePhone=" + officePhone + ", officeExtPhone="
                + officeExtPhone + ", headerMessageType=" + headerMessageType + ", updateIfExists="
                + updateIfExists + ", zip=" + zip + ", contactC1=" + contactC1 + ", contactC2="
                + contactC2 + ", contactC3=" + contactC3 + ", parentId=" + parentId + ", email="
                + email + "]";
    }

    /**
     * Builds a new {@link V1ContactsRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V1ContactsRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .locationId(getLocationId())
                .accountNumber(getAccountNumber())
                .contactApiId(getContactApiId())
                .firstName(getFirstName())
                .lastName(getLastName())
                .cellPhone(getCellPhone())
                .contactBalance(getContactBalance())
                .address(getAddress())
                .city(getCity())
                .state(getState())
                .companyName(getCompanyName())
                .headerMessage(getHeaderMessage())
                .dateOfBirth(getDateOfBirth())
                .emailTrxReceipt(getEmailTrxReceipt())
                .homePhone(getHomePhone())
                .officePhone(getOfficePhone())
                .officeExtPhone(getOfficeExtPhone())
                .headerMessageType(getHeaderMessageType())
                .updateIfExists(getUpdateIfExists())
                .zip(getZip())
                .contactC1(getContactC1())
                .contactC2(getContactC2())
                .contactC3(getContactC3())
                .parentId(getParentId())
                .email(getEmail());
        return builder;
    }

    /**
     * Class to build instances of {@link V1ContactsRequest1}.
     */
    public static class Builder {
        private String locationId;
        private String accountNumber;
        private String contactApiId;
        private String firstName;
        private String lastName;
        private String cellPhone;
        private Double contactBalance;
        private String address;
        private String city;
        private String state;
        private String companyName;
        private String headerMessage;
        private String dateOfBirth;
        private Boolean emailTrxReceipt;
        private String homePhone;
        private String officePhone;
        private String officeExtPhone;
        private Integer headerMessageType;
        private UpdateIfExistsEnum updateIfExists;
        private String zip;
        private String contactC1;
        private String contactC2;
        private String contactC3;
        private String parentId;
        private String email;



        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for contactApiId.
         * @param  contactApiId  String value for contactApiId.
         * @return Builder
         */
        public Builder contactApiId(String contactApiId) {
            this.contactApiId = contactApiId;
            return this;
        }

        /**
         * Setter for firstName.
         * @param  firstName  String value for firstName.
         * @return Builder
         */
        public Builder firstName(String firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * Setter for lastName.
         * @param  lastName  String value for lastName.
         * @return Builder
         */
        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * Setter for cellPhone.
         * @param  cellPhone  String value for cellPhone.
         * @return Builder
         */
        public Builder cellPhone(String cellPhone) {
            this.cellPhone = cellPhone;
            return this;
        }

        /**
         * Setter for contactBalance.
         * @param  contactBalance  Double value for contactBalance.
         * @return Builder
         */
        public Builder contactBalance(Double contactBalance) {
            this.contactBalance = contactBalance;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  String value for address.
         * @return Builder
         */
        public Builder address(String address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for city.
         * @param  city  String value for city.
         * @return Builder
         */
        public Builder city(String city) {
            this.city = city;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for companyName.
         * @param  companyName  String value for companyName.
         * @return Builder
         */
        public Builder companyName(String companyName) {
            this.companyName = companyName;
            return this;
        }

        /**
         * Setter for headerMessage.
         * @param  headerMessage  String value for headerMessage.
         * @return Builder
         */
        public Builder headerMessage(String headerMessage) {
            this.headerMessage = headerMessage;
            return this;
        }

        /**
         * Setter for dateOfBirth.
         * @param  dateOfBirth  String value for dateOfBirth.
         * @return Builder
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        /**
         * Setter for emailTrxReceipt.
         * @param  emailTrxReceipt  Boolean value for emailTrxReceipt.
         * @return Builder
         */
        public Builder emailTrxReceipt(Boolean emailTrxReceipt) {
            this.emailTrxReceipt = emailTrxReceipt;
            return this;
        }

        /**
         * Setter for homePhone.
         * @param  homePhone  String value for homePhone.
         * @return Builder
         */
        public Builder homePhone(String homePhone) {
            this.homePhone = homePhone;
            return this;
        }

        /**
         * Setter for officePhone.
         * @param  officePhone  String value for officePhone.
         * @return Builder
         */
        public Builder officePhone(String officePhone) {
            this.officePhone = officePhone;
            return this;
        }

        /**
         * Setter for officeExtPhone.
         * @param  officeExtPhone  String value for officeExtPhone.
         * @return Builder
         */
        public Builder officeExtPhone(String officeExtPhone) {
            this.officeExtPhone = officeExtPhone;
            return this;
        }

        /**
         * Setter for headerMessageType.
         * @param  headerMessageType  Integer value for headerMessageType.
         * @return Builder
         */
        public Builder headerMessageType(Integer headerMessageType) {
            this.headerMessageType = headerMessageType;
            return this;
        }

        /**
         * Setter for updateIfExists.
         * @param  updateIfExists  UpdateIfExistsEnum value for updateIfExists.
         * @return Builder
         */
        public Builder updateIfExists(UpdateIfExistsEnum updateIfExists) {
            this.updateIfExists = updateIfExists;
            return this;
        }

        /**
         * Setter for zip.
         * @param  zip  String value for zip.
         * @return Builder
         */
        public Builder zip(String zip) {
            this.zip = zip;
            return this;
        }

        /**
         * Setter for contactC1.
         * @param  contactC1  String value for contactC1.
         * @return Builder
         */
        public Builder contactC1(String contactC1) {
            this.contactC1 = contactC1;
            return this;
        }

        /**
         * Setter for contactC2.
         * @param  contactC2  String value for contactC2.
         * @return Builder
         */
        public Builder contactC2(String contactC2) {
            this.contactC2 = contactC2;
            return this;
        }

        /**
         * Setter for contactC3.
         * @param  contactC3  String value for contactC3.
         * @return Builder
         */
        public Builder contactC3(String contactC3) {
            this.contactC3 = contactC3;
            return this;
        }

        /**
         * Setter for parentId.
         * @param  parentId  String value for parentId.
         * @return Builder
         */
        public Builder parentId(String parentId) {
            this.parentId = parentId;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Builds a new {@link V1ContactsRequest1} object using the set fields.
         * @return {@link V1ContactsRequest1}
         */
        public V1ContactsRequest1 build() {
            return new V1ContactsRequest1(locationId, accountNumber, contactApiId, firstName,
                    lastName, cellPhone, contactBalance, address, city, state, companyName,
                    headerMessage, dateOfBirth, emailTrxReceipt, homePhone, officePhone,
                    officeExtPhone, headerMessageType, updateIfExists, zip, contactC1, contactC2,
                    contactC3, parentId, email);
        }
    }
}
