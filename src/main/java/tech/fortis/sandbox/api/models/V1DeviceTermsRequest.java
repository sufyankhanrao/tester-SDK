/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for V1DeviceTermsRequest type.
 */
public class V1DeviceTermsRequest {
    private String locationId;
    private String terminalId;
    private boolean requireSignature;
    private String deviceTermApiId;
    private String termsConditions;

    /**
     * Default constructor.
     */
    public V1DeviceTermsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  locationId  String value for locationId.
     * @param  terminalId  String value for terminalId.
     * @param  requireSignature  boolean value for requireSignature.
     * @param  termsConditions  String value for termsConditions.
     * @param  deviceTermApiId  String value for deviceTermApiId.
     */
    public V1DeviceTermsRequest(
            String locationId,
            String terminalId,
            boolean requireSignature,
            String termsConditions,
            String deviceTermApiId) {
        this.locationId = locationId;
        this.terminalId = terminalId;
        this.requireSignature = requireSignature;
        this.deviceTermApiId = deviceTermApiId;
        this.termsConditions = termsConditions;
    }

    /**
     * Getter for LocationId.
     * Location ID
     * @return Returns the String
     */
    @JsonGetter("location_id")
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * Location ID
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for TerminalId.
     * Terminal ID
     * @return Returns the String
     */
    @JsonGetter("terminal_id")
    public String getTerminalId() {
        return terminalId;
    }

    /**
     * Setter for TerminalId.
     * Terminal ID
     * @param terminalId Value for String
     */
    @JsonSetter("terminal_id")
    public void setTerminalId(String terminalId) {
        this.terminalId = terminalId;
    }

    /**
     * Getter for RequireSignature.
     * Set to true or 1 to require a signature from the customer
     * @return Returns the boolean
     */
    @JsonGetter("require_signature")
    public boolean getRequireSignature() {
        return requireSignature;
    }

    /**
     * Setter for RequireSignature.
     * Set to true or 1 to require a signature from the customer
     * @param requireSignature Value for boolean
     */
    @JsonSetter("require_signature")
    public void setRequireSignature(boolean requireSignature) {
        this.requireSignature = requireSignature;
    }

    /**
     * Getter for DeviceTermApiId.
     * Can be used for associating record to external systems. Must be unique per location.
     * @return Returns the String
     */
    @JsonGetter("device_term_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceTermApiId() {
        return deviceTermApiId;
    }

    /**
     * Setter for DeviceTermApiId.
     * Can be used for associating record to external systems. Must be unique per location.
     * @param deviceTermApiId Value for String
     */
    @JsonSetter("device_term_api_id")
    public void setDeviceTermApiId(String deviceTermApiId) {
        this.deviceTermApiId = deviceTermApiId;
    }

    /**
     * Getter for TermsConditions.
     * This is the message that is displayed on the screen when prompting for a signature.
     * @return Returns the String
     */
    @JsonGetter("terms_conditions")
    public String getTermsConditions() {
        return termsConditions;
    }

    /**
     * Setter for TermsConditions.
     * This is the message that is displayed on the screen when prompting for a signature.
     * @param termsConditions Value for String
     */
    @JsonSetter("terms_conditions")
    public void setTermsConditions(String termsConditions) {
        this.termsConditions = termsConditions;
    }

    /**
     * Converts this V1DeviceTermsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V1DeviceTermsRequest [" + "locationId=" + locationId + ", terminalId=" + terminalId
                + ", requireSignature=" + requireSignature + ", termsConditions=" + termsConditions
                + ", deviceTermApiId=" + deviceTermApiId + "]";
    }

    /**
     * Builds a new {@link V1DeviceTermsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V1DeviceTermsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(locationId, terminalId, requireSignature, termsConditions)
                .deviceTermApiId(getDeviceTermApiId());
        return builder;
    }

    /**
     * Class to build instances of {@link V1DeviceTermsRequest}.
     */
    public static class Builder {
        private String locationId;
        private String terminalId;
        private boolean requireSignature;
        private String termsConditions;
        private String deviceTermApiId;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  locationId  String value for locationId.
         * @param  terminalId  String value for terminalId.
         * @param  requireSignature  boolean value for requireSignature.
         * @param  termsConditions  String value for termsConditions.
         */
        public Builder(String locationId, String terminalId, boolean requireSignature,
                String termsConditions) {
            this.locationId = locationId;
            this.terminalId = terminalId;
            this.requireSignature = requireSignature;
            this.termsConditions = termsConditions;
        }

        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for terminalId.
         * @param  terminalId  String value for terminalId.
         * @return Builder
         */
        public Builder terminalId(String terminalId) {
            this.terminalId = terminalId;
            return this;
        }

        /**
         * Setter for requireSignature.
         * @param  requireSignature  boolean value for requireSignature.
         * @return Builder
         */
        public Builder requireSignature(boolean requireSignature) {
            this.requireSignature = requireSignature;
            return this;
        }

        /**
         * Setter for termsConditions.
         * @param  termsConditions  String value for termsConditions.
         * @return Builder
         */
        public Builder termsConditions(String termsConditions) {
            this.termsConditions = termsConditions;
            return this;
        }

        /**
         * Setter for deviceTermApiId.
         * @param  deviceTermApiId  String value for deviceTermApiId.
         * @return Builder
         */
        public Builder deviceTermApiId(String deviceTermApiId) {
            this.deviceTermApiId = deviceTermApiId;
            return this;
        }

        /**
         * Builds a new {@link V1DeviceTermsRequest} object using the set fields.
         * @return {@link V1DeviceTermsRequest}
         */
        public V1DeviceTermsRequest build() {
            return new V1DeviceTermsRequest(locationId, terminalId, requireSignature,
                    termsConditions, deviceTermApiId);
        }
    }
}
