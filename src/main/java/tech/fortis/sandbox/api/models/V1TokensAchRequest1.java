/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package tech.fortis.sandbox.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for V1TokensAchRequest1 type.
 */
public class V1TokensAchRequest1 {
    private String accountHolderName;
    private String accountNumber;
    private String accountVaultApiId;
    private String accountvaultC1;
    private String accountvaultC2;
    private String accountvaultC3;
    private String achSecCode;
    private String billingAddress;
    private String billingCity;
    private String billingPhone;
    private String billingState;
    private String billingZip;
    private String contactId;
    private String customerId;
    private DriversLicense driversLicense;
    private String locationId;
    private String previousAccountVaultApiId;
    private String previousAccountVaultId;
    private String previousTransactionId;
    private String ssn4;
    private Boolean termsAgree;
    private String termsAgreeIp;
    private String title;
    private AccountType2Enum accountType;
    private String dobYear;
    private Boolean isCompany;
    private String routing;

    /**
     * Default constructor.
     */
    public V1TokensAchRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  accountHolderName  String value for accountHolderName.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountVaultApiId  String value for accountVaultApiId.
     * @param  accountvaultC1  String value for accountvaultC1.
     * @param  accountvaultC2  String value for accountvaultC2.
     * @param  accountvaultC3  String value for accountvaultC3.
     * @param  achSecCode  String value for achSecCode.
     * @param  billingAddress  String value for billingAddress.
     * @param  billingCity  String value for billingCity.
     * @param  billingPhone  String value for billingPhone.
     * @param  billingState  String value for billingState.
     * @param  billingZip  String value for billingZip.
     * @param  contactId  String value for contactId.
     * @param  customerId  String value for customerId.
     * @param  driversLicense  DriversLicense value for driversLicense.
     * @param  locationId  String value for locationId.
     * @param  previousAccountVaultApiId  String value for previousAccountVaultApiId.
     * @param  previousAccountVaultId  String value for previousAccountVaultId.
     * @param  previousTransactionId  String value for previousTransactionId.
     * @param  ssn4  String value for ssn4.
     * @param  termsAgree  Boolean value for termsAgree.
     * @param  termsAgreeIp  String value for termsAgreeIp.
     * @param  title  String value for title.
     * @param  accountType  AccountType2Enum value for accountType.
     * @param  dobYear  String value for dobYear.
     * @param  isCompany  Boolean value for isCompany.
     * @param  routing  String value for routing.
     */
    public V1TokensAchRequest1(
            String accountHolderName,
            String accountNumber,
            String accountVaultApiId,
            String accountvaultC1,
            String accountvaultC2,
            String accountvaultC3,
            String achSecCode,
            String billingAddress,
            String billingCity,
            String billingPhone,
            String billingState,
            String billingZip,
            String contactId,
            String customerId,
            DriversLicense driversLicense,
            String locationId,
            String previousAccountVaultApiId,
            String previousAccountVaultId,
            String previousTransactionId,
            String ssn4,
            Boolean termsAgree,
            String termsAgreeIp,
            String title,
            AccountType2Enum accountType,
            String dobYear,
            Boolean isCompany,
            String routing) {
        this.accountHolderName = accountHolderName;
        this.accountNumber = accountNumber;
        this.accountVaultApiId = accountVaultApiId;
        this.accountvaultC1 = accountvaultC1;
        this.accountvaultC2 = accountvaultC2;
        this.accountvaultC3 = accountvaultC3;
        this.achSecCode = achSecCode;
        this.billingAddress = billingAddress;
        this.billingCity = billingCity;
        this.billingPhone = billingPhone;
        this.billingState = billingState;
        this.billingZip = billingZip;
        this.contactId = contactId;
        this.customerId = customerId;
        this.driversLicense = driversLicense;
        this.locationId = locationId;
        this.previousAccountVaultApiId = previousAccountVaultApiId;
        this.previousAccountVaultId = previousAccountVaultId;
        this.previousTransactionId = previousTransactionId;
        this.ssn4 = ssn4;
        this.termsAgree = termsAgree;
        this.termsAgreeIp = termsAgreeIp;
        this.title = title;
        this.accountType = accountType;
        this.dobYear = dobYear;
        this.isCompany = isCompany;
        this.routing = routing;
    }

    /**
     * Getter for AccountHolderName.
     * Account holder name
     * @return Returns the String
     */
    @JsonGetter("account_holder_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountHolderName() {
        return accountHolderName;
    }

    /**
     * Setter for AccountHolderName.
     * Account holder name
     * @param accountHolderName Value for String
     */
    @JsonSetter("account_holder_name")
    public void setAccountHolderName(String accountHolderName) {
        this.accountHolderName = accountHolderName;
    }

    /**
     * Getter for AccountNumber.
     * Account number
     * @return Returns the String
     */
    @JsonGetter("account_number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account number
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for AccountVaultApiId.
     * This field can be used to correlate Account Vaults in our system to data within an outside
     * software integration
     * @return Returns the String
     */
    @JsonGetter("account_vault_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountVaultApiId() {
        return accountVaultApiId;
    }

    /**
     * Setter for AccountVaultApiId.
     * This field can be used to correlate Account Vaults in our system to data within an outside
     * software integration
     * @param accountVaultApiId Value for String
     */
    @JsonSetter("account_vault_api_id")
    public void setAccountVaultApiId(String accountVaultApiId) {
        this.accountVaultApiId = accountVaultApiId;
    }

    /**
     * Getter for AccountvaultC1.
     * Custom field 1 for API users to store custom data
     * @return Returns the String
     */
    @JsonGetter("accountvault_c1")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountvaultC1() {
        return accountvaultC1;
    }

    /**
     * Setter for AccountvaultC1.
     * Custom field 1 for API users to store custom data
     * @param accountvaultC1 Value for String
     */
    @JsonSetter("accountvault_c1")
    public void setAccountvaultC1(String accountvaultC1) {
        this.accountvaultC1 = accountvaultC1;
    }

    /**
     * Getter for AccountvaultC2.
     * Custom field 2 for API users to store custom data
     * @return Returns the String
     */
    @JsonGetter("accountvault_c2")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountvaultC2() {
        return accountvaultC2;
    }

    /**
     * Setter for AccountvaultC2.
     * Custom field 2 for API users to store custom data
     * @param accountvaultC2 Value for String
     */
    @JsonSetter("accountvault_c2")
    public void setAccountvaultC2(String accountvaultC2) {
        this.accountvaultC2 = accountvaultC2;
    }

    /**
     * Getter for AccountvaultC3.
     * Custom field 3 for API users to store custom data
     * @return Returns the String
     */
    @JsonGetter("accountvault_c3")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountvaultC3() {
        return accountvaultC3;
    }

    /**
     * Setter for AccountvaultC3.
     * Custom field 3 for API users to store custom data
     * @param accountvaultC3 Value for String
     */
    @JsonSetter("accountvault_c3")
    public void setAccountvaultC3(String accountvaultC3) {
        this.accountvaultC3 = accountvaultC3;
    }

    /**
     * Getter for AchSecCode.
     * SEC code for the account
     * @return Returns the String
     */
    @JsonGetter("ach_sec_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAchSecCode() {
        return achSecCode;
    }

    /**
     * Setter for AchSecCode.
     * SEC code for the account
     * @param achSecCode Value for String
     */
    @JsonSetter("ach_sec_code")
    public void setAchSecCode(String achSecCode) {
        this.achSecCode = achSecCode;
    }

    /**
     * Getter for BillingAddress.
     * The Street portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingAddress() {
        return billingAddress;
    }

    /**
     * Setter for BillingAddress.
     * The Street portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @param billingAddress Value for String
     */
    @JsonSetter("billing_address")
    public void setBillingAddress(String billingAddress) {
        this.billingAddress = billingAddress;
    }

    /**
     * Getter for BillingCity.
     * The City portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_city")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingCity() {
        return billingCity;
    }

    /**
     * Setter for BillingCity.
     * The City portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @param billingCity Value for String
     */
    @JsonSetter("billing_city")
    public void setBillingCity(String billingCity) {
        this.billingCity = billingCity;
    }

    /**
     * Getter for BillingPhone.
     * The Phone # to be used to contact Payer if there are any issues processing a transaction.
     * @return Returns the String
     */
    @JsonGetter("billing_phone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingPhone() {
        return billingPhone;
    }

    /**
     * Setter for BillingPhone.
     * The Phone # to be used to contact Payer if there are any issues processing a transaction.
     * @param billingPhone Value for String
     */
    @JsonSetter("billing_phone")
    public void setBillingPhone(String billingPhone) {
        this.billingPhone = billingPhone;
    }

    /**
     * Getter for BillingState.
     * The State portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingState() {
        return billingState;
    }

    /**
     * Setter for BillingState.
     * The State portion of the address associated with the Credit Card (CC) or Bank Account (ACH).
     * @param billingState Value for String
     */
    @JsonSetter("billing_state")
    public void setBillingState(String billingState) {
        this.billingState = billingState;
    }

    /**
     * Getter for BillingZip.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card (CC) or Bank
     * Account (ACH).
     * @return Returns the String
     */
    @JsonGetter("billing_zip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingZip() {
        return billingZip;
    }

    /**
     * Setter for BillingZip.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card (CC) or Bank
     * Account (ACH).
     * @param billingZip Value for String
     */
    @JsonSetter("billing_zip")
    public void setBillingZip(String billingZip) {
        this.billingZip = billingZip;
    }

    /**
     * Getter for ContactId.
     * Used to associate the Account Vault with a Contact.
     * @return Returns the String
     */
    @JsonGetter("contact_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContactId() {
        return contactId;
    }

    /**
     * Setter for ContactId.
     * Used to associate the Account Vault with a Contact.
     * @param contactId Value for String
     */
    @JsonSetter("contact_id")
    public void setContactId(String contactId) {
        this.contactId = contactId;
    }

    /**
     * Getter for CustomerId.
     * Used to store a customer identification number.
     * @return Returns the String
     */
    @JsonGetter("customer_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCustomerId() {
        return customerId;
    }

    /**
     * Setter for CustomerId.
     * Used to store a customer identification number.
     * @param customerId Value for String
     */
    @JsonSetter("customer_id")
    public void setCustomerId(String customerId) {
        this.customerId = customerId;
    }

    /**
     * Getter for DriversLicense.
     * Used for certain ACH transactions where Driver's License is required by the terminal being
     * used.
     * @return Returns the DriversLicense
     */
    @JsonGetter("drivers_license")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DriversLicense getDriversLicense() {
        return driversLicense;
    }

    /**
     * Setter for DriversLicense.
     * Used for certain ACH transactions where Driver's License is required by the terminal being
     * used.
     * @param driversLicense Value for DriversLicense
     */
    @JsonSetter("drivers_license")
    public void setDriversLicense(DriversLicense driversLicense) {
        this.driversLicense = driversLicense;
    }

    /**
     * Getter for LocationId.
     * A valid Location Id associated with the Contact for this Token
     * @return Returns the String
     */
    @JsonGetter("location_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocationId() {
        return locationId;
    }

    /**
     * Setter for LocationId.
     * A valid Location Id associated with the Contact for this Token
     * @param locationId Value for String
     */
    @JsonSetter("location_id")
    public void setLocationId(String locationId) {
        this.locationId = locationId;
    }

    /**
     * Getter for PreviousAccountVaultApiId.
     * Can be used to pull payment info from a previous account vault api id.
     * @return Returns the String
     */
    @JsonGetter("previous_account_vault_api_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousAccountVaultApiId() {
        return previousAccountVaultApiId;
    }

    /**
     * Setter for PreviousAccountVaultApiId.
     * Can be used to pull payment info from a previous account vault api id.
     * @param previousAccountVaultApiId Value for String
     */
    @JsonSetter("previous_account_vault_api_id")
    public void setPreviousAccountVaultApiId(String previousAccountVaultApiId) {
        this.previousAccountVaultApiId = previousAccountVaultApiId;
    }

    /**
     * Getter for PreviousAccountVaultId.
     * Can be used to pull payment info from a previous account vault.
     * @return Returns the String
     */
    @JsonGetter("previous_account_vault_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousAccountVaultId() {
        return previousAccountVaultId;
    }

    /**
     * Setter for PreviousAccountVaultId.
     * Can be used to pull payment info from a previous account vault.
     * @param previousAccountVaultId Value for String
     */
    @JsonSetter("previous_account_vault_id")
    public void setPreviousAccountVaultId(String previousAccountVaultId) {
        this.previousAccountVaultId = previousAccountVaultId;
    }

    /**
     * Getter for PreviousTransactionId.
     * Can be used to pull payment info from a previous transaction.
     * @return Returns the String
     */
    @JsonGetter("previous_transaction_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousTransactionId() {
        return previousTransactionId;
    }

    /**
     * Setter for PreviousTransactionId.
     * Can be used to pull payment info from a previous transaction.
     * @param previousTransactionId Value for String
     */
    @JsonSetter("previous_transaction_id")
    public void setPreviousTransactionId(String previousTransactionId) {
        this.previousTransactionId = previousTransactionId;
    }

    /**
     * Getter for Ssn4.
     * The last four of the account_holder social security number.
     * @return Returns the String
     */
    @JsonGetter("ssn4")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSsn4() {
        return ssn4;
    }

    /**
     * Setter for Ssn4.
     * The last four of the account_holder social security number.
     * @param ssn4 Value for String
     */
    @JsonSetter("ssn4")
    public void setSsn4(String ssn4) {
        this.ssn4 = ssn4;
    }

    /**
     * Getter for TermsAgree.
     * Terms agreement.
     * @return Returns the Boolean
     */
    @JsonGetter("terms_agree")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTermsAgree() {
        return termsAgree;
    }

    /**
     * Setter for TermsAgree.
     * Terms agreement.
     * @param termsAgree Value for Boolean
     */
    @JsonSetter("terms_agree")
    public void setTermsAgree(Boolean termsAgree) {
        this.termsAgree = termsAgree;
    }

    /**
     * Getter for TermsAgreeIp.
     * The ip address of the client that agreed to terms.
     * @return Returns the String
     */
    @JsonGetter("terms_agree_ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTermsAgreeIp() {
        return termsAgreeIp;
    }

    /**
     * Setter for TermsAgreeIp.
     * The ip address of the client that agreed to terms.
     * @param termsAgreeIp Value for String
     */
    @JsonSetter("terms_agree_ip")
    public void setTermsAgreeIp(String termsAgreeIp) {
        this.termsAgreeIp = termsAgreeIp;
    }

    /**
     * Getter for Title.
     * Used to describe the Token for easier identification within our UI.
     * @return Returns the String
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * Used to describe the Token for easier identification within our UI.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for AccountType.
     * Account type
     * @return Returns the AccountType2Enum
     */
    @JsonGetter("account_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccountType2Enum getAccountType() {
        return accountType;
    }

    /**
     * Setter for AccountType.
     * Account type
     * @param accountType Value for AccountType2Enum
     */
    @JsonSetter("account_type")
    public void setAccountType(AccountType2Enum accountType) {
        this.accountType = accountType;
    }

    /**
     * Getter for DobYear.
     * Used for certain ACH transactions where Identity Verification is enabled on the terminal
     * being used.
     * @return Returns the String
     */
    @JsonGetter("dob_year")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDobYear() {
        return dobYear;
    }

    /**
     * Setter for DobYear.
     * Used for certain ACH transactions where Identity Verification is enabled on the terminal
     * being used.
     * @param dobYear Value for String
     */
    @JsonSetter("dob_year")
    public void setDobYear(String dobYear) {
        this.dobYear = dobYear;
    }

    /**
     * Getter for IsCompany.
     * This identifies whether the ACH account belongs to a company or individual. This can affect
     * which SEC code is used when attempting to run a transaction.
     * @return Returns the Boolean
     */
    @JsonGetter("is_company")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsCompany() {
        return isCompany;
    }

    /**
     * Setter for IsCompany.
     * This identifies whether the ACH account belongs to a company or individual. This can affect
     * which SEC code is used when attempting to run a transaction.
     * @param isCompany Value for Boolean
     */
    @JsonSetter("is_company")
    public void setIsCompany(Boolean isCompany) {
        this.isCompany = isCompany;
    }

    /**
     * Getter for Routing.
     * Required for ACH. The Routing Number for the bank account being used.
     * @return Returns the String
     */
    @JsonGetter("routing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRouting() {
        return routing;
    }

    /**
     * Setter for Routing.
     * Required for ACH. The Routing Number for the bank account being used.
     * @param routing Value for String
     */
    @JsonSetter("routing")
    public void setRouting(String routing) {
        this.routing = routing;
    }

    /**
     * Converts this V1TokensAchRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V1TokensAchRequest1 [" + "accountHolderName=" + accountHolderName
                + ", accountNumber=" + accountNumber + ", accountVaultApiId=" + accountVaultApiId
                + ", accountvaultC1=" + accountvaultC1 + ", accountvaultC2=" + accountvaultC2
                + ", accountvaultC3=" + accountvaultC3 + ", achSecCode=" + achSecCode
                + ", billingAddress=" + billingAddress + ", billingCity=" + billingCity
                + ", billingPhone=" + billingPhone + ", billingState=" + billingState
                + ", billingZip=" + billingZip + ", contactId=" + contactId + ", customerId="
                + customerId + ", driversLicense=" + driversLicense + ", locationId=" + locationId
                + ", previousAccountVaultApiId=" + previousAccountVaultApiId
                + ", previousAccountVaultId=" + previousAccountVaultId + ", previousTransactionId="
                + previousTransactionId + ", ssn4=" + ssn4 + ", termsAgree=" + termsAgree
                + ", termsAgreeIp=" + termsAgreeIp + ", title=" + title + ", accountType="
                + accountType + ", dobYear=" + dobYear + ", isCompany=" + isCompany + ", routing="
                + routing + "]";
    }

    /**
     * Builds a new {@link V1TokensAchRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V1TokensAchRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountHolderName(getAccountHolderName())
                .accountNumber(getAccountNumber())
                .accountVaultApiId(getAccountVaultApiId())
                .accountvaultC1(getAccountvaultC1())
                .accountvaultC2(getAccountvaultC2())
                .accountvaultC3(getAccountvaultC3())
                .achSecCode(getAchSecCode())
                .billingAddress(getBillingAddress())
                .billingCity(getBillingCity())
                .billingPhone(getBillingPhone())
                .billingState(getBillingState())
                .billingZip(getBillingZip())
                .contactId(getContactId())
                .customerId(getCustomerId())
                .driversLicense(getDriversLicense())
                .locationId(getLocationId())
                .previousAccountVaultApiId(getPreviousAccountVaultApiId())
                .previousAccountVaultId(getPreviousAccountVaultId())
                .previousTransactionId(getPreviousTransactionId())
                .ssn4(getSsn4())
                .termsAgree(getTermsAgree())
                .termsAgreeIp(getTermsAgreeIp())
                .title(getTitle())
                .accountType(getAccountType())
                .dobYear(getDobYear())
                .isCompany(getIsCompany())
                .routing(getRouting());
        return builder;
    }

    /**
     * Class to build instances of {@link V1TokensAchRequest1}.
     */
    public static class Builder {
        private String accountHolderName;
        private String accountNumber;
        private String accountVaultApiId;
        private String accountvaultC1;
        private String accountvaultC2;
        private String accountvaultC3;
        private String achSecCode;
        private String billingAddress;
        private String billingCity;
        private String billingPhone;
        private String billingState;
        private String billingZip;
        private String contactId;
        private String customerId;
        private DriversLicense driversLicense;
        private String locationId;
        private String previousAccountVaultApiId;
        private String previousAccountVaultId;
        private String previousTransactionId;
        private String ssn4;
        private Boolean termsAgree;
        private String termsAgreeIp;
        private String title;
        private AccountType2Enum accountType;
        private String dobYear;
        private Boolean isCompany;
        private String routing;



        /**
         * Setter for accountHolderName.
         * @param  accountHolderName  String value for accountHolderName.
         * @return Builder
         */
        public Builder accountHolderName(String accountHolderName) {
            this.accountHolderName = accountHolderName;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for accountVaultApiId.
         * @param  accountVaultApiId  String value for accountVaultApiId.
         * @return Builder
         */
        public Builder accountVaultApiId(String accountVaultApiId) {
            this.accountVaultApiId = accountVaultApiId;
            return this;
        }

        /**
         * Setter for accountvaultC1.
         * @param  accountvaultC1  String value for accountvaultC1.
         * @return Builder
         */
        public Builder accountvaultC1(String accountvaultC1) {
            this.accountvaultC1 = accountvaultC1;
            return this;
        }

        /**
         * Setter for accountvaultC2.
         * @param  accountvaultC2  String value for accountvaultC2.
         * @return Builder
         */
        public Builder accountvaultC2(String accountvaultC2) {
            this.accountvaultC2 = accountvaultC2;
            return this;
        }

        /**
         * Setter for accountvaultC3.
         * @param  accountvaultC3  String value for accountvaultC3.
         * @return Builder
         */
        public Builder accountvaultC3(String accountvaultC3) {
            this.accountvaultC3 = accountvaultC3;
            return this;
        }

        /**
         * Setter for achSecCode.
         * @param  achSecCode  String value for achSecCode.
         * @return Builder
         */
        public Builder achSecCode(String achSecCode) {
            this.achSecCode = achSecCode;
            return this;
        }

        /**
         * Setter for billingAddress.
         * @param  billingAddress  String value for billingAddress.
         * @return Builder
         */
        public Builder billingAddress(String billingAddress) {
            this.billingAddress = billingAddress;
            return this;
        }

        /**
         * Setter for billingCity.
         * @param  billingCity  String value for billingCity.
         * @return Builder
         */
        public Builder billingCity(String billingCity) {
            this.billingCity = billingCity;
            return this;
        }

        /**
         * Setter for billingPhone.
         * @param  billingPhone  String value for billingPhone.
         * @return Builder
         */
        public Builder billingPhone(String billingPhone) {
            this.billingPhone = billingPhone;
            return this;
        }

        /**
         * Setter for billingState.
         * @param  billingState  String value for billingState.
         * @return Builder
         */
        public Builder billingState(String billingState) {
            this.billingState = billingState;
            return this;
        }

        /**
         * Setter for billingZip.
         * @param  billingZip  String value for billingZip.
         * @return Builder
         */
        public Builder billingZip(String billingZip) {
            this.billingZip = billingZip;
            return this;
        }

        /**
         * Setter for contactId.
         * @param  contactId  String value for contactId.
         * @return Builder
         */
        public Builder contactId(String contactId) {
            this.contactId = contactId;
            return this;
        }

        /**
         * Setter for customerId.
         * @param  customerId  String value for customerId.
         * @return Builder
         */
        public Builder customerId(String customerId) {
            this.customerId = customerId;
            return this;
        }

        /**
         * Setter for driversLicense.
         * @param  driversLicense  DriversLicense value for driversLicense.
         * @return Builder
         */
        public Builder driversLicense(DriversLicense driversLicense) {
            this.driversLicense = driversLicense;
            return this;
        }

        /**
         * Setter for locationId.
         * @param  locationId  String value for locationId.
         * @return Builder
         */
        public Builder locationId(String locationId) {
            this.locationId = locationId;
            return this;
        }

        /**
         * Setter for previousAccountVaultApiId.
         * @param  previousAccountVaultApiId  String value for previousAccountVaultApiId.
         * @return Builder
         */
        public Builder previousAccountVaultApiId(String previousAccountVaultApiId) {
            this.previousAccountVaultApiId = previousAccountVaultApiId;
            return this;
        }

        /**
         * Setter for previousAccountVaultId.
         * @param  previousAccountVaultId  String value for previousAccountVaultId.
         * @return Builder
         */
        public Builder previousAccountVaultId(String previousAccountVaultId) {
            this.previousAccountVaultId = previousAccountVaultId;
            return this;
        }

        /**
         * Setter for previousTransactionId.
         * @param  previousTransactionId  String value for previousTransactionId.
         * @return Builder
         */
        public Builder previousTransactionId(String previousTransactionId) {
            this.previousTransactionId = previousTransactionId;
            return this;
        }

        /**
         * Setter for ssn4.
         * @param  ssn4  String value for ssn4.
         * @return Builder
         */
        public Builder ssn4(String ssn4) {
            this.ssn4 = ssn4;
            return this;
        }

        /**
         * Setter for termsAgree.
         * @param  termsAgree  Boolean value for termsAgree.
         * @return Builder
         */
        public Builder termsAgree(Boolean termsAgree) {
            this.termsAgree = termsAgree;
            return this;
        }

        /**
         * Setter for termsAgreeIp.
         * @param  termsAgreeIp  String value for termsAgreeIp.
         * @return Builder
         */
        public Builder termsAgreeIp(String termsAgreeIp) {
            this.termsAgreeIp = termsAgreeIp;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for accountType.
         * @param  accountType  AccountType2Enum value for accountType.
         * @return Builder
         */
        public Builder accountType(AccountType2Enum accountType) {
            this.accountType = accountType;
            return this;
        }

        /**
         * Setter for dobYear.
         * @param  dobYear  String value for dobYear.
         * @return Builder
         */
        public Builder dobYear(String dobYear) {
            this.dobYear = dobYear;
            return this;
        }

        /**
         * Setter for isCompany.
         * @param  isCompany  Boolean value for isCompany.
         * @return Builder
         */
        public Builder isCompany(Boolean isCompany) {
            this.isCompany = isCompany;
            return this;
        }

        /**
         * Setter for routing.
         * @param  routing  String value for routing.
         * @return Builder
         */
        public Builder routing(String routing) {
            this.routing = routing;
            return this;
        }

        /**
         * Builds a new {@link V1TokensAchRequest1} object using the set fields.
         * @return {@link V1TokensAchRequest1}
         */
        public V1TokensAchRequest1 build() {
            return new V1TokensAchRequest1(accountHolderName, accountNumber, accountVaultApiId,
                    accountvaultC1, accountvaultC2, accountvaultC3, achSecCode, billingAddress,
                    billingCity, billingPhone, billingState, billingZip, contactId, customerId,
                    driversLicense, locationId, previousAccountVaultApiId, previousAccountVaultId,
                    previousTransactionId, ssn4, termsAgree, termsAgreeIp, title, accountType,
                    dobYear, isCompany, routing);
        }
    }
}
