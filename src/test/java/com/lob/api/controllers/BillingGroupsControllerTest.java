/*
 * LobAPI20200211SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.lob.api.ApiHelper;
import com.lob.api.DateTimeHelper;
import com.lob.api.LobAPI20200211SpecificationClient;
import com.lob.api.exceptions.ApiException;
import com.lob.api.models.BillingGroup;
import com.lob.api.models.BillingGroupEditable;
import com.lob.api.models.BillingGroupsResponse;
import com.lob.api.testing.TestHelper;
import java.time.LocalDateTime;
import java.util.LinkedHashMap;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class BillingGroupsControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static LobAPI20200211SpecificationClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static BillingGroupsController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getBillingGroupsController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Returns a list of your billing_groups. The billing_groups are returned sorted by creation
     * date, with the most recently created billing_groups appearing first.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestListBillingGroups() throws Exception {
        // Parameters for the API call
        Integer limit = 10;
        Integer offset = 0;
        Object include = null;
        LocalDateTime dateCreated = null;
        LocalDateTime dateModified = null;
        Object sortBy = null;

        // Set callback and perform API call
        BillingGroupsResponse result = null;
        try {
            result = controller.listBillingGroups(limit, offset, include, dateCreated, dateModified, sortBy);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"data\":[{\"id\":\"bg_d5a5a89da9106f8\",\"description\":\"Test billing_group\","
                + "\"metadata\":{},\"date_created\":\"2019-07-27T23:49:01.511Z\",\"date_modified\":"
                + "\"2019-07-27T23:49:01.511Z\",\"object\":\"billing_group\"},{\"id\":\"bg_59b2150a"
                + "e120887\",\"description\":\"Test billing_group\",\"metadata\":{},\"date_created"
                + "\":\"2019-03-29T10:22:34.642Z\",\"date_modified\":\"2019-03-29T10:22:34.642Z\","
                + "\"object\":\"billing_group\"}],\"object\":\"list\",\"next_url\":null,\"prev_url"
                + "\":null,\"count\":2}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

    /**
     * Creates a new billing_group with the provided properties.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestCreateBillingGroup() throws Exception {
        // Parameters for the API call
        BillingGroupEditable body = ApiHelper.deserialize(
                "{\"name\":\"Marketing Dept\",\"description\":\"Usage group used for the Marketing "
                + "Dept resource sends\"}",
                BillingGroupEditable.class);

        // Set callback and perform API call
        BillingGroup result = null;
        try {
            result = controller.createBillingGroup(body);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("ratelimit-limit", TestHelper.nullString);
        headers.put("ratelimit-remaining", TestHelper.nullString);
        headers.put("ratelimit-reset", TestHelper.nullString);
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"id\":\"bg_c94e83ca2cd5121\",\"name\":\"Marketing Dept\",\"description\":\"Usage"
                + " group used for the Marketing Dept resource sends\",\"date_created\":\"2017-11-0"
                + "7T22:56:10.962Z\",\"date_modified\":\"2017-11-07T22:56:10.962Z\",\"object\":\"bi"
                + "lling_group\"}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

}
